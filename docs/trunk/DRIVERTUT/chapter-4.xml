<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML//EN"
"docbook.dtd" [
<!ENTITY % xinclude SYSTEM "xinclude.mod">
%xinclude;
]>
<chapter version="5.0" xmlns="http://docbook.org/ns/docbook" xml:id="eoqrv">
  <title>Tips for Developing Device Drivers</title>

  <toc>
    <para><indexterm xml:id="indexterm-536">
        <primary>device drivers</primary>

        <secondary>development guidelines</secondary>
      </indexterm>W tym rozdziale przedstawiono pewne ogólne wskazówki
    dotyczące pisania sterowników urządzeń.</para>

    <itemizedlist>
      <para>Wskazówki poszeregowane są w cztery kategorie:</para>

      <listitem>
        <para><olink remap="internal" targetdoc="chapter-4.xml"
        targetptr="fdlbn">Device Driver Coding Tips</olink></para>
      </listitem>

      <listitem>
        <para><olink remap="internal" targetdoc="chapter-4.xml"
        targetptr="fdlbq">Device Driver Testing Tips</olink></para>
      </listitem>

      <listitem>
        <para><olink remap="internal" targetdoc="chapter-4.xml"
        targetptr="fdlbo">Device Driver Debugging and Tuning
        Tips</olink></para>
      </listitem>
    </itemizedlist>
  </toc>

  <sect1 xml:id="fdlbn">
    <title>Device Driver Coding Tips</title>

    <indexterm xml:id="indexterm-537">
      <primary>device drivers</primary>

      <secondary>coding tips</secondary>
    </indexterm>

    <itemizedlist>
      <para>Podczas pisania sterownika dla urządzenia należy postępować
      zgodnie z poniższymi wytycznymi:</para>

      <listitem>
        <para><indexterm xml:id="indexterm-538">
            <primary>naming conventions</primary>
          </indexterm> <indexterm xml:id="indexterm-539">
            <primary>device drivers</primary>

            <secondary>naming conventions</secondary>
          </indexterm>Funkcje i zmienne globalne należy nazywać unikalnie przy
        użyciu prefiksu opartego na nazwie urządzenia.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-540">
            <primary>commands</primary>

            <secondary><command>add_drv</command></secondary>
          </indexterm> <indexterm xml:id="indexterm-541">
            <primary><command>add_drv</command> command</primary>

            <secondary>use in modifying existing drivers</secondary>
          </indexterm>Jeśli korzysta się ze źródeł istniejącego sterownika,
        należy pamiętać o zmodyfikowaniu pliku konfiguracyjnego przed dodaniem
        sterownika.</para>

        <para>Opcja <option>n</option> komendy <olink remap="external"
        targetdoc="819-2240" targetptr="add-drv-1m"> <citerefentry>
            <refentrytitle>add_drv</refentrytitle>

            <manvolnum>1M</manvolnum>
          </citerefentry> </olink> pozwala na uaktualnienie konfiguracji
        systemowej bez ładowania lub podłączania sterownika.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-542">
            <primary><function>cmn_err </function> kernel function</primary>
          </indexterm> <indexterm xml:id="indexterm-543">
            <primary>kernel functions</primary>

            <secondary><function>cmn_err </function></secondary>
          </indexterm> <indexterm xml:id="indexterm-544">
            <primary><function>printf </function> function</primary>
          </indexterm> <indexterm xml:id="indexterm-545">
            <primary>functions</primary>

            <secondary><function>printf </function></secondary>
          </indexterm>Do zapisywania danych w dzienniku systemowym należy
        używać funkcji <function>cmn_err</function>.</para>

        <para>Funkcji <olink remap="external" targetdoc="819-2256"
        targetptr="cmn-err-9f"> <citerefentry>
            <refentrytitle>cmn_err</refentrytitle>

            <manvolnum>9F</manvolnum>
          </citerefentry> </olink> można użyć do drukowania informacji ze
        sterownika podobnie do drukowania informacji z programu użytkownika.
        Funkcja <citerefentry>
            <refentrytitle>cmn_err</refentrytitle>

            <manvolnum>9F</manvolnum>
          </citerefentry> zapisuje komunikaty o niskim priorytecie do
        <filename>/dev/log</filename>. Daemon <olink remap="external"
        targetdoc="819-2240" targetptr="syslogd-1m"> <citerefentry>
            <refentrytitle>syslogd</refentrytitle>

            <manvolnum>1M</manvolnum>
          </citerefentry> </olink> odczytuje komunikaty z
        <filename>/dev/log</filename> zapisuje te o niskim priorytecie do
        pliku <filename>/var/adm/messages</filename>. Poniższa komenda pozwala
        obserwować wyjście z komendy <citerefentry>
            <refentrytitle>cmn_err</refentrytitle>

            <manvolnum>9F</manvolnum>
          </citerefentry>:</para>

        <screen>% <userinput>tail -f /var/adm/messages</userinput>
</screen>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-546">
            <primary>device drivers</primary>

            <secondary>recommended housekeeping</secondary>
          </indexterm>Kiedy sterownik kończy działanie musi uwolnić
        zaalokowane obszary i usunąć zainicjalizowane dane.</para>

        <para>Kiedy sterownik kończy działanie, czy to planowo czy
        przedwcześnie, musi wykonać takie czynności jak zamknięcie otwartych
        plików, uwolnić zaalokowaną pamięć, uwolnić muteksy i zniszczyć
        stworzone przez siebie muteksy. Dodatkowo system musi mieć możliwość
        zamknąć wszystkie młodsze węzły urządzenia i odłączyć instancję
        sterownika nawet po awarii sprzętu. Uporządkowane podejście to
        postępowanie odwrotne w <function>_fini</function> do działań
        podejmowanych w <function>_init</function> oraz odwrócenie działań z
        <function>open</function> w funkcji <function>close</function> a także
        odwrócenie działań z funkcji <function>attach</function> w funkcji
        <function>detach</function>.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-547">
            <primary><function>ASSERT </function> kernel function</primary>
          </indexterm> <indexterm xml:id="indexterm-548">
            <primary>kernel functions</primary>

            <secondary><function>ASSERT </function></secondary>
          </indexterm>Nieoczekiwane zwroty błędów należy wyłapywać za pomocą
        <olink remap="external" targetdoc="819-2256" targetptr="uc-assert-9f">
        <citerefentry>
            <refentrytitle>ASSERT</refentrytitle>

            <manvolnum>9F</manvolnum>
          </citerefentry> </olink>.</para>

        <para><function>ASSERT</function> to jest makro zatrzymujące pracę
        jądra w przypadku, gdy wyrażenie, którego oczekiwana zwracana wartość
        wynosi "prawda" zwróci "fałsz". Aby uaktywnić <function>ASSERT
        </function>należy włączyć plik nagłówkowy
        <literal>sys/debug.h</literal> i zdefiniować symbol preprocesora
        <literal>DEBUG</literal> podczas kompilacji.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-549">
            <primary><function>mutex_owned </function> kernel
            function</primary>
          </indexterm> <indexterm xml:id="indexterm-550">
            <primary>kernel functions</primary>

            <secondary><function>mutex_owned </function></secondary>
          </indexterm>Do sprawdzania poprawności i dokumentowania wymagań
        blokowania należy używać <function>mutex_owned</function>.</para>

        <para>Funkcja <olink remap="external" targetdoc="819-2256"
        targetptr="mutex-owned-9f"> <citerefentry>
            <refentrytitle>mutex_owned</refentrytitle>

            <manvolnum>9F</manvolnum>
          </citerefentry> </olink> pomaga ustalić, czy aktualny wątek jest
        właścicielem konkretnego muteksu. Sprawdzenia czy mutex jest
        przetrzymywany przez wątek dokonuje się za pomocą
        <function>mutex_owned</function> wywoływanej wewnątrz
        <function>ASSERT</function>.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-551">
            <primary>conditional compilation</primary>
          </indexterm> <indexterm xml:id="indexterm-552">
            <primary>device drivers</primary>

            <secondary>conditional compilation</secondary>
          </indexterm>Do włączania i wyłączania "kosztownych" opcji
        debugowania należy używać kompilacji warunkowych.</para>

        <para>System operacyjny Solaris zawiera wiele funkcji debugujących,
        takie jak <function>assert</function> i
        <function>mutex-owned</function>, które można włączyć przez
        zdefiniowanie symbolu preprocesora <literal>DEBUG</literal> podczas
        kompilacji sterownika. Przy użyciu kompilacji warunkowej można pozbyć
        się niepotrzebnego kodu ze sterownika produkcyjnego. Można tego
        dokonać też przy użyciu zmiennej globalnej.</para>
      </listitem>

      <listitem>
        <para>Do każdego urządzenia należy używać osobnej instancji
        sterownika.</para>
      </listitem>

      <listitem>
        <para>Należy używać funkcji DDI wszędzie, gdzie to tylko możliwe w
        sterowniku.</para>

        <para>Wspomniane interfejsy osłaniają sterowniki przed szczegółami
        zależnymi od platformy, takimi jak niezgodność procesora i
        endianowością urządzenia oraz innymi zależnościami od porządku danych.
        Dzięki tym interfejsom jedno źródło daje się używać na platformach
        SPARC, x86 i innych powiązanych architekturach procesora.</para>
      </listitem>

      <listitem>
        <para>Należy spodziewać się uszkodzonych danych.</para>

        <para>Zawsze przed użyciem danych należy sprawdzić ich poprawność.
        Sterownik musi unikać przekazywania uszkodzonych danych do
        systemu.</para>
      </listitem>

      <listitem>
        <para>Urządzenia powinny pisać tylko do kanałów DMA kontrolowanych
        wyłącznie przez sterownik.</para>

        <para>Pozwala to na zapobieganie uszkodzeniom danych w pamięci systemu
        przez uszkodzenie DMA.</para>
      </listitem>

      <listitem>
        <para>Do wykonywania transferów DMA należy zawsze używać funkcji
        <olink remap="external" targetdoc="819-2256"
        targetptr="ddi-umem-alloc-9f"> <citerefentry>
            <refentrytitle>ddi_umem_alloc</refentrytitle>

            <manvolnum>9F</manvolnum>
          </citerefentry> </olink>.</para>

        <para>Funkcja gwarantuje, że przesyłane są tylko kompletne i wyrównane
        strony.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-553">
            <primary>interrupts</primary>

            <secondary>avoiding problems</secondary>
          </indexterm>Należy ustalić skończoną liczbę prób przed zmianą
        sposobu wyjścia z zablokowanego przerwania.</para>

        <para>Sterownik urządzenia nie może w nieskończoność zajmować zasobów
        systemu, jeśli urządzenie się zablokuje. Sterownik powinien przerwać
        oczekiwanie, jeśli urządzenie ciągle twierdzi, że jest zajęte.
        Sterownik powinien również wykrywać patologiczne (zablokowane) żądania
        przerwań i podjąć odpowiednie działania.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-554">
            <primary>mutexes</primary>

            <secondary>avoiding problems</secondary>
          </indexterm>Kolejność zajmowania i zwalniania muteksów musi być
        ustalona z uwagą, aby uniknąć niepotrzebnej interakcji między wątkami,
        jeśli urządzenie zawiedzie.</para>

        <para>Więcej informacji w <olink remap="external" targetdoc="819-3196"
        targetptr="thread-interaction"> <citetitle remap="section">Thread
        Interaction</citetitle> in <citetitle remap="book">Writing Device
        Drivers</citetitle> </olink>.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-555">
            <primary><function>ioctl </function> requests</primary>

            <secondary>avoiding problems</secondary>
          </indexterm>Należy sprawdzać poprawność żądań
        <function>ioctl</function> z programów przestrzeni użytkownika.</para>

        <para>Żądania z przestrzeni użytkownika mogą być potencjalnie i z
        zamysłem niszczycielskie. Projekt sterownika powinna brać pod uwagę
        konstrukcję każdego potencjalnego żądania
        <function>ioctl</function>.</para>
      </listitem>

      <listitem>
        <para>Należy unikać możliwości pracy sterownika bez wykrycia
        uszkodzenia urządzenia.</para>

        <para>Sterownik powinien przełączyć się na inne urządzenie zamiast
        próbować obejść uszkodzenie aktualnego urządzenia.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-556">
            <primary>hotplugging</primary>
          </indexterm>Wszystkie sterowniki urządzeń w systemie operacyjnym
        Solaris muszą obsługiwać hotplugging.</para>

        <para>Sterowniki muszą zezwalać na włączenie i odłączenie ich bez
        restartu systemu.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-557">
            <primary>power management</primary>
          </indexterm>Wszystkie sterowniki urządzeń muszą obsługiwać
        zarządzanie zasilaniem.</para>

        <para>Zarządzanie zasilaniem umożliwia kontrolowanie i zarządzanie
        zużyciem energii elektrycznej systemu komputerowego lub urządzenia.
        Pozwala na oszczędzanie energii przez mniejsze zużycie, kiedy system
        jest nisko obciążony oraz wyłączenie go kiedy jest nieużywany.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-558">
            <primary><literal>volatile</literal> keyword</primary>
          </indexterm>Każdą zmienną wskazującą na sterownik urządzenia należy
        zadeklarować jako <literal>volatile</literal>.</para>

        <para>Bez słowa kluczowego <literal>volatile</literal> optymizator
        kompilowanego kodu może usunąć ważne dostępy do rejestru.</para>
      </listitem>

      <listitem>
        <para>Należy wykonywać czasowe testy zdrowia aby wykryć uszkodzone
        urządzenia.</para>

        <itemizedlist>
          <para>Czasowe testy zdrowia powinny zawierać poniższe kroki:</para>

          <listitem>
            <para>Sprawdzenie każdego rejestru i miejsca w pamięci, których
            zawartość mogła ulec zmianie od ostatniego testu.</para>
          </listitem>

          <listitem>
            <para>Nakładanie oznaczeń czasu na wychodzące żądania, takie jak
            przesyłanie bloków lub komendy wydawane przez sterownik.</para>
          </listitem>

          <listitem>
            <para>Rozpoczęcie testu, który koniecznie musi zostać ukończony
            przez następnym przewidzianym testem.</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1 xml:id="fdlbq">
    <title>Device Driver Testing Tips</title>

    <indexterm xml:id="indexterm-559">
      <primary>device drivers</primary>

      <secondary>testing</secondary>
    </indexterm>

    <indexterm xml:id="indexterm-560">
      <primary>testing device drivers</primary>
    </indexterm>

    <para>Testowanie urządzenia może spowodować, że system spanikuje lub może
    uszkodzić jądro.</para>

    <itemizedlist>
      <para>Poniższe podpowiedzi mogą pomóc uniknąć problemów podczas
      testowania sterownika:</para>

      <listitem>
        <para><indexterm xml:id="indexterm-561">
            <primary>device drivers</primary>

            <secondary>installing</secondary>
          </indexterm> <indexterm xml:id="indexterm-562">
            <primary>entry points</primary>

            <secondary><function>_info </function></secondary>
          </indexterm> <indexterm xml:id="indexterm-563">
            <primary><function>_info </function> entry point</primary>
          </indexterm> <indexterm xml:id="indexterm-564">
            <primary>entry points</primary>

            <secondary><function>_init </function></secondary>
          </indexterm> <indexterm xml:id="indexterm-565">
            <primary><function>_init </function> entry point</primary>
          </indexterm> <indexterm xml:id="indexterm-566">
            <primary>entry points</primary>

            <secondary><function>attach </function></secondary>
          </indexterm> <indexterm xml:id="indexterm-567">
            <primary><function>attach </function> entry point</primary>
          </indexterm>Instalowanie sterownika w tymczasowym miejscu.</para>

        <para>Sterownik należy instalować w katalogu <filename>/tmp</filename>
        dopóki nie ukończono testów i modyfikacji funkcji
        <function>_info</function>, <function>_init</function> i
        <function>attach</function>. Wykonuje się to przez skopiowanie pliku
        wykonywalnego sterownika do katalogu <filename>/tmp</filename> i
        stworzenie dowiązania w katalogu sterowników jądra.</para>

        <para>Jeśli w funkcjach <function>_info</function>,
        <function>_init</function> lub <function>attach</function> sterownika
        są błędy, system może w nieskończoność panikować. System operacyjny
        Solaris automatycznie restartuje się po spanikowaniu. Również podczas
        startu systemu ładuje wszystkie sterowniki, które mu się uda. Jeśli w
        funkcji <function>attach</function> jest błąd powodujący panikę
        systemu podczas ładowania sterownika, system spanikuje ponownie
        podczas próby uruchomienia systemu po pierwszej panice. System wpadnie
        w pętlę panika, restart, panika próbując ładować zepsuty sterownik
        przy każdym uruchomieniu systemu.</para>

        <para>Pętli tej można uniknąć kopiując plik sterownika do katalogu
        <filename>/tmp</filename> aż do ukończenia testów. System operacyjny
        Solaris usuwa wszystkie pliki z katalogu <filename>/tmp</filename>
        przy każdym restarcie. Jeśli sterownik spowoduje panikę, system
        zrestartuje się poprawnie, ponieważ plik sterownika zostanie
        automatycznie usunięty z katalogu <filename>/tmp</filename>.
        Dowiązanie w katalogu sterowników jądra będzie wtedy wskazywało puste
        miejsce, system nie załaduje sterownika i nie spanikuje. Można wtedy
        zmienić sterownik, znowu umieścić jego wersję skompilowaną w katalogu
        <filename>/tmp</filename> i kontynuować testy. Kiedy sterownik jest
        ukończony i przetestowany, należy przenieść go do katalogu
        <filename>/usr/kernel/drv</filename> dzięki czemu będzie ładowany przy
        każdym restarcie systemu.</para>

        <para>Poniżej przestawiono przykładowe dowiązanie dla platformy
        32bitowej. Więcej informacji o innych architekturach w <olink
        remap="external" targetdoc="chapter-1.xml"
        targetptr="fsfqv">Installing a Driver</olink>.</para>

        <screen># <userinput>cp mydriver /tmp</userinput>
# <userinput>ln -s /tmp/mydriver /usr/kernel/drv/mydriver</userinput>
</screen>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-568">
            <primary>serial connections</primary>

            <secondary>use in testing</secondary>
          </indexterm>Maszynę testową należy kontrolować z innego komputera
        przez konsolę szeregową.</para>

        <para>Technikę tę wyjaśniono w <olink remap="external"
        targetdoc="819-3196" targetptr="debug-62"> <citetitle
        remap="section">Testing With a Serial Connection</citetitle> in
        <citetitle remap="book">Writing Device Drivers</citetitle>
        </olink>.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-569">
            <primary>alternate kernels</primary>

            <secondary>use in testing</secondary>
          </indexterm>Użycie alternatywnego jądra.</para>

        <para>Startowanie systemu z kopii jądra i powiązanych plików zamiast z
        oryginalnego jądra pozwala uniknąć nieodwracalnego unieruchomienia
        systemu.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-570">
            <primary>kernel modules</primary>

            <secondary>use in testing</secondary>
          </indexterm>Do eksperymentowania ze zmiennymi jądra należy używać
        odrębnego modułu.</para>

        <para>Podejście to izoluje testowanie zmiennych jądra. Więcej w <olink
        remap="external" targetdoc="819-3196" targetptr="eupvl"> <citetitle
        remap="section">Setting Up Test Modules</citetitle> in <citetitle
        remap="book">Writing Device Drivers</citetitle> </olink>.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-571">
            <primary>data loss</primary>

            <secondary>avoiding while testing</secondary>
          </indexterm>Należy zaplanować postępowanie w przypadku utraty danych
        na systemie testowym.</para>

        <para>Jeśli system testowy jest klientem serwera, w razie problemów
        może wystartować z sieci. Można też utworzyć specjalną partycję do
        przetrzymywania kopii poprawnego głównego systemu plików. Więcej
        informacji w <olink remap="external" targetdoc="819-3196"
        targetptr="debug-70"> <citetitle remap="section">Avoiding Data Loss on
        a Test System</citetitle> in <citetitle remap="book">Writing Device
        Drivers</citetitle> </olink>.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-572">
            <primary>crash dumps</primary>

            <secondary>use in testing</secondary>
          </indexterm> <indexterm xml:id="indexterm-573">
            <primary>system crash dumps</primary>

            <secondary>use in testing</secondary>
          </indexterm>Zrzuty systemu po panice należy przechwytywać.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-574">
            <primary><command>fsck</command> command</primary>
          </indexterm> <indexterm xml:id="indexterm-575">
            <primary>commands</primary>

            <secondary><command>fsck</command></secondary>
          </indexterm>Do naprawienia głównego systemu plików po panice służy
        narzędzie <olink remap="external" targetdoc="819-2240"
        targetptr="fsck-1m"> <citerefentry>
            <refentrytitle>fsck</refentrytitle>

            <manvolnum>1M</manvolnum>
          </citerefentry> </olink>. Można dzięki temu odzyskać zrzuty systemu.
        Więcej informacji w <olink remap="external" targetdoc="819-3196"
        targetptr="debug-74"> <citetitle remap="section">Recovering the Device
        Directory</citetitle> in <citetitle remap="book">Writing Device
        Drivers</citetitle> </olink>.</para>
      </listitem>

      <listitem>
        <para>Aż do momentu zakończenia testów funkcji
        <function>_info</function>, <function>_init</function> i
        <function>attach</function> sterownik należy instalować w katalogu
        <filename>/tmp</filename>.</para>

        <para>Aż do ukończenia testów sterownika powinien być instalowany w
        katalogu <filename>/tmp</filename>. W przypadku paniki zostanie
        usunięty i system wystartuje poprawnie.</para>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1 xml:id="fdlbo">
    <title>Device Driver Debugging and Tuning Tips</title>

    <indexterm xml:id="indexterm-576">
      <primary>device drivers</primary>

      <secondary>debugging tips</secondary>
    </indexterm>

    <indexterm xml:id="indexterm-577">
      <primary>debugging device drivers</primary>

      <secondary>tips</secondary>
    </indexterm>

    <indexterm xml:id="indexterm-578">
      <primary>device drivers</primary>

      <secondary>tuning</secondary>
    </indexterm>

    <indexterm xml:id="indexterm-579">
      <primary>tuning device drivers</primary>

      <secondary>tips</secondary>
    </indexterm>

    <itemizedlist>
      <para>System operacyjny Solaris zawiera kilka narzędzi do debugowania i
      optymalizowania sterownika:</para>

      <listitem>
        <para>Podczas wykonywania komendy <citerefentry>
            <refentrytitle>add_drv</refentrytitle>

            <manvolnum>1M</manvolnum>
          </citerefentry> system może wydrukować następujący komunikat:</para>

        <programlisting>Warning: Driver (<replaceable>driver_name</replaceable>) successfully added to system but failed to attach</programlisting>

        <itemizedlist>
          <para>Może to być spowodowane jednym z poniższych:</para>

          <listitem>
            <para>Urządzenie nie zostało prawidłowo wykryte i system go nie
            znalazł.</para>
          </listitem>

          <listitem>
            <para>Brakuje pliku konfiguracyjnego. Więcej o plikach
            konfiguracyjnych sterowników oraz o tym, co się powinno w nich
            znaleźć w <olink remap="external" targetdoc="chapter-1.xml"
            targetptr="ganar">Writing a Configuration File</olink>. Należy
            upewnić się, że plik konfiguracyjny znajduje się w katalogu
            <filename>/kernel/drv</filename> lub
            <filename>/usr/kernel/drv</filename> i <emphasis>nie</emphasis>
            znajduje się w katalogu sterownika.</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-580">
            <primary><command>kmdb</command> kernel debugger</primary>
          </indexterm>Debugowanie w trakcie wykonywania systemu można
        wykonywać narzędziem <olink remap="external" targetdoc="819-2239"
        targetptr="kmdb-1"> <citerefentry>
            <refentrytitle>kmdb</refentrytitle>

            <manvolnum>1</manvolnum>
          </citerefentry> </olink>.</para>

        <para>Debugger jądra <command>kmdb</command> zawiera typowe narzędzia
        do debugowanie w czasie wykonywania, takie jak punkty przerwania (ang.
        breakpoints), punkty obserwacyjne (ang. watchpoints) i wykonywanie
        krok po kroku (ang. single-stepping). Więcej informacji w <olink
        remap="external" targetdoc="816-5041"> <citetitle remap="book">Solaris
        Modular Debugger Guide</citetitle> </olink>.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-581">
            <primary><command>mdb</command> modular debugger</primary>
          </indexterm>Do debugowania pośmiertnego (łac. postmortem) używa się
        debuggera modułowego <olink remap="external" targetdoc="819-2239"
        targetptr="mdb-1"> <citerefentry>
            <refentrytitle>mdb</refentrytitle>

            <manvolnum>1</manvolnum>
          </citerefentry> </olink>.</para>

        <para>Debugowanie pośmiertne wykonywane jest na zrzucie systemu (ang.
        crash dump). Ten sam zrzut może być analizowany równocześnie przez
        kilku ludzi. Dodatkowo <command>mdb</command> umożliwia tworzenie
        specjalnych makr nazywanych <emphasis>dmodami (ang. dmods)</emphasis>
        służących wykonywaniu bardzo szczegółowej i uporządkowanej analizie
        zrzutu. Więcej informacji w <olink remap="external"
        targetdoc="816-5041"> <citetitle remap="book">Solaris Modular Debugger
        Guide</citetitle> </olink>.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-582">
            <primary><function>kstat </function> function</primary>
          </indexterm> <indexterm xml:id="indexterm-583">
            <primary>functions</primary>

            <secondary><function>kstat </function></secondary>
          </indexterm> <indexterm xml:id="indexterm-584">
            <primary>kernel statistics</primary>
          </indexterm>Do eksportowania statystyk jądra modułu służy narzędzie
        <olink remap="external" targetdoc="819-2246" targetptr="kstat-3kstat">
        <citerefentry>
            <refentrytitle>kstat</refentrytitle>

            <manvolnum>3KSTAT</manvolnum>
          </citerefentry> </olink>.</para>
      </listitem>

      <listitem>
        <para><indexterm xml:id="indexterm-585">
            <primary>DTrace analyzer</primary>
          </indexterm>System analizy DTrace służy do dynamicznej
        instrumentacji modułu, dzięki czemu można analizować zachowanie
        systemu i jego wydajność. Więcej informacji w <olink remap="external"
        targetdoc="817-6223"> <citetitle remap="book">Solaris Dynamic Tracing
        Guide</citetitle> </olink>.</para>
      </listitem>

      <listitem>
        <para>Jeśli sterownik nie działa w systemie 64bitowym zgodnie z
        oczekiwaniami, należy upewnić się, że wykorzystywana jest 64bitowa
        wersja sterownika. Domyślnie w systemie operacyjnym Solaris kompilacja
        produkuje 32bitowe pliki na każdej architekturze. Plik 64bitowy można
        uzyskać postępując zgodnie z instrukcjami w <olink remap="external"
        targetdoc="chapter-1.xml" targetptr="fgouv">Building a
        Driver</olink>.</para>

        <para>Model danych sterownika można sprawdzić narzędziem <olink
        remap="external" targetdoc="819-2239" targetptr="file-1">
        <citerefentry>
            <refentrytitle>file</refentrytitle>

            <manvolnum>1</manvolnum>
          </citerefentry> </olink>.</para>

        <screen>% <userinput>file qotd_3</userinput>
qotd_3:         ELF 32-bit LSB relocatable 80386 Version 1</screen>
      </listitem>

      <listitem>
        <para>Jeśli używany jest system 64bitowy, ale nie ma pewności, że
        jądro jest 64bitowe, informację można uzyskać komendą <olink
        remap="external" targetdoc="819-2239"
        targetptr="isainfo-1"><citerefentry>
            <refentrytitle>isainfo</refentrytitle>

            <manvolnum>1</manvolnum>
          </citerefentry></olink> wywołaną z opcją <option>k</option>.
        Opcja<option> v</option> drukuje wszystkie zestawy instrukcji dla
        danej architektury. Opcja <option>k</option> drukuje aktualnie używany
        zestaw instrukcji.</para>

        <screen>% <userinput>isainfo -v</userinput>
64-bit sparcv9 applications
        vis2 vis 
32-bit sparc applications
        vis2 vis v8plus div32 mul32 
% <userinput>isainfo -kv</userinput>
64-bit sparcv9 kernel modules</screen>
      </listitem>

      <listitem>
        <para>Jeśli sterownik wydaje się mieć błąd w funkcji, którą napisał
        ktoś inny, należy upewnić się, że wywołanie tej funkcji jest
        prawidłowe oraz włączono prawidłowe pliki nagłówkowe. Wiele funkcji
        jądra nazywa się tak samo jak wywołania systemowe lub funkcje
        przestrzeni użytkownika. Na przykład <function>read</function> i
        <function>write</function> mogą być wywołaniami systemowymi, funkcjami
        biblioteki narzędziowej przestrzeni użytkownika lub funkcjami jądra.
        Podobnie <function>ioctl</function> i <function>mmap</function> mogą
        być wywołaniami systemowymi lub funkcjami jądra. Komenda
        <command>man mmap</command> drukuje stronę podręcznika man
        <command>mmap</command>(2). Aby wydrukować argumenty i plik nagłówkowy
        funkcji jądra należy wykonać komendę <command>man mmap.9e</command>.
        Jeśli nie wiadomo z góry, o którą stronę podręcznika chodzi - 9E czy
        9F -<command>man -l mmap</command>.</para>
      </listitem>
    </itemizedlist>
  </sect1>
</chapter>