<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML//EN" "docbook.dtd"[
	<!ENTITY % xinclude SYSTEM "xinclude.mod">
	%xinclude;
]>

<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="basics-23185">



<title>Solaris Volume Manager Overview</title>
<toc>
<para>This chapter explains the overall structure of Solaris Volume Manager. This chapter
contains the following information:</para>
<itemizedlist>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="fwabv">What's New in Solaris Volume Manager</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="basics-41810">Introduction to Solaris Volume Manager</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="sds41installrel-156">Solaris Volume Manager Requirements</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="basics-42385">Overview of Solaris Volume Manager Components</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="basics-15">Solaris Volume Manager Configuration Guidelines</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="addtasks-1">Overview of Creating Solaris Volume Manager Components</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="large-volume-overview">Overview of Multi-Terabyte Support in Solaris Volume Manager</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="basics-157">Upgrading to Solaris Volume Manager</olink>
</para>
</listitem>
</itemizedlist>
</toc>
<sect1 xml:id="fwabv">
<title>What's New in Solaris Volume Manager</title>
<para>This section describes new features for working with Solaris Volume Manager in
this Solaris release.</para>
<para>For a complete listing of new Solaris features and a description of
Solaris releases, see <olink remap="external" targetdoc="819-2183">
<citetitle remap="book">What’s New in Solaris Express</citetitle>
</olink>.</para>
<sect2 xml:id="gcrva">
<title>Support for Descriptive Names</title>
<para>
<emphasis role="strong">Solaris Express 4/06:</emphasis> Solaris Volume Manager has
been enhanced to include the use of descriptive names for both volumes and
hot spare pools. System administrators can now name volumes and hot spare
pools by using any name that follows the naming guidelines.</para>
<para>A new option has been added to the <command>metastat</command> command
to assist in identifying volumes and hot spare pools with descriptive names.
The <command>metastat <option>
D</option>
</command> command lists all of the
volumes and hot spare pools with descriptive names. This information is useful
if it becomes necessary to move your storage to a previous release of the
Solaris OS that does not support the use of descriptive names.</para>
<para>For more information, see <olink remap="internal" targetdoc="chapter-3.xml" targetptr="basics-34">Volume Names</olink>.</para>
</sect2>
</sect1>
<sect1 xml:id="basics-41810">
<title>Introduction to Solaris Volume Manager</title>
<para>
<indexterm xml:id="indexterm-1">
<primary>Solaris Volume Manager</primary>
<see>
Solaris Volume Manager</see>
</indexterm>Solaris Volume Manager is a software product that
lets you manage large numbers of disks and the data on those disks. Although
there are many ways to use Solaris Volume Manager, most tasks include the following:</para>
<itemizedlist>
<listitem>
<para>Increasing storage capacity</para>
</listitem>
<listitem>
<para>Increasing data availability</para>
</listitem>
<listitem>
<para>Easing administration of large storage devices</para>
</listitem>
</itemizedlist>
<para>In some instances, Solaris Volume Manager can also improve I/O performance.</para>
<para>For information on the types of disks supported in the Solaris operating
system, see <olink remap="external" targetdoc="819-2723" targetptr="disksconcepts-29477">Chapter
11, <citetitle remap="chapter">Managing Disks (Overview),</citetitle> in <citetitle remap="book">System Administration Guide: Devices and File Systems</citetitle>
</olink>.</para>
<sect2 xml:id="basics-37104">
<title>How Solaris Volume Manager Manages Storage</title>
<para>
<indexterm xml:id="basics-ix1">
<primary>volume</primary>
<secondary>virtual disk</secondary>
</indexterm>
<indexterm xml:id="indexterm-2">
<primary>metadevice</primary>
<see>
volume</see>
</indexterm>Solaris Volume Manager uses virtual disks to manage
physical disks and their associated data. In Solaris Volume Manager, a virtual disk
is called a <emphasis>volume</emphasis>. For historical reasons, some command-line
utilities also refer to a volume as a <emphasis>metadevice</emphasis>.</para>
<para>From the perspective of an application or a file system, a volume is
functionally identical to a physical disk. Solaris Volume Manager converts I/O requests
directed at a volume into I/O requests to the underlying member disks.</para>
<para>
<indexterm xml:id="basics-ix2">
<primary>graphical interface</primary>
<secondary>overview</secondary>
</indexterm>
<indexterm xml:id="indexterm-3">
<primary>Enhanced Storage</primary>
<see>
graphical interface</see>
</indexterm>
<indexterm xml:id="indexterm-4">
<primary>DiskSuite Tool</primary>
<see>
graphical interface</see>
</indexterm>Solaris Volume Manager volumes are built
from disk slices or from other Solaris Volume Manager volumes. An easy way to build
volumes is to use the graphical user interface (GUI) that is built into the Solaris Management Console.
The Enhanced Storage tool within the Solaris Management Console presents you with a view of all the existing volumes. By following
the steps in wizards, you can easily build any kind of Solaris Volume Manager volume
or component. You can also build and modify volumes by using Solaris Volume Manager command-line
utilities. </para>
<para>For example, if you need more storage capacity as a single volume, you
could use Solaris Volume Manager to make the system treat a collection of slices
as one larger volume. After you create a volume from these slices, you can
immediately begin using the volume just as you would use any “real”
slice or device.</para>
<para>For a more detailed discussion of volumes, see <olink remap="internal" targetdoc="chapter-3.xml" targetptr="basics-39">Overview of Volumes</olink>.</para>
<para>Solaris Volume Manager can increase the reliability and availability of data
by using RAID-1 (mirror) volumes and RAID-5 volumes. Solaris Volume Manager hot spares
can provide another level of data availability for mirrors and RAID-5 volumes.</para>
<para>Once you have set up your configuration, you can use the Enhanced Storage tool within the Solaris Management Console to
report on its operation. </para>
</sect2>
</sect1>
<sect1 xml:id="exlwh">
<title>How to Administer Solaris Volume Manager</title>
<para>
<indexterm xml:id="indexterm-5">
<primary>interfaces</primary>
<see>
Solaris Volume Manager interfaces</see>
</indexterm>Use either of these methods
to administer Solaris Volume Manager:</para>
<itemizedlist>
<listitem>
<para>
<indexterm xml:id="indexterm-6">
<primary>Solaris Volume Manager interfaces</primary>
<secondary>Solaris Management Console</secondary>
</indexterm>Solaris Management Console – This tool provides a GUI to administer volume management
functions. Use the Enhanced Storage tool within the Solaris Management Console. See <olink remap="internal" targetdoc="chapter-3.xml" targetptr="basics-fig-31">Figure 3–1</olink> for an example of the Enhanced Storage tool. This interface provides
a graphical view of Solaris Volume Manager components, including volumes, hot spare
pools, and state database replicas. This interface offers wizard-based manipulation
of Solaris Volume Manager components, enabling you to quickly configure your disks
or change an existing configuration. </para>
</listitem>
<listitem>
<para>
<indexterm xml:id="indexterm-7">
<primary>Solaris Volume Manager interfaces</primary>
<secondary>command line</secondary>
</indexterm>The command line – You can use several commands to perform
volume management functions. The Solaris Volume Manager core commands begin with <literal>meta</literal>, for example the <command>metainit</command> and <command>metastat</command> commands. For a list of Solaris Volume Manager commands, see <olink remap="external" targetdoc="appendix-2.xml" targetptr="quick-reference-1">Appendix B, Solaris Volume Manager Quick Reference</olink>.</para>
</listitem>
</itemizedlist>
<note>

<para>
<indexterm xml:id="indexterm-8">
<primary>GUI</primary>
<secondary>sample</secondary>
</indexterm>
<indexterm xml:id="indexterm-9">
<primary>Solaris Volume Manager interfaces</primary>
<secondary>sample GUI</secondary>
</indexterm>Do not attempt to administer Solaris Volume Manager with the command line
and the GUI at the same time. Conflicting changes could be made to the configuration,
and its behavior would be unpredictable. You can use both tools to administer Solaris Volume Manager,
but not concurrently.</para>
</note>
<figure xml:id="basics-fig-31">

<title>View of the Enhanced Storage Tool (Solaris Volume Manager)
in the Solaris Management Console</title>
<mediaobject>
<imageobject>
<imagedata fileref="figures/svm-gui.gif"/>
</imageobject>
<textobject>
<simpara>Screen capture shows the Enhanced Storage tool. Components
are listed at the right, with the various Solaris Volume Manager tools at
the left. </simpara>
</textobject>
</mediaobject>
</figure>
<sect2>
<title/>
<task id="tasks-basics-19">

<title>How to Access the Solaris Volume Manager Graphical
User Interface (GUI)</title>
<tasksummary>
<para>The Solaris Volume Manager GUI (Enhanced Storage) is part of the Solaris Management Console. To
access the GUI, use the following instructions:</para>
</tasksummary>
<procedure>
<step xml:id="tasks-basics-step-21">
<para>Start the Solaris Management Console on the host system by
using the following command:</para>
<screen>% <userinput>/usr/sbin/smc</userinput>
</screen>
</step>
<step xml:id="tasks-basics-step-22">
<para>Double-click This Computer in the Navigation
pane.</para>
</step>
<step xml:id="tasks-basics-step-23">
<para>Double-click Storage in the Navigation
pane.</para>
</step>
<step xml:id="tasks-basics-step-24">
<para>Double-click Enhanced Storage in the
Navigation pane to load the Solaris Volume Manager tools.</para>
</step>
<step xml:id="tasks-basics-step-25">
<para>If prompted to log in, log in as root
or as a user who has equivalent access. </para>
</step>
<step xml:id="tasks-basics-step-26">
<para>Double-click the appropriate icon to
manage volumes, hot spare pools, state database replicas, and disk sets. </para>
<tip>

<para>All tools in the Solaris Management Console display information in the bottom section
of the console window or at the left side of a wizard panel. Choose Help at
any time to find additional information about performing tasks in this interface.</para>
</tip>
</step>
</procedure>
</task>
</sect2>
</sect1>
<sect1 xml:id="sds41installrel-156">
<title>Solaris Volume Manager Requirements</title>
<para>Solaris Volume Manager requirements include the following:</para>
<itemizedlist>
<listitem>
<para>You must have root privilege to administer Solaris Volume Manager.
Equivalent privileges granted through the User Profile feature in the Solaris Management Console allow
administration through the Solaris Management Console. However, only the root user can use the Solaris Volume Manager command-line
interface.</para>
</listitem>
<listitem>
<para>Before you can create volumes with Solaris Volume Manager, state database
replicas must exist on the Solaris Volume Manager system. A state database replica
contains configuration and status information for all volumes, hot spares,
and disk sets. At least three replicas should exist, and the replicas should
be placed on different controllers and different disks for maximum reliability.
See <olink remap="external" targetdoc="chapter-6.xml" targetptr="about-state-db-replicas-8">About the Solaris Volume Manager State Database and Replicas</olink> for more information about state
database replicas. See <olink remap="external" targetdoc="chapter-7.xml" targetptr="tasks-state-db-replicas-9">Creating State Database Replicas</olink> for instructions on how to create state database
replicas.</para>
</listitem>
</itemizedlist>
</sect1>
<sect1 xml:id="basics-42385">
<title>Overview of Solaris Volume Manager Components</title>
<para>
<indexterm xml:id="basics-ix24">
<primary>Solaris Volume Manager elements</primary>
<secondary>overview</secondary>
</indexterm>The five basic types of components that you create with Solaris Volume Manager are
volumes, soft partitions, disk sets, state database replicas, and hot spare
pools. The following table gives an overview of these Solaris Volume Manager features. </para>
<table frame="topbot" xml:id="basics-32444" pgwide="1">

<title>Summary of Solaris Volume Manager Features</title>
<tgroup cols="4" colsep="0" rowsep="0">
<colspec colname="column1" colnum="1" colwidth="3*"/>
<colspec colname="column2" colnum="2" colwidth="3*"/>
<colspec colname="column3" colnum="3" colwidth="3*"/>
<colspec colname="column4" colnum="4" colwidth="3*"/>
<thead>
<row rowsep="1">
<entry>
<para>Solaris Volume Manager Feature</para>
</entry>
<entry>
<para>Definition</para>
</entry>
<entry>
<para>Purpose</para>
</entry>
<entry>
<para>For More Information</para>
</entry>
</row>
</thead>
<tbody>
<row>
<entry>
<para>
<indexterm xml:id="exlwc">
<primary>volume</primary>
<secondary>definition</secondary>
</indexterm>
</para>
<itemizedlist>
<listitem>
<para>RAID-0 volume (stripe, concatenation, concatenated stripe)</para>
</listitem>
<listitem>
<para>RAID-1 (mirror) volume</para>
</listitem>
<listitem>
<para>RAID-5 volume</para>
</listitem>
</itemizedlist>
</entry>
<entry>
<para>A group of physical slices that appear to the system as a single, logical
device</para>
</entry>
<entry>
<para>To increase storage capacity, performance, or data availability.</para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="basics-39">Overview of Volumes</olink>
</para>
</entry>
</row>
<row>
<entry>
<para>Soft partition</para>
</entry>
<entry>
<para> A subdivision of physical slices or logical volumes to provide smaller,
more manageable storage units</para>
</entry>
<entry>
<para>To improve manageability of large storage volumes. </para>
</entry>
<entry>
<para>
<olink remap="external" targetdoc="chapter-12.xml" targetptr="about-softpart-1">Chapter 12, Soft Partitions (Overview)</olink>
</para>
</entry>
</row>
<row>
<entry>
<para>
<indexterm xml:id="basics-ix26">
<primary>state database</primary>
<secondary>definition</secondary>
</indexterm>State database  (state database replicas) </para>
</entry>
<entry>
<para>A database that contains configuration and status information for all
volumes, hot spares, and disk sets. Solaris Volume Manager cannot operate until you
have created the state database replicas.</para>
</entry>
<entry>
<para> To store information  about the state of your Solaris Volume Manager configuration</para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="basics-40">State Database and State Database Replicas</olink>
</para>
</entry>
</row>
<row>
<entry>
<para>
<indexterm xml:id="basics-ix27">
<primary>hot spare pool</primary>
<secondary>definition</secondary>
</indexterm>Hot spare pool </para>
</entry>
<entry>
<para>A collection of slices (hot spares) reserved. These slices are automatically
substituted when either a submirror or RAID-5 volume component fails.</para>
</entry>
<entry>
<para>To increase data availability for RAID-1 and RAID-5 volumes.</para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="basics-41">Hot Spare Pools</olink>
</para>
</entry>
</row>
<row>
<entry>
<para>
<indexterm xml:id="indexterm-10">
<primary>disk set</primary>
<secondary>definition</secondary>
</indexterm>Disk set</para>
</entry>
<entry>
<para>A set of shared disk drives in a separate namespace that contains volumes
and hot spares and that can be shared non-concurrently by multiple hosts</para>
</entry>
<entry>
<para>To provide data redundancy and data availability and to provide a separate
namespace for easier administration.</para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="eqbny">Disk Sets</olink>
</para>
</entry>
</row>
</tbody>
</tgroup>
</table>
<sect2 xml:id="basics-39">
<title>Overview of Volumes</title>
<para>
<indexterm xml:id="basics-ix28">
<primary>volume</primary>
<secondary>conceptual overview</secondary>
</indexterm>A <emphasis>volume</emphasis> is a group of physical slices that
appears to the system as a single, logical device. Volumes are actually pseudo,
or virtual, devices in standard <trademark class="registered">UNIX</trademark> terms. </para>
<note>

<para>Historically, the <trademark>Solstice DiskSuite</trademark> product
referred to these logical devices as metadevices. However, for simplicity
and standardization, this book refers to these devices as volumes. </para>
</note>
<sect3 xml:id="basics-33">
<title>Classes of Volumes</title>
<para>You create a volume as a RAID-0 (concatenation or stripe) volume, a
RAID-1 (mirror) volume, a RAID-5 volume, .</para>
<para>You can use either the Enhanced Storage tool within the Solaris Management Console or the command-line utilities to create
and administer volumes.</para>
<para>
<indexterm xml:id="basics-ix30">
<primary>volume</primary>
<secondary>types</secondary>
</indexterm>The following table summarizes the classes of volumes.</para>
<table frame="topbot" xml:id="ekjkr">

<title>Classes of Volumes</title>
<tgroup cols="2" colsep="0" rowsep="0">
<colspec colname="column1" colnum="1" colwidth="2*"/>
<colspec colname="column2" colnum="2" colwidth="7*"/>
<thead>
<row rowsep="1">
<entry>
<para>Volume</para>
</entry>
<entry>
<para>Description</para>
</entry>
</row>
</thead>
<tbody>
<row>
<entry>
<para>
<indexterm xml:id="ekjla">
<primary>simple volume</primary>
<secondary>definition</secondary>
</indexterm>RAID-0 (stripe or concatenation)</para>
</entry>
<entry>
<para>Can be used directly, or as the basic building block for mirrors. RAID-0
volumes do not directly provide data redundancy. </para>
</entry>
</row>
<row>
<entry>
<para>
<indexterm xml:id="ekjkx">
<primary>mirror</primary>
<secondary>definition</secondary>
</indexterm>RAID-1 (mirror)</para>
</entry>
<entry>
<para>Replicates data by maintaining multiple copies. A RAID-1 volume is composed
of one or more RAID-0 volumes that are called submirrors.</para>
</entry>
</row>
<row>
<entry>
<para>
<indexterm xml:id="ekjky">
<primary>RAID-5 volume</primary>
<secondary>definition</secondary>
</indexterm>RAID-5 </para>
</entry>
<entry>
<para>Replicates data by using parity information. In the case of disk failure,
the missing data can be regenerated by using available data and the parity
information. A RAID-5 volume is generally composed of slices. One slice's
worth of space is allocated to parity information, but the parity is distributed
across all slices in the RAID-5 volume.</para>
</entry>
</row>
<row>
<entry>
<para>Soft partition</para>
</entry>
<entry>
<para>Divides a slice or logical volume into one or more smaller, extensible
volumes.</para>
</entry>
</row>
</tbody>
</tgroup>
</table>
</sect3>
<sect3 xml:id="basics-3">
<title>How Volumes Are Used</title>
<indexterm xml:id="basics-ix35">
<primary>volume</primary>
<secondary>uses</secondary>
</indexterm>
<para>You use volumes to increase storage capacity, performance, and data
availability. In some instances, volumes can also increase I/O performance.
Functionally, volumes behave the same way as slices. Because volumes look
like slices, the volumes are transparent to end users, applications, and file
systems. As with physical devices, volumes are accessed through block or raw
device names. The volume name changes, depending on whether the block or raw
device is used. See <olink remap="internal" targetdoc="chapter-3.xml" targetptr="basics-34">Volume Names</olink> for
details about volume names.</para>
<para>
<indexterm xml:id="basics-ix36">
<primary>volume</primary>
<secondary>using file system commands on</secondary>
</indexterm>You can use most file system commands, including <command>mkfs</command>, <command>mount</command>, <command>umount</command>, <command>ufsdump</command>, <command>ufsrestore</command>, and others, on volumes. You cannot use the <command>format</command> command,
however. You can read, write, and copy files to and from a volume, as long
as the volume contains a mounted file system. </para>
</sect3>
<sect3 xml:id="basics-4">
<title>Example—Volume That Consists of Two Slices</title>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="basics-fig-5">Figure 3–2</olink> shows a volume
that contains two slices, one slice from Disk A and one slice from Disk B.
An application or UFS treats the volume as if it were one physical disk. Adding
more slices to the volume increases its storage capacity.</para>
<figure xml:id="basics-fig-5">

<title>Relationship Among a Volume, Physical Disks,
and Slices</title>
<mediaobject>
<imageobject>
<imagedata fileref="figures/ch1_basics.fig28.gif"/>
</imageobject>
<textobject>
<simpara>Diagram shows two disks, and how slices on those disks
are presented by Solaris Volume Manager as a single logical volume. </simpara>
</textobject>
</mediaobject>
</figure>
</sect3>
<sect3 xml:id="basics-18534">
<title>Volume and Disk Space Expansion Using the <command>growfs</command> Command</title>
<indexterm xml:id="basics-ix62">
<primary>volume</primary>
<secondary>expanding disk space</secondary>
</indexterm>
<para>Solaris Volume Manager enables you to expand a volume by adding additional
slices. You can use either the Enhanced Storage tool within the Solaris Management Console or the command-line interface to add
a slice to an existing volume.</para>
<para>
<indexterm xml:id="basics-ix63">
<primary>file system</primary>
<secondary>expansion overview</secondary>
</indexterm>
<indexterm xml:id="basics-ix64">
<primary>growfs command</primary>
</indexterm>You can expand a mounted or unmounted UFS file system that is
contained within a volume without having to halt or back up your system. Nevertheless,
backing up your data is always a good idea. After you expand the volume, use
the <command>growfs</command> command to grow the file system.</para>
<note>

<para>After a file system has been expanded, the file system cannot
be reduced in size. The inability to reduce the size of a file system is a
UFS limitation. Similarly, after a Solaris Volume Manager partition has been increased
in size, it cannot be reduced.</para>
</note>
<para>Applications and databases that use the raw volume must have their own
method to “grow” the added space so that applications can recognize
it. Solaris Volume Manager does not provide this capability.</para>
<para>You can expand the disk space in volumes in the following ways:</para>
<itemizedlist>
<listitem>
<para>Adding one or more slices to a RAID-0 volume</para>
</listitem>
<listitem>
<para>Adding one or more slices to all submirrors of a RAID-1 volume</para>
</listitem>
<listitem>
<para>
<indexterm xml:id="basics-ix65">
<primary>file system</primary>
<secondary>expansion overview</secondary>
</indexterm>Adding one or more slices to a RAID-5 volume</para>
</listitem>
<listitem>
<para>
<indexterm xml:id="indexterm-11">
<primary>file system</primary>
<secondary>expansion overview</secondary>
</indexterm>Expanding a soft partition with additional space from the underlying
component</para>
</listitem>
</itemizedlist>
<para>The <command>growfs</command> command expands a UFS file system without
loss of service or data. However, write access to the volume is suspended
while the <command>growfs</command> command is running. You can expand the
file system to the size of the slice or the volume that contains the file
system. </para>
<para>The file system can be expanded to use only part of the additional disk
space by using the <option>
s</option> <replaceable>size</replaceable> option
to the <command>growfs</command> command.</para>
<note>

<para>When you expand a mirror, space is added to the mirror's underlying
submirrors. The <command>growfs</command> command
is then run on the RAID-1 volume. The general rule is that space is added to the underlying
devices, and the <command>growfs</command> command is run on the top-level
device.</para>
</note>
</sect3>
<sect3 xml:id="basics-34">
<title>Volume Names</title>
<para>As with physical slices, volumes have logical names that appear in the
file system. Logical volume names have entries in the <filename>/dev/md/dsk</filename> directory
for block devices and the <filename>/dev/md/rdsk</filename> directory for
raw devices. Instead of specifying the full volume name, such as <filename>/dev/md/dsk/<replaceable>volume-name</replaceable>
</filename>, you can often use an abbreviated volume
name, such as <filename>d1</filename>, with any <literal>meta*</literal> command.
You can generally rename a volume, as long as the volume is not currently
being used and the new name is not being used by another volume. For more
information, see <olink remap="external" targetdoc="chapter-20.xml" targetptr="basics-23">Exchanging Volume Names</olink>.</para>
<para>Originally, volume names had to begin with the letter “d”
followed by a number (for example, <filename>d0</filename>). This format is
still acceptable. The following are examples of volume names that use the “d*”
naming construct:</para>
<variablelist>
<varlistentry>
<term>
<filename>/dev/md/dsk/d0</filename>
</term>
<listitem>
<para>Block volume <literal>d0</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<filename>/dev/md/dsk/d1</filename>
</term>
<listitem>
<para>Block volume <literal>d1</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<filename>/dev/md/rdsk/d126</filename>
</term>
<listitem>
<para>Raw volume <literal>d126</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<filename>/dev/md/rdsk/d127</filename>
</term>
<listitem>
<para>Raw volume <literal>d127</literal>
</para>
</listitem>
</varlistentry>
</variablelist>
<para>Beginning
with the Solaris Express 4/06 release, Solaris Volume Manager has been enhanced to include the use of
descriptive names for naming volumes and hot spare pools. A <emphasis>descriptive
name</emphasis> for a volume is a name that can be composed of a combination
of the following:</para>
<itemizedlist>
<listitem>
<para>Alphanumeric characters</para>
</listitem>
<listitem>
<para>“-” (a dash)</para>
</listitem>
<listitem>
<para>“_” (an underscore)</para>
</listitem>
<listitem>
<para>“.” (a period)</para>
</listitem>
</itemizedlist>
<para>Descriptive names must begin with a letter. The words “all”
and “none” are reserved and cannot be used as names for volumes
or hot spare pools. You also cannot use only a “.” (period) or “..”
(two periods) as the entire name. Finally, you cannot create a descriptive
name that looks like a physical disk name, such as <literal>c0t0d0s0</literal>.
As noted previously, you can also continue to use the “d*” naming
convention. The following are examples of descriptive volume names:</para>
<informaltable> <tgroup Remap="SimpleList" cols="1">
<tbody>
<row>
<entry>
<para>
<filename>account_stripe_1</filename>
</para>
</entry> </row>
<row>
<entry>
<para>
<filename>mirror.3</filename>
</para>
</entry> </row>
<row>
<entry>
<para>
<filename>d100</filename>
</para>
</entry> </row>
<row>
<entry>
<para>
<filename>d-100</filename>
</para>
</entry> </row>
</tbody>
</tgroup>
</informaltable>
<para>When descriptive names are used in disk sets, each descriptive
name must be unique within that disk set. Hot spare pools and volumes within
the same disk set cannot have the same name. However, you can reuse names
within different disk sets. For example, if you have two disk sets, one disk
set called <literal>admins</literal> and one disk set called <literal>managers</literal>,
you can create a volume named <filename>employee_files</filename> in each
disk set.</para>
<para>The functionality of the Solaris Volume Manager commands that
are used to administer volumes with descriptive names remains unchanged. You
can substitute a descriptive name in any <command>meta*</command> command
where you previously used the “d*” format. For example, to create
a single-stripe volume of one slice with the name <filename>employee_files</filename>,
you would type the following command at the command line:</para>
<screen># <userinput>metainit employee_files 1 1 c0t1d0s4</userinput>
</screen>
<para>If you create
volumes and hot spare pools using descriptive names and then later determine
that you need to use Solaris Volume Manager under previous releases of the
Solaris OS, you must remove the components that are defined with descriptive
names. To determine if the Solaris Volume Manager configuration on your system contains
descriptive names, you can use the <option>
D</option> option of the <command>metastat</command> command. The <command>metastat <option>
D</option>
</command> command
lists volumes and hot spare pools that were created using descriptive names.
These components must be removed from the Solaris Volume Manager configuration before
the remaining configuration can be used with a release prior to the Solaris Express 4/06
release. If these components are not removed, the Solaris Volume Manager in these prior
Solaris releases does not start. For more information about the <option>
D</option> option,
see the <olink remap="external" targetdoc="819-2240" targetptr="metastat-1m">
<citerefentry>
<refentrytitle>metastat</refentrytitle>
<manvolnum>
1M
</manvolnum>
</citerefentry>
</olink> man
page. For information about removing components from a configuration, see <olink remap="external" targetdoc="chapter-11.xml" targetptr="tasks-mirrors-26">Removing RAID-1 Volumes (Unmirroring)</olink> and <olink remap="external" targetdoc="chapter-9.xml" targetptr="tasks-metadevices-43">Removing a RAID-0 Volume</olink>.</para>
<sect4 xml:id="basics-35">
<title>Volume Name Guidelines</title>
<para>
<indexterm xml:id="indexterm-12">
<primary>volume name switching</primary>
</indexterm>The use of a standard for your volume names can simplify administration
and enable you at a glance to identify the volume type. Here are a few suggestions: </para>
<itemizedlist>
<listitem>
<para>Use ranges for each type of volume. For example, assign numbers
0–20 for RAID-1 volumes, 21–40 for RAID-0 volumes, and so on.</para>
</listitem>
<listitem>
<para>Use a naming relationship for mirrors. For example, name mirrors
with a number that ends in zero (0), and submirrors that end in one (1), two
(2), and so on. For example, you might name mirrors as follows: mirror <filename>d10</filename>, submirrors <filename>d11</filename> and <filename>d12</filename>;
mirror <filename>d20</filename>, submirrors <filename>d21</filename>, <filename>d22</filename>, <filename>d23</filename>, and <filename>d24</filename>. In an example using
descriptive names, you could use a naming relationship such as <filename>employee_mirror1</filename> for a mirror with <filename>employee_sub1</filename> and <filename>employee_sub2</filename> comprising the submirrors.</para>
</listitem>
<listitem>
<para>Use a naming method that maps the slice number and disk number
to volume numbers.</para>
</listitem>
</itemizedlist>
</sect4>
</sect3>
</sect2>
<sect2 xml:id="basics-40">
<title>State Database and State Database Replicas</title>
<indexterm xml:id="basics-ix40">
<primary>state database</primary>
<secondary>conceptual overview</secondary>
</indexterm>
<para>
<indexterm xml:id="basics-ix42">
<primary>state database</primary>
<secondary>definition</secondary>
</indexterm>The <emphasis>state database</emphasis> is a database that stores
information about the state of your Solaris Volume Manager configuration. The state
database records and tracks changes made to your configuration. Solaris Volume Manager automatically
updates the state database when a configuration or state change occurs. Creating
a new volume is an example of a configuration change. A submirror failure
is an example of a state change. </para>
<para>
<indexterm xml:id="basics-ix43">
<primary>replica</primary>
</indexterm>
<indexterm xml:id="basics-ix44">
<primary>state database replicas</primary>
</indexterm>
<indexterm xml:id="basics-ix45">
<primary>state database replicas</primary>
<secondary>definition</secondary>
</indexterm>The state database is actually a collection of multiple, replicated
database copies. Each copy, referred to as a <emphasis>state database replica</emphasis>,
ensures that the data in the database is always valid. Multiple copies of
the state database protect against data loss from single points-of-failure.
The state database tracks the location and status of all known state database
replicas.   </para>
<para>Solaris Volume Manager cannot operate until you have created the state database
and its state database replicas. A Solaris Volume Manager configuration must have
an operating state database.</para>
<para>When you set up your configuration, you can locate the state database
replicas on either of the following:</para>
<itemizedlist>
<listitem>
<para>On dedicated slices</para>
</listitem>
<listitem>
<para>On slices that will later become part of volumes</para>
</listitem>
</itemizedlist>
<para>
<indexterm xml:id="basics-ix46">
<primary>state database replicas</primary>
<secondary>location</secondary>
</indexterm>Solaris Volume Manager recognizes when a slice contains a state database
replica, and automatically skips over the replica if the slice is used in
a volume. The part of a slice reserved for the state database replica should
not be used for any other purpose. </para>
<para>You can keep more than one copy of a state database on one slice. However,
you might make the system more vulnerable to a single point-of-failure by
doing so.</para>
<para>The Solaris operating system continues to function correctly if all
state database replicas are deleted. However, the system loses all Solaris Volume Manager configuration
data if a reboot occurs with no existing state database replicas on disk.</para>
</sect2>
<sect2 xml:id="basics-41">
<title>Hot Spare Pools</title>
<indexterm xml:id="basics-ix59">
<primary>hot spare pool</primary>
</indexterm>
<para>
<indexterm xml:id="basics-ix60">
<primary>hot spare pool</primary>
<secondary>definition</secondary>
</indexterm>A <emphasis>hot spare pool</emphasis> is a collection of slices
(<emphasis>hot spares</emphasis>) reserved by Solaris Volume Manager to be automatically
substituted for failed components. These hot spares can be used in either
a submirror or RAID-5 volume. Hot spares provide increased data availability
for RAID-1 and RAID-5 volumes. You can create a hot spare pool with either
the Enhanced Storage tool within the Solaris Management Console or the command-line interface. </para>
<para>
<indexterm xml:id="basics-ix61">
<primary>hot spare pool</primary>
<secondary>basic operation</secondary>
</indexterm>When component errors occur, Solaris Volume Manager checks for the first
available hot spare whose size is equal to or greater than the size of the
failed component. If found, Solaris Volume Manager automatically replaces the component
and resynchronizes the data. If a slice of adequate size is not found in the
list of hot spares, the submirror or RAID-5 volume is considered to have failed.
For more information, see <olink remap="external" targetdoc="chapter-16.xml" targetptr="about-hotspares-40444">Chapter 16, Hot Spare Pools (Overview)</olink>.</para>
</sect2>
<sect2 xml:id="eqbny">
<title>Disk Sets</title>
<indexterm xml:id="eqbou">
<primary>disk set</primary>
<secondary>definition</secondary>
</indexterm>
<para>A disk set is a set of physical storage volumes that contain logical
volumes and hot spares. Volumes and hot spare pools must be built on drives
from within that disk set. Once you have created a volume within the disk
set, you can use the volume just as you would a physical slice.</para>
<para>
<indexterm xml:id="basics-ix78">
<primary>failover configuration</primary>
</indexterm>A disk set provides data availability in a clustered environment.
If one host fails,  another host can take over the failed host's disk set.
(This type of configuration is known as a <emphasis>failover configuration</emphasis>.)
Additionally, disk sets can be used to help manage the Solaris Volume Manager namespace,
and to provide ready access to network-attached storage devices. </para>
<para>For more information, see <olink remap="external" targetdoc="chapter-18.xml" targetptr="about-disksets-31856">Chapter 18, Disk Sets (Overview)</olink>.</para>
</sect2>
</sect1>
<sect1 xml:id="basics-15">
<title>Solaris Volume Manager Configuration Guidelines</title>
<para>A poorly designed Solaris Volume Manager configuration can degrade performance.
This section offers tips for achieving good performance from Solaris Volume Manager.
For information on storage configuration performance guidelines, see <olink remap="external" targetdoc="chapter-2.xml" targetptr="config-guide-22088">General Performance Guidelines</olink>.</para>
<sect2 xml:id="basics-16">
<title>General Guidelines</title>
<itemizedlist>
<listitem>
<para>
<indexterm xml:id="indexterm-13">
<primary>Solaris Volume Manager</primary>
<secondary>configuration guidelines</secondary>
</indexterm>
<emphasis role="strong">Disk and controllers –</emphasis> Place
drives in a volume on separate drive paths, or for SCSI drives, separate host
adapters. An I/O load distributed over several controllers improves volume
performance and availability. </para>
</listitem>
<listitem>
<para>
<emphasis role="strong">System files –</emphasis> Never
edit or remove the <filename>/etc/lvm/mddb.cf</filename> or <filename>/etc/lvm/md.cf</filename> files.</para>
<para>Make sure these files are backed up regularly.</para>
</listitem>
<listitem>
<para>
<emphasis role="strong">Volume Integrity –</emphasis> If
a slice is defined as a volume, do not use the underlying slice for any other
purpose, including using the slice as a dump device. </para>
</listitem>
<listitem>
<para>
<emphasis role="strong">Information about disks and partitions –</emphasis> Keep a copy of output from the <command>prtvtoc</command> and <command>metastat -p</command> commands in case you need to reformat a bad disk or
recreate your Solaris Volume Manager configuration.</para>
</listitem>
</itemizedlist>
</sect2>
<sect2 xml:id="basics-17">
<title>File System Guidelines</title>
<indexterm xml:id="indexterm-14">
<primary>file system</primary>
<secondary>guidelines</secondary>
</indexterm>
<para>Do not mount file systems on a volume's underlying slice. If a slice
is used for a volume of any kind, you must not mount that slice as a file
system. If possible, unmount any physical device that you intend to use as
a volume before you activate the volume. </para>
</sect2>
</sect1>
<sect1 xml:id="addtasks-1">
<title>Overview of Creating Solaris Volume Manager Components</title>
<para>When you create a Solaris Volume Manager component, you assign physical slices
to a logical Solaris Volume Manager name, such as <filename>d0</filename>. The Solaris Volume Manager components
that you can create include the following:</para>
<itemizedlist>
<listitem>
<para>State database replicas</para>
</listitem>
<listitem>
<para>Volumes (RAID-0 (stripes, concatenations), RAID-1 (mirrors),
RAID-5, )</para>
</listitem>
<listitem>
<para>Hot spare pools</para>
</listitem>
<listitem>
<para>Disk sets</para>
</listitem>
</itemizedlist>
<note>

<para>For suggestions on how to name volumes, see <olink remap="internal" targetdoc="chapter-3.xml" targetptr="basics-34">Volume Names</olink>.</para>
</note>
<sect2 xml:id="addtasks-20933">
<title>Prerequisites for Creating Solaris Volume Manager Components</title>
<para>The prerequisites for creating Solaris Volume Manager components are as follows:</para>
<itemizedlist>
<listitem>
<para>Create initial state database replicas. If you have not done
so, see <olink remap="external" targetdoc="chapter-7.xml" targetptr="tasks-state-db-replicas-9">Creating State Database Replicas</olink>.</para>
</listitem>
<listitem>
<para>Identify slices that are available for use by Solaris Volume Manager.
If necessary, use the <command>format</command> command, the <command>fmthard</command> command,
or the Solaris Management Console to repartition existing disks.</para>
</listitem>
<listitem>
<para>Make sure you have root privilege.</para>
</listitem>
<listitem>
<para>Have a current backup of all data.</para>
</listitem>
<listitem>
<para>If you are using the GUI, start the Solaris Management Console and navigate to
the Solaris Volume Manager feature. For information, see <olink remap="internal" targetdoc="chapter-3.xml" targetptr="tasks-basics-19">How to Access the Solaris Volume Manager Graphical User Interface (GUI)</olink>.</para>
</listitem>
</itemizedlist>
</sect2>
</sect1>
<sect1 xml:id="large-volume-overview">
<title>Overview of Multi-Terabyte Support
in Solaris Volume Manager</title>
<para>Starting with the Solaris 9 4/03 release, Solaris Volume Manager supports storage
devices and logical volumes greater than 1 terabyte (Tbyte) on systems running
a 64-bit kernel.</para>
<note>

<para>Use <command>isainfo -v</command> to determine if your system
is running a 64-bit kernel. If the string “64-bit” appears, you
are running a 64-bit kernel.</para>
</note>
<para>Solaris Volume Manager allows you to do the following:</para>
<itemizedlist>
<listitem>
<para>Create, modify, and delete logical volumes built on or from
logical storage units (LUNs) greater than 1 Tbyte in size. </para>
</listitem>
<listitem>
<para>Create, modify, and delete logical volumes that exceed 1 Tbyte
in size.</para>
</listitem>
</itemizedlist>
<para>Support for large volumes is automatic. If a device greater than 1 Tbyte
is created, Solaris Volume Manager configures it appropriately and without user intervention. </para>
<sect2 xml:id="large-volume-limitations">
<title>Large Volume Support Limitations</title>
<para>Solaris Volume Manager only supports large volumes (greater than 1 Tbyte) on
the Solaris 9 4/03 or later release when running a 64-bit kernel. Running
a system with large volumes under 32-bit kernel on previous Solaris 9 releases
will affect Solaris Volume Manager functionality. Specifically, note the following:</para>
<itemizedlist>
<listitem>
<para>If a system with large volumes is rebooted under a 32-bit
Solaris 9 4/03 or later kernel, the large volumes will be visible through <command>metastat</command> output, but they cannot be accessed, modified or deleted.
In addition, new large volumes cannot be created. Any volumes or file systems
on a large volume will also be unavailable. </para>
</listitem>
<listitem>
<para>If a system with large volumes is rebooted under a Solaris
release prior to Solaris 9 4/03, Solaris Volume Manager will not start. All large volumes
must be removed before Solaris Volume Manager will run under another version of the
Solaris platform.</para>
</listitem>
</itemizedlist>
<caution>

<para>Do not create large volumes if you expect to run the Solaris
software with a 32-bit kernel or if you expect to use a version of the Solaris
OS prior to the Solaris 9 4/03 release.</para>
</caution>
</sect2>
<sect2 xml:id="basics-158">
<title>Using Large Volumes</title>
<para>All Solaris Volume Manager commands work with large volumes. No syntax differences
or special tasks are required to take advantage of large volume support. Thus,
system administrators who are familiar with Solaris Volume Manager can immediately
work with Solaris Volume Manager large volumes. </para>
<tip>

<para>If you create large volumes, then later determine that you need
to use Solaris Volume Manager under previous releases of Solaris or that you need to
run under the 32-bit Solaris 9 4/03 or later kernel, you will need to remove
the large volumes. Use the <command>metaclear</command> command under the
64-bit kernel to remove the large volumes from your Solaris Volume Manager configuration
before rebooting under previous Solaris release or under a 32-bit kernel.</para>
</tip>
</sect2>
</sect1>
<sect1 xml:id="basics-157">
<title>Upgrading to Solaris Volume Manager</title>
<indexterm xml:id="indexterm-15">
<primary>Service Management Facility (SMF)</primary>
<see>
SMF</see>
</indexterm>
<indexterm xml:id="indexterm-16">
<primary>SMF</primary>
<secondary>Solaris Volume Manager services</secondary>
</indexterm>
<indexterm xml:id="indexterm-17">
<primary>SMF</primary>
<secondary>upgrading Solaris Volume Manager and</secondary>
</indexterm>
<para>Solaris Volume Manager fully supports seamless upgrade from Solstice DiskSuite
versions 4.1, 4.2, and 4.2.1. Make sure that all volumes are in Okay state
(not “Needs Maintenance” or “Last Erred”) and that
no hot spares are in use. You do not need to do anything else special to Solaris Volume Manager for
the upgrade to work—it is not necessary to change the configuration
or break down the root mirror. When you upgrade your system, the Solstice
DiskSuite configuration will be brought forward and will be accessible after
upgrade through Solaris Volume Manager tools. </para>
<para>The Solaris 10 OS introduced the Service Management Facility (SMF),
which provides an infrastructure that augments the traditional UNIX start-up
scripts, <literal>init</literal> run levels, and configuration files. When
upgrading from a previous version of the Solaris OS, verify that the SMF services
associated with Solaris Volume Manager are online. If the SMF services are not online,
you might encounter problems when administering Solaris Volume Manager.</para>
<para>To check the SMF services associated with Solaris Volume Manager, use the following
form of the <command>svcs</command> command:</para>
<screen># <userinput>svcs -a |egrep "md|meta"</userinput>
disabled       12:05:45 svc:/network/rpc/mdcomm:default
disabled       12:05:45 svc:/network/rpc/metamed:default
disabled       12:05:45 svc:/network/rpc/metamh:default
online         12:05:39 svc:/system/metainit:default
online         12:05:46 svc:/network/rpc/meta:default
online         12:05:48 svc:/system/fmd:default
online         12:05:51 svc:/system/mdmonitor:default</screen>
<para>If the Solaris Volume Manager configuration consists of a local set only, then
these services should be online:</para>
<informaltable> <tgroup Remap="SimpleList" cols="1">
<tbody>
<row>
<entry>
<para>
<literal>svc:/system/metainit</literal>
</para>
</entry> </row>
<row>
<entry>
<para>
<literal>svc:/network/rpc/meta</literal>
</para>
</entry> </row>
<row>
<entry>
<para>
<literal>svc:/system/mdmonitor</literal>
</para>
</entry> </row>
</tbody>
</tgroup>
</informaltable>
<para>If the Solaris Volume Manager configuration includes disk sets, then these additional
services should be online:</para>
<informaltable> <tgroup Remap="SimpleList" cols="1">
<tbody>
<row>
<entry>
<para>
<literal>svc:/network/rpc/metamed</literal>
</para>
</entry> </row>
<row>
<entry>
<para>
<literal>svc:/network/rpc/metamh</literal>
</para>
</entry> </row>
</tbody>
</tgroup>
</informaltable>
<para>If the Solaris Volume Manager includes multi-node disk sets, then this service
should be online in addition to the other services already mentioned:</para>
<informaltable> <tgroup Remap="SimpleList" cols="1">
<tbody>
<row>
<entry>
<para>
<literal>svc:/network/rpc/mdcomm</literal>
</para>
</entry> </row>
</tbody>
</tgroup>
</informaltable>
<para>For more information on SMF, see <olink remap="external" targetdoc="819-2379" targetptr="hbrunlevels-25516">Chapter 14, <citetitle remap="chapter">Managing
Services (Overview),</citetitle> in <citetitle remap="book">System Administration
Guide: Basic Administration</citetitle>
</olink>.</para>
</sect1>
</chapter>
