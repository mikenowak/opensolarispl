<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML//EN" "docbook.dtd"[
	<!ENTITY % xinclude SYSTEM "xinclude.mod">
	%xinclude;
]>

<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="ftyxi">



<title>Używanie ACL do ochrony plików w ZFS-ie</title>
<toc>
<para>Ten rozdział dostarcza informacji na temat używania list kontroli dostępu (ACL)
do ochrony plików w ZFS-ie poprzez dostarczenie bardziej dokładnych uprawnień niż
standardowe UNIX.</para>
<para>Rozdział składa się z następujących podrozdziałów:</para>
<itemizedlist>
<listitem>
<para>
<olink targetdoc="" remap="internal" targetptr="gbacb">Nowy model ACL-i w Solarisie</olink>
</para>
</listitem>
<listitem>
<para>
<olink targetdoc="" remap="internal" targetptr="gbace">Ustawianie ACL-i dla plików w ZFS-ie</olink>
</para>
</listitem>
<listitem>
<para>
<olink targetdoc="" remap="internal" targetptr="gbabw">Ustawianie i wyświetlanie ACL-i dla plików w ZFS-ie w formacie rozszerzonym</olink>
</para>
</listitem>
<listitem>
<para>
<olink targetdoc="" remap="internal" targetptr="gbchf">Ustawianie i wyświetlanie ACL-i dla plików w ZFS-ie w formacie skróconym</olink>
</para>
</listitem>
</itemizedlist>
</toc>
<sect1 xml:id="gbacb">
<title>Nowy model ACL-i w Solarisie</title>
<para>Do niedawna poprzednie wersje Solarisa wspierały implementację ACL, która
była przede wszystkim oparta na specyfikacji POSIX-draft. ACL oparte na tej
specyfikacji są używane do ochrony plików dla UFS-a i tłumaczone dla NFS-a
w wersji poprzedniej niż NFSv4.<indexterm xml:id="indexterm-411">
<primary>ACL-e</primary>
<secondary>opis</secondary>
</indexterm>
<indexterm xml:id="indexterm-412">
<primary>ACL-e NFSv4</primary>
<secondary>model</secondary>
<tertiary>opis</tertiary>
</indexterm>
<indexterm xml:id="indexterm-413">
<primary>ACL-e Solarisa</primary>
<secondary>nowy model</secondary>
<tertiary>opis</tertiary>
</indexterm>
</para>
<para>Wraz z wprowadzeniem NFSv4 został określony nowy model ACL, który w pełni wspiera
współpracę, jaką NFSv4 zapewnia pomiędzy klientami UNIX-owymi jak i nie-UNIX-owymi.
Nowa implementacja ACL-i zdefiniowana w specyfikacji NFSv4 dostarcza znacznie bogatszą
semantykę opartą o ACL-e w stylu NT.</para>
<para>Główne różnice w nowym modelu ACL są następujące:</para>
<itemizedlist>
<listitem>
<para>Oparte o specyfikację NFSv4 i podobne do ACL-i w stylu NT.</para>
</listitem>
<listitem>
<para>Dostarczają bardziej dokładny zestaw uprawnień dostępu. Więcej informacji znajduje się
w <olink targetdoc="" remap="internal" targetptr="gbbht">tabeli 7–2</olink>.</para>
</listitem>
<listitem>
<para>Ustawiane i wyświetlane raczej za pomocą poleceń <command>chmod</command> oraz <command>ls</command> niż <command>setfacl</command> i <command>getfacl</command>.</para>
</listitem>
<listitem>
<para>Dostarczają bogatszą semantykę dziedziczenia do określania jak prawa dostępu
są przenoszone z katalogu na podkatalogi i głębiej. Więcej informacji znajduje się pod
<olink targetdoc="" remap="internal" targetptr="gbaax">ACL Inheritance</olink>.</para>
</listitem>
</itemizedlist>
<para>Obydwa modele ACL dostarczają bardziej szczegółową kontrolę dostępu niż
standardowe uprawnienia plików. Podobnie jak ACL-e oparte o POSIX-draft (nieostateczną wersję dokumentu, szkic), nowe ACL-e
są złożone z wielu wpisów kontroli dostępu (ACE).</para>
<para>ACL oparty o POSIX-draft używa pojedynczego wpisu w celu zdefiniowania jakie prawa
są dopuszczalne, a jakie zabronione. Nowy model ACL ma dwa rodzaje wpisów ACE, które
wpływają na sprawdzanie dostępu: <literal>ALLOW</literal> oraz <literal>DENY</literal>.
W związku z tym nie można wywnioskować z jakiegokolwiek pojedynczego wpisu ACE, czy
definiuje prawa dostępu bądź nie, jeśli nie zostanie zdefiniowane, czy ten
ACE jest dozwolony, czy zabroniony.<indexterm xml:id="indexterm-414">
<primary>ACL-e</primary>
<secondary>różnice w stosunku do ACL-i z POSIX-draft</secondary>
</indexterm>
<indexterm xml:id="indexterm-415">
<primary>ACL-e NFSv4</primary>
<secondary>różnice w stosunku do ACL-i z POSIX-draft</secondary>
</indexterm>
<indexterm xml:id="indexterm-416">
<primary>ACL-e Solarisa</primary>
<secondary>różnice w stosunku do ACL-i z POSIX-draft</secondary>
</indexterm>
<indexterm xml:id="indexterm-417">
<primary>ACL-E z POSIX-draft</primary>
<secondary>opis</secondary>
</indexterm>
</para>
<para>Konwersja ACL-i pomiędzy tymi w stylu NFSv4 a POSIX-draft przebiega następująco:</para>
<itemizedlist>
<listitem>
<para>W przypadku używania narzędzi świadomych ACL-i, takich jak polecenia <command>cp</command>, <command>mv</command>, <command>tar</command>, <command>cpio</command> lub <command>rcp</command> do przeniesienia plików z UFS-a z ACL-ami na ZFS, ACL-e POSIX-draft są tłumaczone na odpowiednie ACL-e w stylu NFSv4.</para>
</listitem>
<listitem>
<para>Niektóre ACL-e w stylu NFSv4 są tłumaczone na ACL-e POSIX-draft.
W przypadku, gdy wpis ACL w stylu NFSv4 nie jest tłumaczony na odpowiedni ACL POSIX-draft,
pokaże się komunikat podobny do poniższego:</para>
<screen># cp -p filea /var/tmp
cp: failed to set acl entries on /var/tmp/filea</screen>
</listitem>
<listitem>
<para>W przypadku utworzenia archiwum UFS <command>tar</command> or <command>cpio</command>
z opcją zachowywania ACL (<command>tar</command> <option>
p</option> lib <command>cpio</command> <option>
P</option>) na systemie, który działa pod kontrolą aktualnego wydania Solarisa,
ACL-e zostaną stracone w przypadku odtworzenia tego archiwum na systemie,
który działa pod kontrolą poprzedniego wydania Solarisa.</para>
<para>Wszystkie pliki zostaną odtworzone z prawidłowymi standardowymi uprawnieniami,
ale wpisy ACL zostaną zignorowane.</para>
</listitem>
<listitem>
<para>Można użyć polecenia <command>ufsrestore</command> do odtworzenia danych
na system plików ZFS, ale wpisy ACL zostaną utracone.</para>
</listitem>
<listitem>
<para>Przy próbie ustawienia ACL-a w stylu NFSv4 dla pliku na UFS-ie, pokaże
się komunikat podobny do poniższego:</para>
<screen>chmod: ERROR: ACL type's are different</screen>
</listitem>
<listitem>
<para>Przy próbie ustawienia ACL-a w stylu POSIX dla pliku na ZFS-ie, pokaże
się komunikat podobny do poniższego:</para>
<screen># getfacl filea
File system doesn't support aclent_t style ACL's.
See acl(5) for more information on Solaris ACL support.</screen>
</listitem>
</itemizedlist>
<para>Więcej informacji na temat ograniczeń związanych z ACL-ami i produktami do backupu znajduje się
pod <olink targetdoc="" remap="internal" targetptr="gbscu">Saving ZFS Data With Other Backup Products</olink>.</para>
<sect2 xml:id="gbaay">
<title>Opis składni dla ustawiania ACL-i</title>
<para>Dostarczane są dwa podstawowe formaty ACL-i:<indexterm xml:id="indexterm-418">
<primary>ACL-e</primary>
<secondary>opis formatu</secondary>
</indexterm>
<indexterm xml:id="indexterm-419">
<primary>NFSv4 ACL-e</primary>
<secondary>opis formatu</secondary>
</indexterm>
<indexterm xml:id="indexterm-420">
<primary>ACL-e Solarisa</primary>
<secondary>opis formatu</secondary>
</indexterm>
</para>
<para>
<emphasis role="strong">Składnia dla ustawiania podstawowych ACL-i</emphasis>
</para>
<para>
<literal>chmod [opcje] A[indeks]{+|=}owner@, group@, everyone@:</literal>
<emphasis>prawa-dostępu</emphasis>/...[:<emphasis>flagi-dziedziczenia</emphasis>]:<literal>deny | allow</literal> <replaceable>plik</replaceable>
</para>
<para>
<literal>chmod [opcje] A-owner@, group@, everyone@:</literal>
<emphasis>prawa-dostępu</emphasis>/...[:<emphasis>flagi-dziedziczenia</emphasis>]:<literal>deny | allow</literal> <replaceable>plik ...</replaceable>
</para>
<para>
<literal>chmod [opcje] A[indeks]-</literal> <replaceable>plik</replaceable>
</para>
<para>
<emphasis role="strong">Składnia dla ustawiania dokładnych ACL-i</emphasis>
</para>
<para>
<literal>chmod [opcje] A[indeks]{+|=}user|group:</literal>
<emphasis>prawa-dostępu</emphasis>/...[:<emphasis>flagi-dziedziczenia</emphasis>]<literal>:deny | allow</literal> <replaceable>plik</replaceable>
</para>
<para>
<literal>chmod [opcje] A-user|group:</literal>
<emphasis>prawa-dostępu</emphasis>/...[:<emphasis>flagi-dziedziczenia</emphasis>]<literal>:deny | allow</literal> <replaceable>plik ...</replaceable>
</para>
<para>
<literal>chmod [opcje] A[indeks]-</literal> <replaceable>plik</replaceable>
</para>
<variablelist>
<varlistentry>
<term>owner@, group@, everyone@</term>
<listitem>
<para>Określa <emphasis>typ-wpisu-ACL</emphasis> dla podstawowej składni ACL
Opis <emphasis>typów-wpisu-ACL</emphasis> znajduje się w <olink targetdoc="" remap="internal" targetptr="gbbhr">tabeli 7–1</olink>.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>user lub group:<emphasis>ID-wpisu-ACL=nazwaużytkownika lub nazwagrupy</emphasis>
</term>
<listitem>
<para>Określa <emphasis>typ-wpisu-ACL</emphasis> dla dokładnej składni ACL.
Wpis tego typu musi także zawierać <emphasis>ID-wpisu-ACL</emphasis>, <emphasis>nazwaużytkownika</emphasis> lub <emphasis>nazwagrupy</emphasis>. Opis <emphasis>typów-wpisu-ACL</emphasis> znajduje się w <olink targetdoc="" remap="internal" targetptr="gbbhr">tabeli 7–1</olink>.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis>prawa-dostępu</emphasis>/.../</term>
<listitem>
<para>Określa prawa dostępu, które mogą być przydzielone lub zabronione. Opis praw dostępu ACL
znajduje się w <olink targetdoc="" remap="internal" targetptr="gbbht">tabeli 7–2</olink>.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis>flagi-dziedziczenia</emphasis>
</term>
<listitem>
<para>Określa listę opcjonalnych flag dziedziczenia wpisów ACL.
Opis flag dziedziczenia ACL znajduje się w <olink targetdoc="" remap="internal" targetptr="gbbhx">tabeli 7–3</olink>.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>deny</literal> | <literal>allow</literal>
</term>
<listitem>
<para>Określa, czy podane uprawnienia są dozwolone, czy zabronione.</para>
</listitem>
</varlistentry>
</variablelist>
<para>W poniższym przykładzie wartość <emphasis>ID-wpisu-ACL</emphasis>
jest nieistotna. </para>
<screen>group@:write_data/append_data/execute:deny</screen>
<para>Poniższy przykład zawiera podaną wartość <emphasis>ID-wpisu-ACL</emphasis>,
ponieważ w ACL (<emphasis>typ-wpisu-ACL</emphasis>) jest zawarty określony użytkownik.</para>
<screen>0:user:gozer:list_directory/read_data/execute:allow</screen>
<para>Wyświetlony wpis ACL wygląda podobnie jak poniżej:</para>
<screen>
<userinput>2</userinput>:group@:write_data/append_data/execute:deny</screen>
<para>Liczba <emphasis role="strong">2</emphasis> lub określony <emphasis>indeks-ID</emphasis>
w tym przykładzie określa wpis ACL w większej liście, która może mieć wiele
wpisów dla właściciela pliku, określonych UID-ów, grupy lub każdego. Można
określać <emphasis>indeks-ID</emphasis> przy użyciu polecenia <command>chmod</command>
w celu wskazania właściwej części listy ACL do modyfikacji. Na przykład
w celu wskazania wpisu o indeksie ID 3, można użyć opcji <literal>A3</literal>
dla polecenia <command>chmod</command> w sposób podobny do poniższego:</para>
<screen>chmod A3=user:venkman:read_acl:allow <emphasis>plik</emphasis>
</screen>
<para>Typy wpisów ACL, które są reprezentacją właściciela, grupy i pozostałych użytkowników,
są opisane w poniższej tabeli.<indexterm xml:id="indexterm-421">
<primary>ACL-e</primary>
<secondary>typy wpisów</secondary>
</indexterm>
</para>
<table frame="topbot" xml:id="gbbhr">

<title>Typy wpisów ACL</title>
<tgroup cols="2" colsep="0" rowsep="0">
<colspec colwidth="23.49*"/>
<colspec colwidth="76.51*"/>
<thead>
<row rowsep="1">
<entry>
<para>Typ wpisu ACL</para>
</entry>
<entry>
<para>Opis</para>
</entry>
</row>
</thead>
<tbody>
<row>
<entry>
<para>
<literal>owner@</literal>
</para>
</entry>
<entry>
<para>Określa dostęp przyznany dla właściciela obiektu.</para>
</entry>
</row>
<row>
<entry>
<para>
<literal>group@</literal>
</para>
</entry>
<entry>
<para>Określa dostęp przyznany dla przynależącej grupy dla obiektu.</para>
</entry>
</row>
<row>
<entry>
<para>
<literal>everyone@</literal>
</para>
</entry>
<entry>
<para>Określa dostęp przyznany jakiemukolwiek użytkownikowi lub grupie, która nie
pasuje do jakiegokolwiek pozostałego wpisu ACL.</para>
</entry>
</row>
<row>
<entry>
<para>
<literal>user</literal>
</para>
</entry>
<entry>
<para>Z podaną nazwą użytkownika określa dostęp przyznany dodatkowemu użytkownikowi
do obiektu. Musi zawierać <emphasis>ID-wpisu-ACL</emphasis>, która zawiera
<replaceable>nazwę użytkownika</replaceable> lub <replaceable>ID użytkownika</replaceable>.
Jeśli wartość nie jest prawidłową wartością numeryczną UID lub <replaceable>nazwą użytkownika</replaceable>,
ten typ wpisu ACL jest nieprawidłowy.</para>
</entry>
</row>
<row>
<entry>
<para>
<literal>group</literal> </para>
</entry>
<entry>
<para>Z podaną nazwą grupy określa dostęp przyznany dodatkowej grupie do
obiektu. Musi zawierać <emphasis>ID-wpisu-ACL</emphasis>, która zawiera
<replaceable>nazwę grupy</replaceable> lub <replaceable>ID grupy</replaceable>.
Jeśli wartość nie jest prawidłową wartością numeryczną GID lub <replaceable>nazwą użytkownika</replaceable>,
ten typ wpisu ACL jest nieprawidłowy.</para>
</entry>
</row>
</tbody>
</tgroup>
</table>
<para>Prawa dostępu ACL są opisane w poniższej tabeli.<indexterm xml:id="indexterm-422">
<primary>ACL-e</primary>
<secondary>przywileje ACL</secondary>
</indexterm>
</para>
<table frame="topbot" xml:id="gbbht">

<title>Prawa dostępu ACL</title>
<tgroup cols="3" colsep="0" rowsep="0">
<colspec colwidth="23.20*"/>
<colspec colname="colspec0" colwidth="23.20*"/>
<colspec colwidth="76.80*"/>
<thead>
<row rowsep="1">
<entry>
<para>Prawa dostępu</para>
</entry>
<entry>
<para>Podstawowe prawa dostępu</para>
</entry>
<entry>
<para>Opis</para>
</entry>
</row>
</thead>
<tbody>
<row>
<entry>
<para>add_file</para>
</entry>
<entry>
<para>w</para>
</entry>
<entry>
<para>Zezwala na tworzenie nowego pliku w katalogu.</para>
</entry>
</row>
<row>
<entry>
<para>add_subdirectory</para>
</entry>
<entry>
<para>p</para>
</entry>
<entry>
<para>Zezwala na tworzenie nowego podkatalogu w katalogu.</para>
</entry>
</row>
<row>
<entry>
<para>append_data</para>
</entry>
<entry>
<para>p</para>
</entry>
<entry>
<para>Dla pliku - pozwala na modyfikację zawartości pliku.</para>
</entry>
</row>
<row>
<entry>
<para>delete</para>
</entry>
<entry>
<para>d</para>
</entry>
<entry>
<para>Pozwala na usunięcie pliku.</para>
</entry>
</row>
<row>
<entry>
<para>delete_child</para>
</entry>
<entry>
<para>D</para>
</entry>
<entry>
<para>Zezwala na usunięcie pliku lub podkatalogu wewnątrz katalogu.</para>
</entry>
</row>
<row>
<entry>
<para>execute</para>
</entry>
<entry>
<para>x</para>
</entry>
<entry>
<para>Pozwala na wykonanie pliku lub przeszukiwanie zawartości katalogu.</para>
</entry>
</row>
<row>
<entry>
<para>list_directory</para>
</entry>
<entry>
<para>r</para>
</entry>
<entry>
<para>Pozwala na wydrukowanie zawartości katalogu.</para>
</entry>
</row>
<row>
<entry>
<para>read_acl</para>
</entry>
<entry>
<para>c</para>
</entry>
<entry>
<para>Pozwala na odczyt listy ACL (<command>ls</command>).</para>
</entry>
</row>
<row>
<entry>
<para>read_attributes</para>
</entry>
<entry>
<para>a</para>
</entry>
<entry>
<para>Pozwala na odczyt podstawowych (nie ACL) atrybutów dla pliku. Można myśleć
o podstawowych atrybutach jako atrybuty poziomu "stat". Ustawienie tego prawa
pozwala na wykonywanie poleceń <command>ls</command>(1) oraz <literal>stat</literal>(2)
dla obiektu.</para>
</entry>
</row>
<row>
<entry>
<para>read_data</para>
</entry>
<entry>
<para>r</para>
</entry>
<entry>
<para>Pozwala na odczyt zawartości pliku.</para>
</entry>
</row>
<row>
<entry>
<para>read_xattr</para>
</entry>
<entry>
<para>R</para>
</entry>
<entry>
<para>Zezwolenie na czytanie poszerzonych atrybutów pliku, bądź na wykonywanie wyszukiwania w katalogu poszerzonych atrybutów pliku.</para>
</entry>
</row>
<row>
<entry>
<para>synchronize</para>
</entry>
<entry>
<para>s</para>
</entry>
<entry>
<para>Wypełniacz, na razie nie używany.</para>
</entry>
</row>
<row>
<entry>
<para>write_xattr</para>
</entry>
<entry>
<para>A</para>
</entry>
<entry>
<para>Zezwolenie na tworzenie poszerzonych atrybutów bądź na zapis do katalogu poszerzonych atrybutów.</para>
<para>Przyznanie tego prawa użytkownikowi oznacza, że może on tworzyć katalog
rozszerzonych atrybutów dla pliku. Prawa do pliku kontrolują uprawnienia użytkownika do atrybutu.</para>
</entry>
</row>
<row>
<entry>
<para>write_data</para>
</entry>
<entry>
<para>w</para>
</entry>
<entry>
<para>Pozwala na zmianę lub zastąpienie zawartości pliku.</para>
</entry>
</row>
<row>
<entry>
<para>write_attributes</para>
</entry>
<entry>
<para>W</para>
</entry>
<entry>
<para>Zezwolenie na dowolną zmianę czasów związanych z plikiem lub katalogiem.</para>
</entry>
</row>
<row>
<entry>
<para>write_acl</para>
</entry>
<entry>
<para>C</para>
</entry>
<entry>
<para>Pozwala na zapis list ACL lub możliwość modyfikacji listy ACL
poprzez użycie polecenia <command>chmod</command>.</para>
</entry>
</row>
<row>
<entry>
<para>write_owner</para>
</entry>
<entry>
<para>o</para>
</entry>
<entry>
<para>Pozwala na zmianę właściciela lub grupy pliku, czyli możliwość
wykonania poleceń <command>chown</command> lub <command>chgrp</command> na pliku.</para>
<para>Zezwolenie na przejęcie pliku lub na zmianę grupy na tę, której członkiem jest użytkownik. Na dowolną zmianę właściciela bądź grupy pozwala przywilej <literal>PRIV_FILE_CHOWN</literal>.</para>
</entry>
</row>
</tbody>
</tgroup>
</table>
</sect2>
<sect2 xml:id="gbaax" remap="">
<title>Dziedziczenie ACL-i</title>
<para>Dzięki wprowadzeniu dziedziczenia ACL-i nowoutworzony plik lub katalog może dziedziczyć te ACL-e, które powinien, nie ignorując jednak bitów praw wyższego katalogu.<indexterm xml:id="indexterm-423">
<primary>ACL-e</primary>
<secondary>Dziedziczenie ACL-i</secondary>
</indexterm>
<indexterm xml:id="indexterm-424">
<primary>NFSv4 ACL</primary>
<secondary>Dziedziczenie ACL-i</secondary>
</indexterm>
<indexterm xml:id="indexterm-425">
<primary>ACL-e Solarisa</primary>
<secondary>Dziedziczenie ACL-i</secondary>
</indexterm>
</para>
<para>Domyślnie ACL-e nie są dziedziczone. Po ustawieniu ACL-i dla katalogu, nie są one dziedziczone przez podkatalogi. Dziedziczenie musi być włączone ręcznie dla każdego pliku i katalogu.</para>
<para>Flagi opcjonalnego dziedziczenia opisane zostały w poniższej tabeli.<indexterm xml:id="indexterm-426">
<primary>ACL-e</primary>
<secondary>flagi dziedziczenia ACL-i</secondary>
</indexterm>
<indexterm xml:id="indexterm-427">
<primary>NFSv4 ACLs</primary>
<secondary>flagi dziedziczenia ACL-i</secondary>
</indexterm>
<indexterm xml:id="indexterm-428">
<primary>ACL-e Solarisa</primary>
<secondary>flagi dziedziczenia ACL-i</secondary>
</indexterm>
</para>
<table frame="topbot" xml:id="gbbhx">

<title>flagi dziedziczenia ACL-i</title>
<tgroup cols="3" colsep="0" rowsep="0">
<colspec colwidth="29.98*"/>
<colspec colname="colspec1" colwidth="24.32*"/>
<colspec colwidth="75.25*"/>
<thead>
<row>
<entry rowsep="1">
<para>flagi dziedziczenia</para>
</entry>
<entry rowsep="1">
<para>Krótka forma flagi dziedziczenia</para>
</entry>
<entry rowsep="1">
<para>opis</para>
</entry>
</row>
</thead>
<tbody>
<row>
<entry>
<para>file_inherit</para>
</entry>
<entry>
<para>f</para>
</entry>
<entry>
<para>Tylko pliki w katalogu dziedziczą ACL-e katalogu, który je zawiera.</para>
</entry>
</row>
<row>
<entry>
<para>dir_inherit</para>
</entry>
<entry>
<para>d</para>
</entry>
<entry>
<para>Tylko katalogi dziedziczą ACL-e katalogu, który je zawiera.</para>
</entry>
</row>
<row>
<entry>
<para>inherit_only</para>
</entry>
<entry>
<para>i</para>
</entry>
<entry>
<para>ACL-e dziedziczone są z wyższego katalogu, ale dotyczą tylko plików lub podkatalogów, nie samego katalogu, na który nałożona została flaga. Flaga ta wymaga jednej z flag: <literal>file_inherit</literal> i <literal>dir_inherit</literal>, lub obu, aby wskazać, co ma być dziedziczone.</para>
</entry>
</row>
<row>
<entry>
<para>no_propagate</para>
</entry>
<entry>
<para>n</para>
</entry>
<entry>
<para>Dziedziczenie ACL-i z wyższego katalogu tylko do zawartości pierwszego podkatalogu, z pominięciem następnych poziomów. Flaga wymaga jednej z flag: <literal>file_inherit</literal> i <literal>dir_inherit</literal>, lub obu w celu zdefiniowania, co ma być dziedziczone.</para>
</entry>
</row>
</tbody>
</tgroup>
</table>
<para>Istnieje dodatkowa możliwość zdefiniowania głównej reguły dziedziczenia na poziomie systemu plików. Może być bardziej lub mniej restrykcyjna i używa się w tym celu właściwości systemu plików <literal>aclinherit</literal>. Więcej informacji w następnym podrozdziale.</para>
</sect2>
<sect2 xml:id="gbaaz">
<title>Tryby właściwości ACL-i</title>
<para>System plików ZFS ma dwa możliwe tryby właściwości odnośnie ACL-i::<indexterm xml:id="indexterm-429">
<primary>ACL-e</primary>
<secondary>tryby właściwości ACL-i</secondary>
</indexterm>
<indexterm xml:id="indexterm-430">
<primary>ACL-e NFSv4</primary>
<secondary>tryby właściwości ACL-i</secondary>
</indexterm>
<indexterm xml:id="indexterm-431">
<primary>ACL-e Solarisa</primary>
<secondary>tryby właściwości ACL-i</secondary>
</indexterm>
</para>
<itemizedlist>
<listitem>
<para>
<literal>aclinherit</literal> – Określa podejście do dziedziczenia ACL-i. Wartości zawierają:<indexterm xml:id="indexterm-432">
<primary>ACL-e</primary>
<secondary>
<literal>aclinherit</literal> tryb właściwości</secondary>
</indexterm>
<indexterm xml:id="indexterm-433">
<primary>
<literal>aclinherit</literal> tryb właściwości</primary>
</indexterm>
</para>
<itemizedlist>
<listitem>
<para>
<literal>discard</literal> – Przy tworzeniu katalogu lub pliku nie dziedziczy się żadnych ACL-i. ACL-e są ustawiane równoważnie do uprawnień systemu plików bądź katalogu.</para>
</listitem>
<listitem>
<para>
<literal>noallow</literal> – Przy nowych obiektach dziedziczone są tylko dziedziczne wartości ACL-i, mające typ dostępu<literal>deny</literal>.</para>
</listitem>
<listitem>
<para>
<literal>secure</literal> – Przy nowych obiektach podczas dziedziczenia ACL-i usuwane są uprawnienia: <literal>write_owner</literal> i <literal>write_acl</literal>.</para>
</listitem>
<listitem>
<para>
<literal>passthrough</literal> – Przy nowych obiektach dziedziczne ACL-e są dziedziczone bez zmian. Ten tryb efektywnie wyłącza tryb <literal>secure</literal>.</para>
</listitem>
</itemizedlist>
<para>Domyślnym trybem dla <literal>aclinherit</literal> jest <literal>secure</literal>.</para>
</listitem>
<listitem>
<para>
<literal>aclmode</literal> – Właściwość ta zmienia zachowania ACL-i podczas zmiany trybu pliku bądź katalogu narzędziem  <command>chmod</command> oraz podczas tworzenia pliku. Wartości zawierają:<indexterm xml:id="indexterm-434">
<primary>ACL-e</primary>
<secondary>
<literal>aclmode</literal> tryb właściwości</secondary>
</indexterm>
<indexterm xml:id="indexterm-435">
<primary>
<literal>aclmode</literal> tryb właściwości</primary>
</indexterm>
</para>
<itemizedlist>
<listitem>
<para>
<literal>discard</literal> – Usuwane są wszelkie ACL-e za wyjątkiem tych, które są konieczne do ustalenia trybu pliku lub katalogu.</para>
</listitem>
<listitem>
<para>
<literal>groupmask</literal> – Uprawnienia ACL użytkownika bądź grupy są zmniejszane tak, aby były co najwyżej równe uprawnieniom grupy wynikłym z bitów uprawnień, chyba że użytkownik ma taki sam UID jak właściciel pliku bądź katalogu. Wtedy ACL-e są zmniejszane tak, aby były nie większe niż bity uprawnień właściciela.</para>
</listitem>
<listitem>
<para>
<literal>passthrough</literal> – Przy nowych obiektach dziedziczne ACL-e są dziedziczone bez zmian.</para>
</listitem>
</itemizedlist>
<para>Domyślnym trybem dla <literal>aclmode</literal> jest <literal>groupmask</literal>.</para>
</listitem>
</itemizedlist>
</sect2>
</sect1>
<sect1 xml:id="gbace">
<title>Ustawianie ACL-i dla plików ZFS-a</title>
<para>W implementacji ZFs-a ACL-e składają się z tablicy definicji ACL-i. ZFS implementuje <emphasis>czysty</emphasis> model ACL-i, co oznacza, że każdy plik ma ACL-a. Najczęściej ACL-e są <emphasis>proste</emphasis> w tym znaczeniu, że reprezentują tradycyjny model UNIX-a <literal>właściciel/grupa/inni(ang. owner/group/other)</literal>.<indexterm xml:id="indexterm-436">
<primary>ACL-e</primary>
<secondary>ustawianie dla plików ZFS-a</secondary>
<tertiary>opis</tertiary>
</indexterm>
<indexterm xml:id="indexterm-437">
<primary>setting</primary>
<secondary>ACL-e dla plików ZFS-a</secondary>
<tertiary>opis</tertiary>
</indexterm>
<indexterm xml:id="indexterm-438">
<primary>systemy plików ZFS-a</primary>
<secondary>ustawianie ACL-i dla plików ZFS-a</secondary>
<tertiary>opis</tertiary>
</indexterm>
</para>
<para>Pliki ZFS-a wciąż mają bity uprawnień i tryb, ale wartości te są raczej cachem reprezentacji ACl-i. W związku z tym równocześnie do zmiany uprawnień pliku, zmieniają się jego ACL-e. Dodatkowo po usunięciu konkretnego ACL-a zezwalającego użytkownikowi dostęp do pliku lub katalogu, użytkownik nadal może mieć dostęp do pliku lub katalogu ze względu na bity uprawnień pliku lub katalogu, zezwalające na dostęp grupie lub wszystkim użytkownikom. Wszystkie decyzje o dostępie podejmowane są na podstawie uprawnień reprezentowanych w ACL-ach pliku lub katalogu.</para>
<para>Podstawowe reguły dostępu ACL-i do w ZFS-ie są następujące:</para>
<itemizedlist>
<listitem>
<para>ZFS przetwarza wpisy ACL-i w kolejności w jakiej pojawiają się w ACL-ach, od góry do dołu.</para>
</listitem>
<listitem>
<para>Przetwarzane są tylko te ACL-e, których “kto” jest identyczny z autorem żądania.</para>
</listitem>
<listitem>
<para>Po przydzieleniu uprawnienia, nie można go odebrać następującym później wpisem ACL w tym samym zestawie uprawnień ACL-i.</para> 
</listitem>
<listitem>
<para>Właścicielowi pliku przydziela się bezwarunkowo uprawnienie <literal>write_acl</literal>, nawet jeśli jest zabronione explicite. Pozostałych uprawnień odmawia się, jeśli nie zostały sprecyzowane.</para>
<para>W przypadku zabronionego dostępu lub gdy brak sprecyzowanego uprawnienia, podsystem przywilejów ustala, jakiego dostępu udziela się właścicielowi pliku lub superużytkownikowi. Unika się dzięki temu wykluczenia właścicieli plików z dostępu do ich własnych plików oraz pozwala superużytkownikowi na modyfikacje plików w celu odzyskania danych.</para>
</listitem>
</itemizedlist>
<para>ACL ustalony dla katalogu nie jest automatycznie dziedziczony przez jego podkatalogi i pliki. Jeśli ustalony ACL ma być dziedziczony, należy użyć flag dziedziczenia ACL-i. Więcej informacji w<olink targetdoc="" remap="internal" targetptr="gbbhx">Table 7–3</olink> and <olink targetdoc="" remap="internal" targetptr="gbabx">Ustalanie dziedziczenia ACl-i dla plików ZFS-a w formacie verbose</olink>.</para>
<para>Po utworzeniu pliku, w oparciu o wartość parametru <command>umask</command>, tworzony jest domyślny prosty ACL, podobny do poniższego:</para>
<screen>$ <userinput>ls -v file.1</userinput>
-r--r--r--   1 root     root      206663 May  4 11:52 file.1
     0:owner@:write_data/append_data/execute:deny
     1:owner@:read_data/write_xattr/write_attributes/write_acl/write_owner
         :allow
     2:group@:write_data/append_data/execute:deny
     3:group@:read_data:allow
     4:everyone@:write_data/append_data/write_xattr/execute/write_attributes
         /write_acl/write_owner:deny
     5:everyone@:read_data/read_xattr/read_attributes/read_acl/synchronize
         :allow</screen>
<para>Należy zwrócić uwagę, że każda kategoria użytkownika (<literal>owner@</literal>, <literal>group@</literal>, <literal>everyone@</literal>) ma w tym przykładzie dwa spisy ACL. Jeden wpis dla prawa <literal>deny</literal> i jeden dla <literal>allow</literal>.<indexterm xml:id="indexterm-439">
<primary>ACL-e</primary>
<secondary>ACL-e na plikach ZFS-a</secondary>
<tertiary>szczegółowy opis</tertiary>
</indexterm>
<indexterm xml:id="indexterm-440">
<primary>systemy plików ZFS-a</primary>
<secondary>ACL-e na plikach ZFS-a</secondary>
<tertiary>szczegółowy opis</tertiary>
</indexterm>
</para>
<para>Opis ACL-i dla tego pliku:</para>
<variablelist>
<varlistentry>
<term>
<literal>0:owner@</literal>
</term>
<listitem>
<para>Właściciel pliku nie ma uprawnień do wykonywania (<literal>execute:deny</literal>).</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>1:owner@</literal>
</term>
<listitem>
<para>Właściciel może czytać i zmieniać zawartość pliku (<literal>read_data/write_data/append_data</literal>). Właściciel może też modyfikować atrybuty, takie jak timestamps, rozszerzone atrybuty i ACL-e (<literal>write_xattr/write_attributes
/write_acl</literal>). Właściciel może dodatkowo zmieniać właściciela pliku (<literal>write_owner:allow</literal>)</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>2:group@</literal>
</term>
<listitem>
<para>Grupa nie ma praw do zmiany i uruchamiania pliku (<literal>write_data/append_data/execute:deny</literal>).</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>3:group@</literal>
</term>
<listitem>
<para>Grupa ma prawa do odczytu pliku (<literal>read_data:allow</literal>).</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>4:everyone@</literal>
</term>
<listitem>
<para>Każdemu, kto nie jest właścicielem lub członkiem grupy, odmawia się praw do wykonywania pliku, zmiany jego zawartości, lub zmiany atrybutów (<literal>write_data/append_data/write_xattr/execute/write_attributes/write_acl/write_owner:deny</literal>).</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>5:everyone@</literal>
</term>
<listitem>
<para>Każdy, kto nie jest właścicielem lub nie należy do grupy, ma prawa do odczytu pliku i atrybutów (<literal>read_data/read_xattr/read_attributes/read_acl/synchronize:allow</literal>). Uprawnienie <literal>synchronize</literal> nie zostało jeszcze zaimplementowane.</para>
</listitem>
</varlistentry>
</variablelist>
<para>Przy tworzeniu nowego katalogu, biorąc pod uwagę wartość parametru <command>umask</command>, tworzony jet domyślny ACL, podobny do poniższego:</para>
<screen>$ <userinput>ls -dv dir.1</userinput>
drwxr-xr-x   2 root     root           2 Feb 23 10:37 dir.1
     0:owner@::deny
     1:owner@:list_directory/read_data/add_file/write_data/add_subdirectory
         /append_data/write_xattr/execute/write_attributes/write_acl
         /write_owner:allow
     2:group@:add_file/write_data/add_subdirectory/append_data:deny
     3:group@:list_directory/read_data/execute:allow
     4:everyone@:add_file/write_data/add_subdirectory/append_data/write_xattr
         /write_attributes/write_acl/write_owner:deny
     5:everyone@:list_directory/read_data/read_xattr/execute/read_attributes
         /read_acl/synchronize:allow</screen>
<para>Szczegółowy opis ACL-i dla tego katalogu:<indexterm xml:id="indexterm-441">
<primary>ACL-e</primary>
<secondary>ACL-e dla katalogów ZFS-a</secondary>
<tertiary>szczegółowy opis</tertiary>
</indexterm>
<indexterm xml:id="indexterm-442">
<primary>systemy plików ZFS-a</primary>
<secondary>ACL-e dla katalogów ZFS-a</secondary>
<tertiary>szczegółowy opis</tertiary>
</indexterm>
</para>
<variablelist>
<varlistentry>
<term>
<literal>0:owner@</literal>
</term>
<listitem>
<para>Lista odmownych uprawnień dla właściciela jest pusta (<literal>::deny</literal>).</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>1:owner@</literal>
</term>
<listitem>
<para>Właściciel może odczytywać i zmieniać zawartość katalogu  (<literal>list_directory/read_data/add_file/write_data/add_subdirectory/append_data</literal>), przeszukiwać zawartość (<literal>execute</literal>) i zmieniać atrybuty pliku, takie jak timestamps, rozszerzone atrybuty i ACL-e (<literal>write_xattr/write_attributes/write_acl</literal>). Może dodatkowo zmienić właściciela katalogu (<literal>write_owner:allow</literal>).</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>2:group@</literal>
</term>
<listitem>
<para>Grupa nie może zmieniać ani dodawać nowej zawartości do katalogu (<literal>add_file/write_data/add_subdirectory/append_data:deny</literal>).</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>3:group@</literal>
</term>
<listitem>
<para>Grupa może drukować listę i czytać zawartość katalogu. Grupa może dodatkowo przeszukiwać zawartość katalogu  (<literal>list_directory/read_data/execute:allow</literal>).</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>4:everyone@</literal>
</term>
<listitem>
<para>Każdemu kto nie jest właścicielem i nie należy do grupy odmawia się praw  dodawania i zmiany zawartości katalogu(<literal>add_file/write_data/add_subdirectory/append_data</literal>). Zabronione są dodatkowo zmiany atrybutów katalogu (<literal>write_xattr          /write_attributes/write_acl/write_owner:deny</literal>).</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>5:everyone@</literal>
</term>
<listitem>
<para>Każdy, kto nie jest właścicielem i nie należy do grupy, ma prawo do czytania i wykonywania zawartości katalogu oraz atrybutów katalogu (<literal>list_directory/read_data/read_xattr/execute/read_attributes/read_acl/synchronize:allow</literal>). Uprawnienie <literal>synchronize</literal> nie zostało jeszcze zaimplementowane.</para>
</listitem>
</varlistentry>
</variablelist>
</sect1>
<sect1 xml:id="gbabw">
<title>Ustalanie i drukowanie ACL-i dla plików ZFS-a w formacie verbose</title>
<para>Do zmiany ACL-i plików ZFS-a służy komenda <command>chmod</command>. Poniższa składnia <command>chmod</command> do zmiany ACL-i używa <emphasis>acl-specification</emphasis> do identyfikacji formatu ACL-i. Opis <emphasis>acl-specification</emphasis> znajduje się w<olink targetdoc="" remap="internal" targetptr="gbaay">Opis składni ustalania ACL-i</olink>.<indexterm xml:id="indexterm-443">
<primary>ACL-e</primary>
<secondary>ustalanie ACL-i dla plików ZFS-a (tryb verbose)</secondary>
<tertiary>opis</tertiary>
</indexterm>
<indexterm xml:id="indexterm-444">
<primary>ustalanie</primary>
<secondary>ustalanie ACL-i dla plików ZFS-a (tryb verbose)</secondary>
<tertiary>(opis)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-445">
<primary>systemy plików ZFS-a</primary>
<secondary>ustalanie ACL-i dla plików ZFS-a (tryb verbose)</secondary>
<tertiary>opis</tertiary>
</indexterm>
</para>
<itemizedlist>
<listitem>
<para>Dodawanie wpisów ACL-i</para>
<itemizedlist>
<listitem>
<para>Dodawanie wpisu ACL dla użytkownika</para>
<screen>% chmod A+<emphasis>acl-specification</emphasis> <emphasis>nazwapliku</emphasis>
</screen>
</listitem>
<listitem>
<para>Dodawanie wpisu ACL po <replaceable>index-ID</replaceable>
</para>
<screen>% chmod A<emphasis>index-ID</emphasis>+<emphasis>acl-specification</emphasis> <emphasis>nazwapliku</emphasis>
</screen>
<para>Komenda ta umieszcza wpis ACL w miejscu wskazywanym przez <replaceable>index-ID</replaceable>.</para>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<para>Zamiana wpisów ACL</para>
<screen>% chmod A<emphasis>index-ID</emphasis>=<emphasis>acl-specification</emphasis> <emphasis>nazwapliku</emphasis>
</screen>
<screen>% chmod A=<emphasis>acl-specification</emphasis> <emphasis>nazwapliku</emphasis>
</screen>
</listitem>
<listitem>
<para>Usuwanie wpisu ACL</para>
<itemizedlist>
<listitem>
<para>Usuwanie wpisu ACL po <replaceable>index-ID</replaceable>
</para>
<screen>% chmod A<emphasis>index-ID</emphasis>- <emphasis>nazwapliku</emphasis>
</screen>
</listitem>
<listitem>
<para>Usuwanie wpisu ACL po użytkowniku</para>
<screen>% chmod A-<emphasis>acl-specification</emphasis> <emphasis>nazwapliku</emphasis>
</screen>
</listitem>
<listitem>
<para>Usuwanie konkretnych ACL-i z pliku</para>
<screen>% chmod A- <emphasis>nazwapliku</emphasis>
</screen>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<para>Dokładniejsze informacje o ACL-ach drukowane są za pomocą komendy <command>ls</command> <option>
v</option>. Na przykład:</para>
<screen># <userinput>ls -v file.1</userinput>
-rw-r--r--   1 root     root      206663 Feb 16 11:00 file.1
     0:owner@:execute:deny
     1:owner@:read_data/write_data/append_data/write_xattr/write_attributes
         /write_acl/write_owner:allow
     2:group@:write_data/append_data/execute:deny
     3:group@:read_data:allow
     4:everyone@:write_data/append_data/write_xattr/execute/write_attributes
         /write_acl/write_owner:deny
     5:everyone@:read_data/read_xattr/read_attributes/read_acl/synchronize
         :allow</screen>
<para>Więcej informacji o używaniu skróconego formatu ACL-i w <olink targetdoc="" remap="internal" targetptr="gbchf">Ustalanie i drukowanie ACL-i dla plików ZFS-a w skróconym formacie</olink>.</para>
<example xml:id="gbsdc">

<title>Zmiana prostych ACL-i dla plików ZFS-a</title>
<para>W tym podrozdziale podane są przykłady ustalania i zmiany prostych ACL-i.<indexterm xml:id="indexterm-446">
<primary>ACL-e</primary>
<secondary>zmiana prostych ACL-i dla plików ZFS-a (tryb szczegółowy)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-447">
<primary>zmiana</primary>
<secondary>zmiana prostych ACL-i dla plików ZFS-a (tryb szczegółowy)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-448">
<primary>systemy plików ZFS-a</primary>
<secondary>zmiana prostych ACL-i dla plików ZFS-a (tryb szczegółowy)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<para>W poniższym przykładzie istnieje prosty ACL dla pliku <filename>file.1</filename>:</para>
<screen># <userinput>ls -v file.1</userinput>
-rw-r--r--   1 root     root      206663 Feb 16 11:00 file.1
     0:owner@:execute:deny
     1:owner@:read_data/write_data/append_data/write_xattr/write_attributes
         /write_acl/write_owner:allow
     2:group@:write_data/append_data/execute:deny
     3:group@:read_data:allow
     4:everyone@:write_data/append_data/write_xattr/execute/write_attributes
         /write_acl/write_owner:deny
     5:everyone@:read_data/read_xattr/read_attributes/read_acl/synchronize
         :allow</screen>
<para>W poniższym przykładzie przydziela się prawo <literal>write_data</literal> grupie <literal>group@</literal>.</para>
<screen># <userinput>chmod A2=group@:append_data/execute:deny file.1</userinput>
# <userinput>chmod A3=group@:read_data/write_data:allow file.1</userinput>
# <userinput>ls -v file.1</userinput>
-rw-rw-r--   1 root     root           206663 May  3 16:36 file.1
     0:owner@:execute:deny
     1:owner@:read_data/write_data/append_data/write_xattr/write_attributes
         /write_acl/write_owner:allow
     2:group@:append_data/execute:deny
     3:group@:read_data/write_data:allow
     4:everyone@:write_data/append_data/write_xattr/execute/write_attributes
         /write_acl/write_owner:deny
     5:everyone@:read_data/read_xattr/read_attributes/read_acl/synchronize
         :allow</screen>
<para>W poniższym przykładzie prawa dla pliku <filename>file.1</filename> ustala się na poziomie 644.</para>
<screen># <userinput>chmod 644 file.1</userinput>
# <userinput>ls -v file.1</userinput>
-rw-r--r--   1 root     root           206663 May  3 16:36 file.1
     0:owner@:execute:deny
     1:owner@:read_data/write_data/append_data/write_xattr/write_attributes
         /write_acl/write_owner:allow
     2:group@:write_data/append_data/execute:deny
     3:group@:read_data:allow
     4:everyone@:write_data/append_data/write_xattr/execute/write_attributes
         /write_acl/write_owner:deny
     5:everyone@:read_data/read_xattr/read_attributes/read_acl/synchronize
         :allow</screen>
</example>
<example xml:id="gcpsk">

<title>Ustalanie konkretnych ACL-i dla plików ZFS-a</title>
<para>W tym podrozdziale przedstawione są przykłady ustalania i drukowania prostych ACL-i.</para>
<para>W poniższym przykładzie przydziela się użytkownikowi <literal>gozer</literal> prawo <literal>read_data/execute</literal> do katalogu <filename>test.dir</filename>.</para>
<screen># <userinput>chmod A+user:gozer:read_data/execute:allow test.dir</userinput>
# <userinput>ls -dv test.dir</userinput>
drwxr-xr-x+  2 root     root           2 Feb 16 11:12 test.dir
     0:user:gozer:list_directory/read_data/execute:allow
     1:owner@::deny
     2:owner@:list_directory/read_data/add_file/write_data/add_subdirectory
         /append_data/write_xattr/execute/write_attributes/write_acl
         /write_owner:allow
     3:group@:add_file/write_data/add_subdirectory/append_data:deny
     4:group@:list_directory/read_data/execute:allow
     5:everyone@:add_file/write_data/add_subdirectory/append_data/write_xattr
         /write_attributes/write_acl/write_owner:deny
     6:everyone@:list_directory/read_data/read_xattr/execute/read_attributes
         /read_acl/synchronize:allow</screen>
<para>W poniższym przykładzie użytkownikowi <literal>gozer</literal> odbiera się prawo <literal>read_data/execute</literal>. </para>
<screen># <userinput>chmod A0- test.dir</userinput>
# <userinput>ls -dv test.dir</userinput>
drwxr-xr-x   2 root     root           2 Feb 16 11:12 test.dir
     0:owner@::deny
     1:owner@:list_directory/read_data/add_file/write_data/add_subdirectory
         /append_data/write_xattr/execute/write_attributes/write_acl
         /write_owner:allow
     2:group@:add_file/write_data/add_subdirectory/append_data:deny
     3:group@:list_directory/read_data/execute:allow
     4:everyone@:add_file/write_data/add_subdirectory/append_data/write_xattr
         /write_attributes/write_acl/write_owner:deny
     5:everyone@:list_directory/read_data/read_xattr/execute/read_attributes
         /read_acl/synchronize:allow</screen>
</example>
<example xml:id="gbsby">

<title>Interakcja ACL-i z uprawnieniami w plikach ZFS-a</title>
<para>Poniższe przykłady ilustrują interakcję między ustalaniem konkretnych ACL-i, a późniejszymi zmianami bitów praw plików i katalogów.</para>
<para>W poniższym przykładzie istnieje prosty ACL dla pliku <filename>file.2</filename>:</para>
<screen># <userinput>ls -v file.2</userinput>
-rw-r--r--   1 root     root        2703 Feb 16 11:16 file.2
     0:owner@:execute:deny
     1:owner@:read_data/write_data/append_data/write_xattr/write_attributes
         /write_acl/write_owner:allow
     2:group@:write_data/append_data/execute:deny
     3:group@:read_data:allow
     4:everyone@:write_data/append_data/write_xattr/execute/write_attributes
         /write_acl/write_owner:deny
     5:everyone@:read_data/read_xattr/read_attributes/read_acl/synchronize
         :allow</screen>
<para>W poniższym przykładzie odbiera się <literal>everyone@</literal> prawa zezwalające ACL-i.</para>
<screen># <userinput>chmod A5- file.2</userinput>
# <userinput>ls -v file.2</userinput>
-rw-r-----   1 root     root        2703 Feb 16 11:16 file.2
     0:owner@:execute:deny
     1:owner@:read_data/write_data/append_data/write_xattr/write_attributes
         /write_acl/write_owner:allow
     2:group@:write_data/append_data/execute:deny
     3:group@:read_data:allow
     4:everyone@:write_data/append_data/write_xattr/execute/write_attributes
         /write_acl/write_owner:deny</screen>
<para>Bity uprawnień dla pliku zostały zmienione z 655 na 650. Prawa odczytu dla <literal>everyone@</literal> zostały efektywnie usunięte z ustawień bitów praw w momencie, gdy usunięte zostały zezwolenia ACL dla <literal>everyone@</literal>.</para>
<para>W poniższym przykładzie zamieniono istniejące ACL-e na <literal>read_data/write_data</literal> dla <literal>everyone@</literal>.</para>
<screen># <userinput>chmod A=everyone@:read_data/write_data:allow file.3</userinput>
# <userinput>ls -v file.3</userinput>
-rw-rw-rw-+  1 root     root        1532 Feb 16 11:18 file.3
     0:everyone@:read_data/write_data:allow</screen>
<para>Komenda <command>chmod</command> efektywnie zamieniła istniejące ACL-e na uprawnienia <literal>read_data/write_data:allow</literal>, zezwalające właścicielowi, grupie oraz <literal>everyone@</literal> na zapis i odczyt. W tym modelu <literal>everyone@</literal> oznacza dostęp dla każdego użytkownika lub grupy. Nie istnieje żaden wpis ACL <literal>owner@</literal> ani <literal>group@</literal>, który zmieniałby uprawnienia dla właściciela i grupy, dlatego też bity praw ustawione zostają na 666.</para>
<para>W poniższym przykładzie istniejący ACL zostaje zamieniony dla użytkownika <literal>gozer</literal> na prawa do odczytu.</para>
<screen># <userinput>chmod A=user:gozer:read_data:allow file.3</userinput>
# <userinput>ls -v file.3</userinput>
----------+  1 root     root        1532 Feb 16 11:18 file.3
     0:user:gozer:read_data:allow</screen>
<para>Bity praw do pliku zostały obliczone na 000, ponieważ nie istnieją wpisy ACL dla <literal>owner@</literal>, <literal>group@</literal> ani <literal>everyone@</literal>, które reprezentują tradycyjne uprawnienia do pliku. Właściciel pliku może temu zaradzić, zerując uprawnienia (i ACL-e) jak poniżej:</para>
<screen># <userinput>chmod 655 file.3</userinput>
# <userinput>ls -v file.3</userinput>
-rw-r-xr-x+  1 root     root           0 Mar  8 13:24 file.3
     0:user:gozer::deny
     1:user:gozer:read_data:allow
     2:owner@:execute:deny
     3:owner@:read_data/write_data/append_data/write_xattr/write_attributes
         /write_acl/write_owner:allow
     4:group@:write_data/append_data:deny
     5:group@:read_data/execute:allow
     6:everyone@:write_data/append_data/write_xattr/write_attributes
         /write_acl/write_owner:deny
     7:everyone@:read_data/read_xattr/execute/read_attributes/read_acl
         /synchronize:allow</screen>
</example>
<example xml:id="gbsdg">

<title>Odtwarzanie prostych ACL-i dla plików ZFS-a</title>
<para>Przy pomocy komendy <command>chmod</command> można usunąć szczegółowe ACL-e dla plików i katalogów.<indexterm xml:id="indexterm-449">
<primary>ACL-e</primary>
<secondary>zerowanie prostych ACL-i dla plików ZFS-a (tryb szczegółowy)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-450">
<primary>zerowanie</primary>
<secondary>prostych ACL-i dla plików ZFS-a (tryb szczegółowy)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-451">
<primary>systemy plików ZFS-a</primary>
<secondary>zerowanie prostych ACL-i dla plików ZFS-a (tryb szczegółowy)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<para>W poniższym przykładzie istnieją dwa szczegółowe ACL-e dla <literal>test5.dir</literal>.</para>
<screen># <userinput>ls -dv test5.dir</userinput>
drwxr-xr-x+  2 root     root           2 Feb 16 11:23 test5.dir
     0:user:gozer:read_data:file_inherit:deny
     1:user:lp:read_data:file_inherit:deny
     2:owner@::deny
     3:owner@:list_directory/read_data/add_file/write_data/add_subdirectory
         /append_data/write_xattr/execute/write_attributes/write_acl
         /write_owner:allow
     4:group@:add_file/write_data/add_subdirectory/append_data:deny
     5:group@:list_directory/read_data/execute:allow
     6:everyone@:add_file/write_data/add_subdirectory/append_data/write_xattr
         /write_attributes/write_acl/write_owner:deny
     7:everyone@:list_directory/read_data/read_xattr/execute/read_attributes
         /read_acl/synchronize:allow</screen>
<para>W poniższym przykładzie szczegółowe ACL-e dla użytkowników <literal>gozer</literal> i <literal>lp</literal> są kasowanie. Pozostałe ACL-e zawierają sześć domyślnych wartości dla <literal>owner@</literal>, <literal>group@</literal>, i <literal>everyone@</literal>.</para>
<screen># <userinput>chmod A- test5.dir</userinput>
# <userinput>ls -dv test5.dir</userinput>
drwxr-xr-x   2 root     root           2 Feb 16 11:23 test5.dir
     0:owner@::deny
     1:owner@:list_directory/read_data/add_file/write_data/add_subdirectory
         /append_data/write_xattr/execute/write_attributes/write_acl
         /write_owner:allow
     2:group@:add_file/write_data/add_subdirectory/append_data:deny
     3:group@:list_directory/read_data/execute:allow
     4:everyone@:add_file/write_data/add_subdirectory/append_data/write_xattr
         /write_attributes/write_acl/write_owner:deny
     5:everyone@:list_directory/read_data/read_xattr/execute/read_attributes
         /read_acl/synchronize:allow</screen>
</example>
<sect2 xml:id="gbabx">
<title>Ustalanie dziedziczenia ACL-i dla plików ZFS-a w trybie szczegółowym</title>
<para>Możliwe jest ustalenie, jak wygląda dziedziczenie ACL-i dla plików i katalogów. Domyślnie ACL-e nie są propagowane. Szczegółowy ACL ustalony dla katalogu nie jest dziedziczone przez zawarte w nim pliki i podkatalogi. Dla każdego pliku i katalogu dziedziczenie ACL-i musi został ustalone ręcznie.<indexterm xml:id="indexterm-452">
<primary>ACL-e</primary>
<secondary>ustalanie dziedziczenia ACL-i dla plików ZFS-a (tryb szczegółowy)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-453">
<primary>ustalanie</primary>
<secondary>dziedziczenie ACL-i dla plików ZFS-a (tryb szczegółowy)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-454">
<primary>systemy plików ZFS-a</primary>
<secondary>ustalanie dziedziczenia ACL-i dla plików ZFS-a (tryb szczegółowy)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<para>Istnieją dodatkowo dwie właściwości ACL-i, które można ustalić globalnie dla systemu plików: <literal>aclinherit</literal> i <literal>aclmode</literal>. Domyślnie <property>aclinherit</property> ustalony jest na <literal>secure</literal>, a <property>aclmode</property> ustalony jest na <literal>groupmask</literal>.</para>
<para>Więcej informacji w <olink targetdoc="" remap="internal" targetptr="gbaax">Dziedziczenie ACL-i</olink>.</para>
<example xml:id="gcakr">

<title>Domyślne dziedziczenie ACL-i</title>
<para>Domyślnie ACL-e nie są propagowane po strukturze katalogów.</para>
<para>W poniższym przykładzie szczegółowy ACL <literal>read_data/write_data/execute</literal> dla użytkownika <literal>gozer</literal> ustalany jest dla katalogu <literal>test.dir</literal>.</para>
<screen># <userinput>chmod A+user:gozer:read_data/write_data/execute:allow test.dir</userinput>
# <userinput>ls -dv test.dir</userinput>
drwxr-xr-x+  2 root     root           2 Feb 17 14:45 test.dir
     0:user:gozer:list_directory/read_data/add_file/write_data/execute:allow
     1:owner@::deny
     2:owner@:list_directory/read_data/add_file/write_data/add_subdirectory
         /append_data/write_xattr/execute/write_attributes/write_acl
         /write_owner:allow
     3:group@:add_file/write_data/add_subdirectory/append_data:deny
     4:group@:list_directory/read_data/execute:allow
     5:everyone@:add_file/write_data/add_subdirectory/append_data/write_xattr
         /write_attributes/write_acl/write_owner:deny
     6:everyone@:list_directory/read_data/read_xattr/execute/read_attributes
         /read_acl/synchronize:allow</screen>
<para>Jeśli tworzony jest podkatalog <filename>test.dir</filename>, ACL dla użytkownika <literal>gozer</literal> nie będzie dziedziczony. Użytkownik <literal>gozer</literal> będzie miał dostęp do <filename>sub.dir</filename> tylko wtedy, gdy prawa dla <filename>sub.dir</filename> zezwalają mu na dostęp jako właścicielowi, członkowi grupy lub zezwalają na dostęp dla <literal>everyone@</literal>.</para>
<screen># <userinput>mkdir test.dir/sub.dir</userinput>
# <userinput>ls -dv test.dir/sub.dir</userinput>
drwxr-xr-x   2 root     root           2 Feb 17 14:46 test.dir/sub.dir
     0:owner@::deny
     1:owner@:list_directory/read_data/add_file/write_data/add_subdirectory
         /append_data/write_xattr/execute/write_attributes/write_acl
         /write_owner:allow
     2:group@:add_file/write_data/add_subdirectory/append_data:deny
     3:group@:list_directory/read_data/execute:allow
     4:everyone@:add_file/write_data/add_subdirectory/append_data/write_xattr
         /write_attributes/write_acl/write_owner:deny
     5:everyone@:list_directory/read_data/read_xattr/execute/read_attributes
         /read_acl/synchronize:allow</screen>
</example>
<example xml:id="gcale">

<title>Ustalanie dziedziczenia ACL-i dla plików i katalogów</title>
<para>Poniższe przykłady identyfikują ACL dla plików i katalogów, ustanawiane po ustawieniu flagi <literal>file_inherit</literal>.</para>
<para>W poniższym przykładzie użytkownikowi <literal>gozer</literal> dodaje się prawa <literal>read_data/write_data</literal> dotyczące plików w katalogu <filename>test.dir</filename>, tak aby miał dostęp do każdego nowego pliku w tym katalogu.</para>
<screen># <userinput>chmod A+user:gozer:read_data/write_data:file_inherit:allow test2.dir</userinput>
# <userinput>ls -dv test2.dir</userinput>
drwxr-xr-x+  2 root     root           2 Feb 17 14:47 test2.dir
     0:user:gozer:read_data/write_data:file_inherit:allow
     1:owner@::deny
     2:owner@:list_directory/read_data/add_file/write_data/add_subdirectory
         /append_data/write_xattr/execute/write_attributes/write_acl
         /write_owner:allow
     3:group@:add_file/write_data/add_subdirectory/append_data:deny
     4:group@:list_directory/read_data/execute:allow
     5:everyone@:add_file/write_data/add_subdirectory/append_data/write_xattr
         /write_attributes/write_acl/write_owner:deny
     6:everyone@:list_directory/read_data/read_xattr/execute/read_attributes
         /read_acl/synchronize:allow</screen>
<para>W poniższym przykładzie prawa użytkownika gozer nakładane są na nowoutworzony plik <filename>test2.dir/file.2</filename>. Dziedziczenie ACL-i <filename>read_data:file_inherit:allow</filename> oznacza, że użytkownik <literal>gozer</literal> może czytać zawartość nowych plików.</para>
<screen># <userinput>touch test2.dir/file.2</userinput>
# <userinput>ls -v test2.dir/file.2</userinput>
-rw-r--r--+  1 root     root           0 Feb 17 14:49 test2.dir/file.2
     0:user:gozer:write_data:deny
     1:user:gozer:read_data/write_data:allow
     2:owner@:execute:deny
     3:owner@:read_data/write_data/append_data/write_xattr/write_attributes+
         /write_acl/write_owner:allow
     4:group@:write_data/append_data/execute:deny
     5:group@:read_data:allow
     6:everyone@:write_data/append_data/write_xattr/execute/write_attributes
         /write_acl/write_owner:deny
     7:everyone@:read_data/read_xattr/read_attributes/read_acl/synchronize
         :allow</screen>
<para>Dla tego pliku <property>aclmode</property> ustalone jest na domyślną wartość <literal>groupmask</literal>, dlatego użytkownik <literal>gozer</literal> nie ma prawa <literal>write_data</literal>, ponieważ prawa grupy dla pliku <filename>file.2</filename> nie zezwalają na to.</para>
<para>Należy zwrócić uwagę na prawo <literal>inherit_only</literal> (ustawiane jeśli ustalona jest jedna z flag <literal>file_inherit</literal> i <literal>dir_inherit</literal>), które używane jest do propagowania ACL-i po strukturze katalogów. Z tego powodu użytkownikowi <literal>gozer</literal> przyznawane (bądź odmawiane) jest prawo tylko dla <literal>everyone@</literal>, o ile nie jest właścicielem pliku lub członkiem grupy pliku. Na przykład:</para>
<screen># <userinput>mkdir test2.dir/subdir.2</userinput>
# <userinput>ls -dv test2.dir/subdir.2</userinput>
drwxr-xr-x+  2 root     root           2 Feb 17 14:50 test2.dir/subdir.2
     0:user:gozer:list_directory/read_data/add_file/write_data:file_inherit
         /inherit_only:allow
     1:owner@::deny
     2:owner@:list_directory/read_data/add_file/write_data/add_subdirectory
         /append_data/write_xattr/execute/write_attributes/write_acl
         /write_owner:allow
     3:group@:add_file/write_data/add_subdirectory/append_data:deny
     4:group@:list_directory/read_data/execute:allow
     5:everyone@:add_file/write_data/add_subdirectory/append_data/write_xattr
         /write_attributes/write_acl/write_owner:deny
     6:everyone@:list_directory/read_data/read_xattr/execute/read_attributes
         /read_acl/synchronize:allow</screen>
<para>Poniższe przykłady identyfikują ACL-e dla plików i katalogów ustalane, gdy ustalone są flagi <literal>file_inherit</literal> i <literal>dir_inherit</literal>.</para>
<para>W poniższym przykładzie użytkownikowi <literal>gozer</literal> przydziela się prawa do odczytu, zapisu i wykonania plików, dziedziczone dla nowotworzonych plików i katalogów.</para>
<screen># <userinput>chmod A+user:gozer:read_data/write_data/execute:file_inherit/dir_inherit:allow test3.dir</userinput>
# <userinput>ls -dv test3.dir</userinput>
drwxr-xr-x+  2 root     root           2 Feb 17 14:51 test3.dir
     0:user:gozer:list_directory/read_data/add_file/write_data/execute
         :file_inherit/dir_inherit:allow
     1:owner@::deny
     2:owner@:list_directory/read_data/add_file/write_data/add_subdirectory
         /append_data/write_xattr/execute/write_attributes/write_acl
         /write_owner:allow
     3:group@:add_file/write_data/add_subdirectory/append_data:deny
     4:group@:list_directory/read_data/execute:allow
     5:everyone@:add_file/write_data/add_subdirectory/append_data/write_xattr
         /write_attributes/write_acl/write_owner:deny
     6:everyone@:list_directory/read_data/read_xattr/execute/read_attributes
         /read_acl/synchronize:allow</screen>
<screen># <userinput>touch test3.dir/file.3</userinput>
# <userinput>ls -v test3.dir/file.3</userinput>
-rw-r--r--+  1 root     root           0 Feb 17 14:53 test3.dir/file.3
     0:user:gozer:write_data/execute:deny
     1:user:gozer:read_data/write_data/execute:allow
     2:owner@:execute:deny
     3:owner@:read_data/write_data/append_data/write_xattr/write_attributes
         /write_acl/write_owner:allow
     4:group@:write_data/append_data/execute:deny
     5:group@:read_data:allow
     6:everyone@:write_data/append_data/write_xattr/execute/write_attributes
         /write_acl/write_owner:deny
     7:everyone@:read_data/read_xattr/read_attributes/read_acl/synchronize
         :allow</screen>
<screen># <userinput>mkdir test3.dir/subdir.1</userinput>
# <userinput>ls -dv test3.dir/subdir.1</userinput>
drwxr-xr-x+  2 root     root           2 May  4 15:00 test3.dir/subdir.1
     0:user:gozer:list_directory/read_data/add_file/write_data/execute
         :file_inherit/dir_inherit/inherit_only:allow
     1:user:gozer:add_file/write_data:deny
     2:user:gozer:list_directory/read_data/add_file/write_data/execute:allow
     3:owner@::deny
     4:owner@:list_directory/read_data/add_file/write_data/add_subdirectory
         /append_data/write_xattr/execute/write_attributes/write_acl
         /write_owner:allow
     5:group@:add_file/write_data/add_subdirectory/append_data:deny
     6:group@:list_directory/read_data/execute:allow
     7:everyone@:add_file/write_data/add_subdirectory/append_data/write_xattr
         /write_attributes/write_acl/write_owner:deny
     8:everyone@:list_directory/read_data/read_xattr/execute/read_attributes
         /read_acl/synchronize:allow</screen>
<para>W poniższych przykładach użytkownikowi <literal>gozer</literal> odmawia się prawa do zapisu i wykonania, ponieważ bity praw dla wyższego katalogu dla <literal>group@</literal> i <literal>everyone@</literal> odmawiają praw do zapisu i wykonania. Domyślna wartość właściwości <property>aclmode</property> ustawiona jest na <literal>secure</literal>, co oznacza, że prawa <literal>write_data</literal> i <literal>execute</literal> nie są dziedziczone.</para>
<para>W poniższym przykładzie użytkownikowi <literal>gozer</literal> przydziela się prawa do zapisu, odczytu i wykonania, dziedziczone dla nowych plików, ale niepropagowane do podkatalogów.</para>
<screen># <userinput>chmod A+user:gozer:read_data/write_data/execute:file_inherit/no_propagate:allow test4.dir</userinput>
# <userinput>ls -dv test4.dir</userinput>
drwxr-xr-x+  2 root     root           2 Feb 17 14:54 test4.dir
     0:user:gozer:list_directory/read_data/add_file/write_data/execute
         :file_inherit/no_propagate:allow
     1:owner@::deny
     2:owner@:list_directory/read_data/add_file/write_data/add_subdirectory
         /append_data/write_xattr/execute/write_attributes/write_acl
         /write_owner:allow
     3:group@:add_file/write_data/add_subdirectory/append_data:deny
     4:group@:list_directory/read_data/execute:allow
     5:everyone@:add_file/write_data/add_subdirectory/append_data/write_xattr
         /write_attributes/write_acl/write_owner:deny
     6:everyone@:list_directory/read_data/read_xattr/execute/read_attributes
         /read_acl/synchronize:allow</screen>
<para>Jak pokazuje to poniższy przykład, kiedy tworzony jest nowy podkatalog, prawo <literal>read_data/write_data/execute</literal> użytkownika <literal>gozer</literal> nie jest propagowane do nowego katalogu<literal>sub4.dir</literal>.</para>
<screen># <userinput>mkdir test4.dir/sub4.dir</userinput>
# <userinput>ls -dv test4.dir/sub4.dir</userinput>
drwxr-xr-x   2 root     root           2 Feb 17 14:57 test4.dir/sub4.dir
     0:owner@::deny
     1:owner@:list_directory/read_data/add_file/write_data/add_subdirectory
         /append_data/write_xattr/execute/write_attributes/write_acl
         /write_owner:allow
     2:group@:add_file/write_data/add_subdirectory/append_data:deny
     3:group@:list_directory/read_data/execute:allow
     4:everyone@:add_file/write_data/add_subdirectory/append_data/write_xattr
         /write_attributes/write_acl/write_owner:deny
     5:everyone@:list_directory/read_data/read_xattr/execute/read_attributes
         /read_acl/synchronize:allow</screen>
<para>Jak ilustruje poniższy przykład prawo <literal>read_data/write_data/execute</literal> użytkownika <literal>gozer</literal> dziedziczone jest na nowy plik.</para>
<screen># <userinput>touch test4.dir/file.4</userinput>
# <userinput>ls -v test4.dir/file.4</userinput>
-rw-r--r--+  1 root     root           0 May  4 15:02 test4.dir/file.4
     0:user:gozer:write_data/execute:deny
     1:user:gozer:read_data/write_data/execute:allow
     2:owner@:execute:deny
     3:owner@:read_data/write_data/append_data/write_xattr/write_attributes
         /write_acl/write_owner:allow
     4:group@:write_data/append_data/execute:deny
     5:group@:read_data:allow
     6:everyone@:write_data/append_data/write_xattr/execute/write_attributes
         /write_acl/write_owner:deny
     7:everyone@:read_data/read_xattr/read_attributes/read_acl/synchronize
         :allow</screen>
</example>
<example xml:id="gbcid">

<title>Dziedziczenie ACL-i z ustawionym trybem ACL Passthrough</title>
<para>Jeśli właściwość <literal>aclmode</literal> dla systemu plików <filename>tank/cindy</filename> ustawiona jest na<literal>passthrough</literal>, wtedy użytkownik <literal>gozer</literal> odziedziczyłby ACL-e nałożone na <filename>test4.dir</filename> dla nowego pliku<filename>file.4</filename>, jak poniżej:</para>
<screen># <userinput>zfs set aclmode=passthrough tank/cindy</userinput>
# <userinput>touch test4.dir/file.4</userinput>
# <userinput>ls -v test4.dir/file.4</userinput>
-rw-r--r--+  1 root     root           0 Feb 17 15:15 test4.dir/file.4
     0:user:gozer:read_data/write_data/execute:allow
     1:owner@:execute:deny
     2:owner@:read_data/write_data/append_data/write_xattr/write_attributes
         /write_acl/write_owner:allow
     3:group@:write_data/append_data/execute:deny
     4:group@:read_data:allow
     5:everyone@:write_data/append_data/write_xattr/execute/write_attributes
         /write_acl/write_owner:deny
     6:everyone@:read_data/read_xattr/read_attributes/read_acl/synchronize
         :allow</screen>
<para>ACL <literal>read_data/write_data/execute:allow:file_inherit/dir_inherit</literal> ustawiony dla wyższego katalogu <filename>test4.dir</filename> dziedziczony jest przez użytkownika <literal>gozer</literal>.</para>
</example>
<example xml:id="gbchq">

<title>Dziedziczenie ACL-i z trybem ACL Discard</title>
<para>Jeśli właściwość <property>aclmode</property> dla systemu plików ustawiona jest na<literal>discard</literal>, wtedy ACL-e mogą być odrzucone, kiedy zmienią się bity praw dla katalogu. Na przykład:</para>
<screen># <userinput>zfs set aclmode=discard tank/cindy</userinput>
# <userinput>chmod A+user:gozer:read_data/write_data/execute:dir_inherit:allow test5.dir</userinput>
# <userinput>ls -dv test5.dir</userinput>
drwxr-xr-x+  2 root     root           2 Feb 16 11:23 test5.dir
     0:user:gozer:list_directory/read_data/add_file/write_data/execute
         :dir_inherit:allow
     1:owner@::deny
     2:owner@:list_directory/read_data/add_file/write_data/add_subdirectory
         /append_data/write_xattr/execute/write_attributes/write_acl
         /write_owner:allow
     3:group@:add_file/write_data/add_subdirectory/append_data:deny
     4:group@:list_directory/read_data/execute:allow
     5:everyone@:add_file/write_data/add_subdirectory/append_data/write_xattr
         /write_attributes/write_acl/write_owner:deny
     6:everyone@:list_directory/read_data/read_xattr/execute/read_attributes
         /read_acl/synchronize:allow</screen>
<para>Jeśli później bity praw zostaną zaostrzone, szczegółowe ACL-e będą odrzucane. Na przykład:</para>
<screen># <userinput>chmod 744 test5.dir</userinput>
# <userinput>ls -dv test5.dir</userinput>
drwxr--r--   2 root     root           2 Feb 16 11:23 test5.dir
     0:owner@::deny
     1:owner@:list_directory/read_data/add_file/write_data/add_subdirectory
         /append_data/write_xattr/execute/write_attributes/write_acl
         /write_owner:allow
     2:group@:add_file/write_data/add_subdirectory/append_data/execute:deny
     3:group@:list_directory/read_data:allow
     4:everyone@:add_file/write_data/add_subdirectory/append_data/write_xattr
         /execute/write_attributes/write_acl/write_owner:deny
     5:everyone@:list_directory/read_data/read_xattr/read_attributes/read_acl
         /synchronize:allow</screen>
</example>
<example xml:id="gbche">

<title>Dziedziczenie ACL-i z trybem dziedziczenia ustalonym na Noallow</title>
<para>W poniższym przykładzie ustanowiono dwa szczegółowe ACL-e z włączonym dziedziczeniem dla plików. Jeden ACL daje prawo <literal>read_data</literal>, drugi odmawia prawa <literal>read_data</literal>. Przykład ten ilustruje jak można ustalić dwa ACL-e w jednym wywołaniu komendy <command>chmod</command>.</para>
<screen># <userinput>zfs set aclinherit=nonallow tank/cindy</userinput>
# <userinput>chmod A+user:gozer:read_data:file_inherit:deny,user:lp:read_data:file_inherit:allow test6.dir</userinput>
# <userinput>ls -dv test6.dir</userinput>
drwxr-xr-x+  2 root     root           2 May  4 14:23 test6.dir
     0:user:gozer:read_data:file_inherit:deny
     1:user:lp:read_data:file_inherit:allow
     2:owner@::deny
     3:owner@:list_directory/read_data/add_file/write_data/add_subdirectory
         /append_data/write_xattr/execute/write_attributes/write_acl
         /write_owner:allow
     4:group@:add_file/write_data/add_subdirectory/append_data:deny
     5:group@:list_directory/read_data/execute:allow
     6:everyone@:add_file/write_data/add_subdirectory/append_data/write_xattr
         /write_attributes/write_acl/write_owner:deny
     7:everyone@:list_directory/read_data/read_xattr/execute/read_attributes
         /read_acl/synchronize:allow</screen>
<para>Poniżej widać, że przy tworzeniu nowego pliku ACL przydzielający prawo <literal>read_data</literal> jest odrzucany.</para>
<screen># <userinput>touch test6.dir/file.6</userinput>
# <userinput>ls -v test6.dir/file.6</userinput>
-rw-r--r--+  1 root     root           0 May  4 13:44 test6.dir/file.6
     0:user:gozer:read_data:deny
     1:owner@:execute:deny
     2:owner@:read_data/write_data/append_data/write_xattr/write_attributes
         /write_acl/write_owner:allow
     3:group@:write_data/append_data/execute:deny
     4:group@:read_data:allow
     5:everyone@:write_data/append_data/write_xattr/execute/write_attributes
         /write_acl/write_owner:deny
     6:everyone@:read_data/read_xattr/read_attributes/read_acl/synchronize
         :allow</screen>
</example>
</sect2>
</sect1>
<sect1 xml:id="gbchf">
<title>Ustalanie i drukowanie ACL-i na plikach ZFS-a w skróconym formacie</title>
<para>Prawa dla plików ZFS-a można ustalać i drukować w formie skróconej, w której 14 liter reprezentuje prawa. Jednoliterowe reprezentacje praw przedstawione są w <olink targetdoc="" remap="internal" targetptr="gbbht">tabeli 7–2</olink> i w <olink targetdoc="" remap="internal" targetptr="gbbhx">tabeli 7–3</olink>.<indexterm xml:id="indexterm-455">
<primary>ACL-e</primary>
<secondary>ustalanie ACL-i dla plików ZFS-a (tryb skrócony)</secondary>
<tertiary>opis</tertiary>
</indexterm>
<indexterm xml:id="indexterm-456">
<primary>setting</primary>
<secondary>ACL-e dla plików ZFS-a (tryb skrócony)</secondary>
<tertiary>opis</tertiary>
</indexterm>
<indexterm xml:id="indexterm-457">
<primary>systemy plików ZFS-a</primary>
<secondary>ustalanie ACL-i dla plików ZFS-a (tryb skrócony)</secondary>
<tertiary>opis</tertiary>
</indexterm>
</para>
<para>Skróconą listę ACL-i dla plików i katalogów można wydrukować komendą <command>ls</command> <option>
V</option>. Na przykład:</para>
<screen># <userinput>ls -V file.1</userinput>
-rw-r--r--   1 root     root      206663 Feb 16 11:00 file.1
            owner@:--x-----------:------:deny
            owner@:rw-p---A-W-Co-:------:allow
            group@:-wxp----------:------:deny
            group@:r-------------:------:allow
         everyone@:-wxp---A-W-Co-:------:deny
         everyone@:r-----a-R-c--s:------:allow</screen>
<para>Opis skróconego formatu ACL-i:</para>
<variablelist>
<varlistentry>
<term>
<literal>owner@</literal>
</term>
<listitem>
<para>Właścicielowi odmawia się praw do wykonania pliku (<literal>x</literal>=<literal>execute</literal>).</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>owner@</literal>
</term>
<listitem>
<para>Właściciel może czytać i modyfikować zawartość pliku (<literal>rw</literal>=<literal>read_data/write_data</literal>), (<literal>p</literal>=<literal>append_data</literal>). Właściciel może także zmieniać atrybuty pliku, takie jak timestamps, rozszerzone atrybuty i ACL-e (<literal>A</literal>=<literal>write_xattr</literal>, <literal>W</literal>=<literal>write_attributes</literal>, <literal>C</literal>=<literal>write_acl</literal>). Dodatkowo może zmienić właściciela pliku (<literal>O</literal>=<literal>write_owner</literal>).</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>group@</literal>
</term>
<listitem>
<para>Grupie odmawia się praw do zmiany i wykonania pliku (<literal>rw</literal>=<literal>read_data/write_data</literal>, <literal>p</literal>=<literal>append_data</literal> i <literal>x</literal>=<literal>execute</literal>).</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>group@</literal>
</term>
<listitem>
<para>Grupa ma prawo do czytania pliku (<literal>r</literal>=<literal>read_data</literal>).</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>everyone@</literal>
</term>
<listitem>
<para>Każdemu, kto nie jest właścicielem i nie należy do grupy odmawia się praw do wykonania lub modyfikacji pliku, także do zmiany atrybutów pliku  (<literal>w</literal>=<literal>write_data</literal>, <literal>x</literal>=<literal>execute</literal>, <literal>p</literal>=<literal>append_data</literal>, <literal>A</literal>=<literal>write_xattr</literal>, <literal>W</literal>=<literal>write_attributes</literal>, <literal>C</literal>=<literal>write_acl</literal> i <literal>o</literal>=<literal>write_owner</literal>).</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>everyone@</literal>
</term>
<listitem>
<para>Każdemu, kto nie jest właścicielem lub nie należy do grupy daje się prawo do odczytania pliku i jego atrybutów (<literal>r</literal>=<literal>read_data</literal>, <literal>a</literal>=<literal>append_data</literal>, <literal>R</literal>=<literal>read_xattr</literal>, <literal>c</literal>=<literal>read_acl</literal> i <literal>s</literal>=<literal>synchronize</literal>). Prawo dostępu <literal>synchronize</literal> nie zostało jeszcze zaimplementowane.</para>
</listitem>
</varlistentry>
</variablelist>
<para>Skrócony format ACL-i ma pewna przewagę nad formatem szczegółowym:</para>
<itemizedlist>
<listitem>
<para>Uprawnienia można wskazywać jako argumenty pozycyjne komendzie <command>chmod</command>.</para>
</listitem>
<listitem>
<para>Myślniki (-), które nie identyfikują uprawnień można pominąć i podawać tylko wymagane litery.</para>
</listitem>
<listitem>
<para>W ten sam sposób podaje się uprawnienia i flagi dziedziczenia.</para>
</listitem>
</itemizedlist>
<para>Więcej informacji o szczegółowym formacie w <olink targetdoc="" remap="internal" targetptr="gbabw">Ustalanie i drukowanie ACL-i dla plików ZFS-a w formacie szczegółowym</olink>.</para>
<example xml:id="gcfhr">

<title>Ustawianie i wyświetlanie list ACL w formacie skróconym</title>
<para>W poniższym przykładzie istnieje prosty wpis ACL dla pliku <filename>file.1</filename>:<indexterm xml:id="indexterm-458">
<primary>ACL-e</primary>
<secondary>ustalanie ACL-i dla plików ZFS-a (tryb skrócony)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-459">
<primary>ustalanie</primary>
<secondary>ACL-e dla plików ZFS-a (tryb skrócony)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-460">
<primary>systemy plików ZFS-a</primary>
<secondary>ustalanie ACL-i dla plików ZFS-a (tryb skrócony)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<screen># <userinput>ls -V file.1</userinput>
-rw-r-xr-x   1 root     root      206663 Feb 16 11:00 file.1
            owner@:--x-----------:------:deny
            owner@:rw-p---A-W-Co-:------:allow
            group@:-w-p----------:------:deny
            group@:r-x-----------:------:allow
         everyone@:-w-p---A-W-Co-:------:deny
         everyone@:r-x---a-R-c--s:------:allow</screen>
<para>W kolejnym przykładzie zostaną dodane prawa read_data/execute dla użytkownika <literal>gozer</literal> do pliku <filename>file.1</filename>. </para>
<screen># <userinput>chmod A+user:gozer:rx:allow file.1</userinput>
# <userinput>ls -V file.1</userinput>
-rw-r-xr-x+  1 root     root      206663 Feb 16 11:00 file.1
        user:gozer:r-x-----------:------:allow
            owner@:--x-----------:------:deny
            owner@:rw-p---A-W-Co-:------:allow
            group@:-w-p----------:------:deny
            group@:r-x-----------:------:allow
         everyone@:-w-p---A-W-Co-:------:deny
         everyone@:r-x---a-R-c--s:------:allow</screen>
<para>Inną metodą dodania tych samych uprawnień dla użytkownika <literal>gozer</literal>
jest wstawienie nowych wpisów ACL w określonej pozycji, na przykład 4. W tym przypadku
istniejące wpisy ACL na pozycjach 4-6 zostaną przesunięte w dół. Na przykład:</para>
<screen># <userinput>chmod A4+user:gozer:rx:allow file.1</userinput>
# <userinput>ls -V file.1</userinput>
-rw-r-xr-x+  1 root     root      206663 Feb 16 11:00 file.1
            owner@:--x-----------:------:deny
            owner@:rw-p---A-W-Co-:------:allow
            group@:-w-p----------:------:deny
            group@:r-x-----------:------:allow
        user:gozer:r-x-----------:------:allow
         everyone@:-w-p---A-W-Co-:------:deny
         everyone@:r-x---a-R-c--s:------:allow</screen>
<para>W kolejnym przykładzie użytkownik <literal>gozer</literal> ma przyznane
uprawnienia do odczytu, zapisu i wykonywania, które są dziedziczone dla nowo
tworzonych plików i katalogów. Uzyskano je przy użyciu skróconego formatu ACL.</para>
<screen># <userinput>chmod A+user:gozer:rwx:f:allow dir.1</userinput>
# <userinput>ls -dV dir.1</userinput>
drwxr-xr-x+  2 root     root           2 Feb 23 10:37 dir.1
        user:gozer:rwx-----------:f-----:allow
            owner@:--------------:------:deny
            owner@:rwxp---A-W-Co-:------:allow
            group@:-w-p----------:------:deny
            group@:r-x-----------:------:allow
         everyone@:-w-p---A-W-Co-:------:deny
         everyone@:r-x---a-R-c--s:------:allow</screen>
<para>Można także kopiować i wklejać uprawnienia i flagi dziedziczenia z wyjścia polecenia
<command>ls</command> <option>V</option> do skróconego formatu polecenia <command>chmod</command>.
Na przykład w celu powielenia uprawnień i flag dziedziczenia do <filename>dir.1</filename> od użytkownika
<literal>gozer</literal> dla użytkownika <literal>cindys</literal>, można skopiować uprawnienia i flagi
dziedziczenia (<literal>rwx-----------:f-----:allow</literal>) do polecenia <command>chmod</command>. Jak poniżej:</para>
<screen># <userinput>chmod A+user:cindys:rwx-----------:f-----:allow dir.1</userinput>
# <userinput>ls -dV dir.1</userinput>
drwxr-xr-x+  2 root     root           2 Feb 23 10:37 dir.1
       user:cindys:rwx-----------:f-----:allow
        user:gozer:rwx-----------:f-----:allow
            owner@:--------------:------:deny
            owner@:rwxp---A-W-Co-:------:allow
            group@:-w-p----------:------:deny
            group@:r-x-----------:------:allow
         everyone@:-w-p---A-W-Co-:------:deny
         everyone@:r-x---a-R-c--s:------:allow</screen>
</example>
</sect1>
</chapter>
