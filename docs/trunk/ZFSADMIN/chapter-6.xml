<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML//EN" "docbook.dtd"[
	<!ENTITY % xinclude SYSTEM "xinclude.mod">
	%xinclude;
]>

<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="gavvx">



<title>Praca z klonami i obrazami ZFS</title>
<toc>
<para>Rozdział ten opisuje jak stworzyć i zarządzać obrazami (ang. snapshot) i klonami ZFS.
Informuje również jak zapisywać stworzone obrazy.</para>
<para>W rozdziale omówiono poniższe zagadnienia:</para>
<itemizedlist>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-6.xml" targetptr="gbciq">Wprowadzenie do obrazów ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-6.xml" targetptr="gbcya">Tworzenie i niszczenie obrazów ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-6.xml" targetptr="gbiqe">Przeglądanie i dostęp do obrazów ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-6.xml" targetptr="gbcxk">Przywracanie obrazu ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-6.xml" targetptr="gbcxz">Wprowadzenie do klonów ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-6.xml" targetptr="gbcyg">Tworzenie klonu ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-6.xml" targetptr="gbiob">Niszczenie klonu ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-6.xml" targetptr="gbchx">Zapis i odtwarzanie danych ZFS</olink>
</para>
</listitem>
</itemizedlist>
</toc>
<sect1 xml:id="gbciq">
<title>Wprowadzenie do obrazów ZFS</title>
<para><emphasis>Obraz</emphasis> jest kopią systemu plików (tylko do odczytu) lub woluminu. Obrazy mogą być stworzone niemal natychmiastowo i początkowo nie zajmują dodatkowego miejsca na dysku poza pulą. Niemniej jednak, wraz z kolejnymi zmianami danych, obraz pochłania przestrzeń dyskową poprzez czynienie kolejnych odniesień do starych danych.<indexterm xml:id="indexterm-389">
<primary>System plików ZFS</primary>
<secondary>obraz</secondary>
<tertiary>opis</tertiary>
</indexterm>
<indexterm xml:id="indexterm-390">
<primary>obraz</primary>
<secondary>funkcje</secondary>
</indexterm>
</para>
<para>Obrazy ZFS zawierają następujące funkcje:</para>
<itemizedlist>
<listitem>
<para>Zapewniają trwałość danych.</para>
</listitem>
<listitem>
<para>Teoretyczna liczba możliwych do stworzenia obrazów wynosi 2<superscript>64</superscript>.</para>
</listitem>
<listitem>
<para>Nie używają osobnego nośnika danych na potrzeby kopii. Obrazy zajmują przestrzeń dyskową bezpośrednio z puli nośników danych tak samo jak system plików, pod którym zostały stworzone.</para>
</listitem>
<listitem>
<para>Rekursywne obrazy są tworzone jako jedna atomowa operacja. Są one
tworzone wszystkie naraz (w jednym czasie) lub w ogóle. Zyskiem z takiej
atomowej operacji tworzenia obrazów jest to, że zapewniają spójność czasu
utworzenia obrazu, nawet dla potomnych systemów plików.</para>
</listitem>
</itemizedlist>
<para>Obrazy woluminów nie są dostępne bezpośrednio, mogą być jednakże klonowane, zapisywane, przywracane i tak dalej. Więcej informacji o zapisywaniu obrazu ZFS w <olink remap="internal" targetdoc="chapter-6.xml" targetptr="gbchx">Zapis i odtwarzanie danych ZFS</olink>.</para>
<sect2 xml:id="gbcya">
<title>Tworzenie i niszczenie obrazów ZFS</title>
<para>Obrazy tworzone są za pomocą komendy <command>zfs snapshot</command>, której jedynym argumentem jest nazwa obrazu do utworzenia. Nazwę tworzy się w sposób następujący:</para>
<screen>
<replaceable>systemplików@nazwaobrazu</replaceable>
<replaceable>wolumin@nazwaobrazu</replaceable>
</screen>
<para>Nazwa obrazu musi spełniać wymogi nazewnictwa, które określa podrozdział <olink remap="external" targetdoc="chapter-1.xml" targetptr="gbcpt">Wymogi nazewnictwa komponentów ZFS</olink>.</para>
<para>W poniższym przykładzie utworzony zostanie obraz systemu plików <filename>tank/home/ahrens</filename> o nazwie <filename>friday</filename>.<indexterm xml:id="indexterm-391">
<primary>systemy plików ZFS</primary>
<secondary>obraz</secondary>
<tertiary>tworzenie</tertiary>
</indexterm>
<indexterm xml:id="indexterm-392">
<primary>tworzenie</primary>
<secondary>obrazu ZFS</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-393">
<primary>obraz</primary>
<secondary>tworzenie</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<screen># <userinput>zfs snapshot tank/home/ahrens@friday</userinput>
</screen>
<para>Można także tworzyć obrazy dla wszystkich potomnych systemów plików poprzez użycie opcji <option>
+r</option>. Na przykład:</para>
<screen># <userinput>zfs snapshot -r tank/home@now</userinput>
# <userinput>zfs list -t snapshot</userinput>
NAME                   USED  AVAIL  REFER  MOUNTPOINT
tank/home@now             0      -  29.5K  -
tank/home/ahrens@now      0      -  2.15M  -
tank/home/anne@now        0      -  1.89M  -
tank/home/bob@now         0      -  1.89M  -
tank/home/cindys@now      0      -  2.15M  -</screen>
<para>Obrazy nie mają żadnych modyfikowalnych właściwości, nie można też do obrazu przypisać właściwości datasetu.</para>
<screen># zfs set compression=on tank/home/ahrens@tuesday
cannot set compression property for 'tank/home/ahrens@tuesday': snapshot
properties cannot be modified</screen>
<para>Obrazy niszczy się za pomocą komendy <command>zfs destroy</command>. Na przykład:</para>
<screen># <userinput>zfs destroy tank/home/ahrens@friday</userinput>
</screen>
<para>Nie można zniszczyć datasetu, jeśli wciąż istnieją obrazy tego datasetu. Na przykład:</para>
<screen># <userinput>zfs destroy tank/home/ahrens</userinput>
cannot destroy 'tank/home/ahrens': filesystem has children
use '-r' to destroy the following datasets:
tank/home/ahrens@tuesday
tank/home/ahrens@wednesday
tank/home/ahrens@thursday</screen>
<para>Jeśli dodatkowo istnieją klony obrazu, muszą zostać zniszczone zanim zniszczony będzie obraz.<indexterm xml:id="indexterm-394">
<primary>systemy plików ZFS</primary>
<secondary>obraz</secondary>
<tertiary>niszczenie</tertiary>
</indexterm>
<indexterm xml:id="indexterm-395">
<primary>niszczenie</primary>
<secondary>obrazy ZFS</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-396">
<primary>obraz</primary>
<secondary>niszczenie</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<para>Więcej informacji: <olink remap="external" targetdoc="chapter-5.xml" targetptr="gammq">Niszczenie systemu plików ZFS</olink>.</para>
<sect3 xml:id="gbion">
<title>Zmiana nazwy obrazu ZFS</title>
<para>Zmiana nazwy obrazu jest możliwa, musi się jednak odbyć w ramach puli i datasetu, z których został utworzony. Na przykład:<indexterm xml:id="indexterm-397">
<primary>systemy plików ZFS</primary>
<secondary>obraz</secondary>
<tertiary>zmiana nazwy</tertiary>
</indexterm>
<indexterm xml:id="indexterm-398">
<primary>zmiana nazwy</primary>
<secondary>obraz ZFS</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-399">
<primary>obraz</primary>
<secondary>zmiana nazwy</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<screen># <userinput>zfs rename tank/home/cindys@083006 tank/home/cindys@today</userinput>
</screen>
<para>Dodatkowo można używać podanej poniżej składni skróconej przy zmienianiu nazwy obrazu, dającej ten sam efekt końcowy,
jak przykład powyżej.</para>
<screen># <userinput>zfs rename tank/home/cindys@083006 today</userinput>
</screen>
<para>Poniższej operacji zmiany nazwy nie da się wykonać, ponieważ docelowa pula i system plików są inne, niż pula i system plików, dla których utworzono obraz.</para>
<screen># zfs rename tank/home/cindys@today pool/home/cindys@saturday
cannot rename to 'pool/home/cindys@today': snapshots must be part of same 
dataset</screen>
<para>Można także zmieniać nazwy obrazów rekursywnie poprzez użycie opcji <option>
r</option> dla polecenia <command>zfs rename</command>. Na przykład:</para>
<screen># <userinput>zfs list</userinput>
NAME                         USED  AVAIL  REFER  MOUNTPOINT
users                        270K  16.5G    22K  /users
users/home                    76K  16.5G    22K  /users/home
users/home@yesterday            0      -    22K  -
users/home/markm              18K  16.5G    18K  /users/home/markm
users/home/markm@yesterday      0      -    18K  -
users/home/marks              18K  16.5G    18K  /users/home/marks
users/home/marks@yesterday      0      -    18K  -
users/home/neil               18K  16.5G    18K  /users/home/neil
users/home/neil@yesterday       0      -    18K  -
# <userinput>zfs rename -r users/home@yesterday @2daysago</userinput>
# <userinput>zfs list -r users/home</userinput>
NAME                        USED  AVAIL  REFER  MOUNTPOINT
users/home                   76K  16.5G    22K  /users/home
users/home@2daysago            0      -    22K  -
users/home/markm             18K  16.5G    18K  /users/home/markm
users/home/markm@2daysago      0      -    18K  -
users/home/marks             18K  16.5G    18K  /users/home/marks
users/home/marks@2daysago      0      -    18K  -
users/home/neil              18K  16.5G    18K  /users/home/neil
users/home/neil@2daysago       0      -    18K  -</screen>
</sect3>
</sect2>
<sect2 xml:id="gbiqe">
<title>Przeglądanie i dostęp do obrazów ZFS</title>
<para>Obrazy systemu plików dostępne są w katalogu <filename>.zfs/snapshot</filename> w szczycie hierarchii zawierającego obraz systemu plików. Na przykład, jeśli system plików <filename>tank/home/ahrens</filename> zamontowano w katalogu  <filename>/home/ahrens</filename>, to obraz <filename>tank/home/ahrens@thursday</filename> będzie dostępny w katalogu <filename>/home/ahrens/.zfs/snapshot/thursday</filename>.<indexterm xml:id="indexterm-400">
<primary>systemy plików ZFS</primary>
<secondary>obraz</secondary>
<tertiary>dostęp</tertiary>
</indexterm>
<indexterm xml:id="indexterm-401">
<primary>dostęp</primary>
<secondary>ZFS snapshot</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-402">
<primary>obraz</primary>
<secondary>dostęp</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<screen># <userinput>ls /tank/home/ahrens/.zfs/snapshot</userinput>
tuesday wednesday thursday</screen>
<para>Listę obrazów można wydrukować następująco:</para>
<screen># <userinput>zfs list -t snapshot</userinput>
NAME                        USED  AVAIL  REFER  MOUNTPOINT
pool/home/anne@monday          0      -   780K  -
pool/home/bob@monday           0      -  1.01M  -
tank/home/ahrens@tuesday   8.50K      -   780K  -
tank/home/ahrens@wednesday 8.50K      -  1.01M  -
tank/home/ahrens@thursday      0      -  1.77M  -
tank/home/cindys@today     8.50K      -   524K  -</screen>
<para>Listę obrazów dla konkretnego systemu plików można wydrukować następująco:</para>
<screen># <userinput>zfs list -r -t snapshot -o name,creation tank/home</userinput>
NAME                       CREATION
tank/home@now               Wed Aug 30 10:53 2006
tank/home/ahrens@tuesday    Wed Aug 30 10:53 2006
tank/home/ahrens@wednesday  Wed Aug 30 10:54 2006
tank/home/ahrens@thursday   Wed Aug 30 10:53 2006
tank/home/cindys@now        Wed Aug 30 10:57 2006</screen>
<sect3 xml:id="gbcxc">
<title>Zużycie miejsca przez obraz</title>
<para>Po utworzeniu obrazu współdzieli on początkowo miejsce z systemem plików oraz, być może, z poprzednimi obrazami. Wraz z postępowaniem zmian w systemie plików, współdzielone uprzednio miejsce staje się unikalne dla obrazu i zostaje wliczone do właściwości obrazu <property>used</property>. Dodatkowo, usunięcie obrazu może spowodować wzrost unikalnej przestrzeni 
(a tym samym również <emphasis>used</emphasis>) innych obrazów.</para>
<para>Właściwość <property>referenced</property> przestrzeni obrazu jest taka sama jak systemu plików, kiedy obraz został utworzony.<indexterm xml:id="indexterm-403">
<primary>systemy plików ZFS</primary>
<secondary>zużycie miejsca przez obraz</secondary>
</indexterm>
<indexterm xml:id="indexterm-404">
<primary>obraz</primary>
<secondary>zużycie miejsca</secondary>
</indexterm>
</para>
</sect3>
</sect2>
<sect2 xml:id="gbcxk">
<title>Przywracanie obrazu ZFS</title>
<para>Przy pomocy komendy <command>zfs rollback</command> można cofnąć wszystkie zmiany aż do momentu utworzenia dowolnego obrazu. System plików powraca do stanu z momentu utworzenia obrazu. Domyślnie nie można cofnąć się dalej, niż do ostatniego obrazu.</para>
<para>Zanim będzie można cofnąć się do wcześniejszego obrazu, wszystkie obrazy utworzone później należy zniszczyć. Można to zrobić za pomocą opcji <option>r</option>.</para>
<para>Jeśli istnieją klony pośrednich obrazów, należy zniszczyć je za pomocą opcji <option>R</option>. </para>
<note>
<para>Należy odmontować i ponownie zamontować system plików, aby cofnięcie do obrazu powiodło się. Jeśli nie można odmontować systemu plików, nie uda się wycofanie zmian. W celu wymuszenia odmontowania systemu plików można użyć opcji <option>f</option>.</para>
</note>
<para>W poniższym przykładzie system plików <filename>tank/home/ahrens</filename> cofany jest do obrazu o nazwie <filename>tuesday</filename>:<indexterm xml:id="indexterm-405">
<primary>systemy plików ZFS</primary>
<secondary>obraz</secondary>
<tertiary>wycofywanie zmian</tertiary>
</indexterm>
<indexterm xml:id="indexterm-406">
<primary>wycofywanie zmian</primary>
<secondary>obraz ZFS</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-407">
<primary>obraz</primary>
<secondary>wycofywanie zmian</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<screen># <userinput>zfs rollback tank/home/ahrens@tuesday</userinput>
cannot rollback to 'tank/home/ahrens@tuesday': more recent snapshots exist
use '-r' to force deletion of the following snapshots:
tank/home/ahrens@wednesday
tank/home/ahrens@thursday
# <userinput>zfs rollback -r tank/home/ahrens@tuesday</userinput>
</screen>
<para>W powyższym przykładzie obrazy o nazwach <literal>wednesday</literal> i <literal>thursday</literal> zostały zniszczone, ponieważ wycofywano system do poprzedzającego je obrazu o nazwie <literal>tuesday</literal>.</para>
<screen># <userinput>zfs list -r -t snapshot -o name,creation tank/home/ahrens</userinput>
NAME                      CREATION
tank/home/ahrens@tuesday  Wed Aug 30 10:53 2006</screen>
</sect2>
</sect1>
<sect1 xml:id="gbcxz">
<title>Wprowadzenie do klonów ZFS</title>
<para><emphasis>Klon</emphasis> jest zapisywalnym woluminem lub systemem plików, którego początkowa zawartość jest taka sama, jak zawartość datasetu, z którego został utworzony. Podobnie jak w przypadku obrazów, tworzenie klonów jest natychmiastowe i początkowo nie zajmuje miejsca na dysku. Dodatkowo można także stworzyć obraz klona.<indexterm xml:id="indexterm-408">
<primary>systemy plików ZFS</primary>
<secondary>klony</secondary>
<tertiary>opis</tertiary>
</indexterm>
<indexterm xml:id="indexterm-409">
<primary>klony</primary>
<secondary>możliwości</secondary>
</indexterm>
</para>
<itemizedlist>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-6.xml" targetptr="gbcyg">Tworzenie klonu ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-6.xml" targetptr="gbiob">Niszczenie klonu ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-6.xml" targetptr="gcvfl">Zastąpienie systemu plików ZFS klonem</olink>
</para>
</listitem>
</itemizedlist>

<para>Klony można utworzyć wyłącznie z obrazu. Po sklonowaniu obrazu powstaje implikowana zależność między klonem a obrazem. Pomimo tego, że klon jest tworzony w innym miejscu hierarchii datasetu, nie można zniszczyć oryginalnego obrazu tak długo, jak długo istnieje jego klon. Właściwość <property>origin</property> eksponuje tę zależność, a komenda <command>zfs destroy</command> podaje listę takich zależności, jeśli istnieją.</para>
<para>Klony nie dziedziczą właściwości datasetu, z którego są tworzone, ale raczej dziedziczą właściwości wynikłe z miejsca utworzenia ich w hierarchii puli. Do drukowania i modyfikowania właściwości sklonowanego datasetu służą odpowiednio komendy <command>zfs get</command> i <command>zfs set</command>.
Więcej informacji: <olink remap="external" targetdoc="chapter-5.xml" targetptr="gazsp">Ustawianie parametrów ZFS</olink>.</para>
<para>Klon zaraz po utworzeniu współdzieli przestrzeń dyskową z oryginalnym obrazem, dlatego jego właściwość <property>used</property> jest początkowo równa zeru. W miarę postępowania zmian w klonie, zaczyna on zużywać więcej przestrzeni. Właściwość <property>used</property> oryginalnego obrazu nie obejmuje przestrzeni zużytej przez jego klony.</para>
<sect2 xml:id="gbcyg">
<title>Tworzenie klonu ZFS</title>
<para>Klon tworzy się przy pomocy komendy <command>klon ZFS</command>, podając nazwę klonowanego obrazu i nazwę nowego systemu plików lub woluminu. Nowy system plików lub wolumin może znajdować się w dowolnym miejscu hierarchii ZFS. Typ nowego datasetu (system plików lub wolumin) jest taki sam, jak typ klonowanego obrazu. Nie można utworzyć klonu systemu plików w puli innej niż pula, w której znajduje się klonowany obraz.<indexterm xml:id="indexterm-410">
<primary>systemy plików ZFS</primary>
<secondary>klon</secondary>
<tertiary>tworzenie</tertiary>
</indexterm>
<indexterm xml:id="indexterm-411">
<primary>tworzenie</primary>
<secondary>klon ZFS</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-412">
<primary>klony</primary>
<secondary>tworzenie</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<para>W poniższym przykładzie utworzony zostanie nowy klon <literal>tank/home/ahrens/bug123</literal> z identycznym zestawem początkowych danych, jak obraz <literal>tank/ws/gate@yesterday</literal>.</para>
<screen># <userinput>zfs snapshot tank/ws/gate@yesterday</userinput>
# <userinput>zfs clone tank/ws/gate@yesterday tank/home/ahrens/bug123</userinput>
</screen>
<para>W poniższym przykładzie sklonowano obszar roboczy z obrazu <filename>projects/newproject@today</filename> dla tymczasowego użytkownika <filename>projects/teamA/tempuser</filename>. Następnie ustalane są właściwości sklonowanego obszaru.</para>
<screen># <userinput>zfs snapshot projects/newproject@today</userinput>
# <userinput>zfs clone projects/newproject@today projects/teamA/tempuser</userinput>
# <userinput>zfs set sharenfs=on projects/teamA/tempuser</userinput>
# <userinput>zfs set quota=5G projects/teamA/tempuser</userinput>
</screen>
</sect2>
<sect2 xml:id="gbiob">
<title>Niszczenie klonu ZFS</title>
<para>Klony ZFS niszczone są komendą <command>zfs destroy</command>. Na przykład:<indexterm xml:id="indexterm-413">
<primary>systemy plików ZFS</primary>
<secondary>klon</secondary>
<tertiary>niszczenie</tertiary>
</indexterm>
<indexterm xml:id="indexterm-414">
<primary>niszczenie</primary>
<secondary>klon ZFS</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-415">
<primary>klony</primary>
<secondary>niszczenie</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<screen># <userinput>zfs destroy tank/home/ahrens/bug123</userinput>
</screen>
<para>Przed zniszczeniem obrazu trzeba zniszczyć wszystkie jego klony.</para>
</sect2>
<sect2 xml:id="gcvfl">
<title>Zastąpienie systemu plików ZFS klonem</title>
<para>Komendą <command>zfs promote</command> można zamienić aktywny system plików ZFS na jego klon. Umożliwia to sklonowanie systemu plików i zamianę, tak że klon staje się systemem plików, a system plików klonem. Pozwala to także na niszczenie systemów plików, z których utworzono klon. Bez wypromowania klonu niemożliwe jest zniszczenie systemu plików z aktywnymi klonami. Więcej o niszczeniu klonów w <olink remap="internal" targetdoc="chapter-6.xml" targetptr="gbiob">Niszczenie klonu ZFS</olink>.<indexterm xml:id="indexterm-416">
<primary>systemy plików ZFS</primary>
<secondary>klon</secondary>
<tertiary>zamiana systemu plików (przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-417">
<primary>
<command>zfs promote</command>
</primary>
<secondary>promocja klonu (przykład)</secondary>
</indexterm>
</para>
<para>W poniższym przykładzie system plików <filename>tank/test/productA</filename> jest sklonowanym systemem plików, poźniej klon <filename>tank/test/productAbeta</filename> zostaje wypromowany na główny system plików <filename>tank/test/productA</filename>.</para>
<screen># <userinput>zfs create tank/test</userinput>
# <userinput>zfs create tank/test/productA</userinput>
# <userinput>zfs snapshot tank/test/productA@today</userinput>
# <userinput>zfs clone tank/test/productA@today tank/test/productAbeta</userinput>
# <userinput>zfs list -r tank/test</userinput>
NAME                   USED  AVAIL  REFER  MOUNTPOINT
tank/test              314K  8.24G  25.5K  /tank/test
tank/test/productA     288K  8.24G   288K  /tank/test/productA
tank/test/productA@today      0      -   288K  -
tank/test/productAbeta      0  8.24G   288K  /tank/test/productAbeta
# <userinput>zfs promote tank/test/productAbeta</userinput>
# <userinput>zfs list -r tank/test</userinput>
NAME                   USED  AVAIL  REFER  MOUNTPOINT
tank/test              316K  8.24G  27.5K  /tank/test
tank/test/productA        0  8.24G   288K  /tank/test/productA
tank/test/productAbeta   288K  8.24G   288K  /tank/test/productAbeta
tank/test/productAbeta@today      0      -   288K  -</screen>
<para>W powyższym wydruku komendy <command>zfs</command> <option>
list</option> widoczne jest, że obliczanie zużycia miejsca oryginalnego systemu plików <filename>productA</filename> zamieniono na system plików <filename>productAbeta</filename></para>
<para>Dokończenie podmiany następuje przez zmianę nazw systemów plików. Na przykład:</para>
<screen># <userinput>zfs rename tank/test/productA tank/test/productAlegacy</userinput>
# <userinput>zfs rename tank/test/productAbeta tank/test/productA</userinput>
# <userinput>zfs list -r tank/test</userinput>
NAME                   USED  AVAIL  REFER  MOUNTPOINT
tank/test              316K  8.24G  27.5K  /tank/test
tank/test/productA     288K  8.24G   288K  /tank/test/productA
tank/test/productA@today      0      -   288K  -
tank/test/productAlegacy      0  8.24G   288K  /tank/test/productAlegacy</screen>
<para>Można dodatkowo zniszczyć system plików, z którego pochodzi wypromowany klon. Na przykład:</para>
<screen># <userinput>zfs destroy tank/test/productAlegacy</userinput>
</screen>
</sect2>
</sect1>
<sect1 xml:id="gbchx">
<title>Zapis i odtwarzanie danych ZFS</title>
<para>Komenda <command>zfs send</command> tworzy strumieniową reprezentację obrazu drukowaną na standardowym wyjściu. Domyślnie drukuje się cały strumień. Wyjście komendy można przekierować do pliku lub do innego systemu. Komenda <command>zfs receive</command> tworzy obraz ze strumienia, którego zawartość pochodzi ze standardowego wejścia. Przy pomocy tych komend można zapisywać i odczytywać dane obrazów i systemów plików ZFS. Przykłady w następnym podrozdziale.<indexterm xml:id="indexterm-418">
<primary>zapisywanie i odzyskiwanie</primary>
<secondary>dane systemów plików ZFS</secondary>
<tertiary>opis</tertiary>
</indexterm>
<indexterm xml:id="indexterm-419">
<primary>systemy plików ZFS</primary>
<secondary>zapisywanie i odzyskiwanie</secondary>
<tertiary>opis</tertiary>
</indexterm>
</para>
<itemizedlist>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-6.xml" targetptr="gbscu">Zapisywanie danych ZFS przy użyciu innynch produktów do backupu</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-6.xml" targetptr="gbinw">Zapisywanie obrazu ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-6.xml" targetptr="gbimy">Przywracanie obrazu ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-6.xml" targetptr="gbinz">Zdalna replikacja danych ZFS</olink>
</para>
</listitem>
</itemizedlist>
<para>Dane ZFS można zapisywać w następujący sposób:</para>
<itemizedlist>
<listitem>
<para>Zapisywanie obrazów ZFS i cofanie zmian.</para>
</listitem>
<listitem>
<para>Zapisywanie pełnych, przyrostowych kopii obrazów ZFS i odzyskiwanie obrazów i systemów plików.</para>
</listitem>
<listitem>
<para>Zdalna wymiana systemów plików ZFS dzięki zapisywaniu i odzyskiwaniu obrazów i systemów plików ZFS.</para>
</listitem>
<listitem>
<para>Zapisywanie danych ZFS przy pomocy narzędzi archiwizujących typu <command>tar</command> i <command>cpio</command> lub produktów tworzących kopie zapasowe pochodzących od osób trzecich.</para>
</listitem>
</itemizedlist>
<para>Przed wybraniem opcji należy rozważnyć następujące:</para>
<itemizedlist>
<listitem>
<para>Obrazy systemu plików i cofanie zmian. Kopie systemu plików można w łatwy sposób utworzyć za pomocą komendy <command>zfs snapshot</command>, natomiast wycofać zmiany do wcześniej ustalonego punku można za pomocą komendy <command>zfs rollback</command>. Można w ten sposób na przykład odzyskać pliki z poprzedniej wersji systemu plików.</para>
<para>Więcej informacji: <olink remap="internal" targetdoc="chapter-6.xml" targetptr="gbciq">Wprowadzenie do obrazów ZFS</olink>.</para>
</listitem>
<listitem>
<para>Zapisywanie obrazów. Wykonuje się je za pomocą komendy <command>zfs send</command> lub <command>zfs receive</command>, które zapisują i odzyskują obrazy ZFS. Można zapisać przyrostowe zmiany między obrazami, ale nie można odzyskać pojedynczych plików - konieczne jest odzyskanie całego obrazu.</para>
</listitem>
<listitem>
<para>Zdalna replikacja. Przy pomocy komend <command>zfs send</command> i <command>zfs receive</command> można wysłać kopię systemu plików z jednego systemu do drugiego. Proces ten różni się od tradycyjnych produktów zarządzania woluminami mirrorującymi urządzenia w sieci LAN. W przypadku komend ZFS nie wymaga się dodatkowej konfiguracji bądź sprzętu. Zaletą tego rozwiązania jest możliwość odtworzenia systemu plików w puli nośników danych innego systemu i zdefiniowania innej konfiguracji w nowoutworzonej puli, na przykład RAID-Z, z tymi samymi danymi.</para>
</listitem>
</itemizedlist>
<sect2 xml:id="gbscu">
<title>Zapisywanie danych ZFS z innymi produktami kopii zapasowych</title>
<para>Oprócz wykorzystania komend <command>zfs send</command> i <command>zfs receive</command>, można zapisać pliki ZFS korzystając z narzędzi archiwizujących, takich jak <command>tar</command> i <command>cpio</command>. Wszystkie te narzędzia zapisują i odtwarzają atrybuty plików i ACL-e ZFS. Przed wykonanie kopii należy sprawdzić opcje wywołania komend <command>tar</command> i <command>cpio</command>.</para>
<para>Informacje o problemach ZFS z produktami archiwizującymi od firm trzecich znajdują się w notach do wydań Solaris Express.</para>
</sect2>
<sect2 xml:id="gbinw">
<title>Zapisywanie obrazu ZFS</title>
<para>Najczęstszą formą użycia polecenia <command>zfs send</command> jest zapis kopii obrazu i przesłanie go do innego systemu, który służy do przechowywania kopii danych.
Na przykład:<indexterm xml:id="indexterm-420">
<primary>saving</primary>
<secondary>dane systemu plików ZFS (<command>zfs send</command>)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-421">
<primary>
<command>zfs send</command>
</primary>
<secondary>(przykład)</secondary>
</indexterm>
<indexterm xml:id="indexterm-422">
<primary>systemy plików ZFS</primary>
<secondary>zapisywanie strumieni danych (<command>zfs send</command>)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<screen>host1# <userinput>zfs send tank/dana@snap1 | ssh host2 zfs recv newtank/dana</userinput>
</screen>
<para>W przypadku przesyłania pełnego obrazu, docelowy system plików nie może istnieć.</para>
<para>Inkrementalne zapisy danych można wykonać za pomocą komendy <command>zfs send</command> z opcją <option>
i</option>. Na przykład:</para>
<screen>host1# <userinput>zfs send -i tank/dana@snap1 tank/dana@snap2 | ssh host2 zfs recv newtank/dana</userinput>
</screen>
<para>Pierwszym argumentem jest wcześniejszy obraz, drugim zaś obraz późniejszy. W tym przypadku system plików <filename>newtank/dana</filename>
musi istnieć na docelowym systemie, żeby przesył inkrementalny się powiódł.</para>
<para>Źródło dla przesyłu inkrementalnego <replaceable>snap1</replaceable> może być określone jako
ostatni człon nazwy obrazu. Ten skrót oznacza, że wystarczy podać nazwę po znaku <literal>@</literal>
dla <replaceable>snap1</replaceable>, co zakłada, że nazwa systemu pliku jest taka sama, jak
dla <replaceable>snap2</replaceable>. Na przykład:</para>
<screen>host1# <userinput>zfs send -i snap1 tank/dana@snap2 &gt; ssh host2 zfs recv newtank/dana</userinput>
</screen>
<para>Ta składnia jest równoważna przykładowi powyżej dla przesyłu inkrementalnego.</para>
<para>Następujący komunikat zostanie wyświetlony w przypadku próby wygenerowania strumienia inkrementalnego
z innego systemu plików niż <replaceable>snapshot1</replaceable>:</para>
<screen>cannot send 'pool/fs@name': not an earlier snapshot from the same fs</screen>
<para>Jeśli zachodzi konieczność utworzenia wielu kopii, strumieniową reprezentację obrazu można spakować za pomocą komendy <command>gzip</command>. Na przykład:</para>
<screen># <userinput>zfs send pool/fs@snap | gzip &gt; backupfile.gz</userinput>
</screen>
</sect2>
<sect2 xml:id="gbimy">
<title>Przywracanie obrazu ZFS</title>
<para>Należy pamiętać o następujących rzeczach przy odzyskiwaniu systemu plików z obrazu: <indexterm xml:id="indexterm-423">
<primary>odzyskiwanie</primary>
<secondary>dane systemu plików ZFS (<command>zfs receive</command>)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-424">
<primary>
<command>zfs receive</command>
</primary>
<secondary>(przykład)</secondary>
</indexterm>
<indexterm xml:id="indexterm-425">
<primary>systemy plików ZFS</primary>
<secondary>odzyskiwanie strumieni danych (<command>zfs receive</command>)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<itemizedlist>
<listitem>
<para>Obraz i system plików zostaną odtworzone.</para>
</listitem>
<listitem>
<para>System pliku i jego potomne zostaną odmontowane.</para>
</listitem>
<listitem>
<para>Systemy plików są niedostępne w czasie procesu odtwarzania.</para>
</listitem>
<listitem>
<para>Oryginalny system plików nie może istnieć w czasie odtwarzania.</para>
</listitem>
<listitem>
<para>Jeśli występuje konflikt nazw systemów plików, można użyć polecenia <command>zfs rename</command>
Do zmiany nazwy.</para>
</listitem>
</itemizedlist>
<para>Na przykład:</para>
<screen># <userinput>zfs send tank/gozer@0830 &gt; /bkups/gozer.083006</userinput>
# <userinput>zfs receive tank/gozer2@today &lt; /bkups/gozer.083006</userinput>
# <userinput>zfs rename tank/gozer tank/gozer.old</userinput>
# <userinput>zfs rename tank/gozer2 tank/gozer</userinput>
</screen>
<para>Jako skrótu komendy <command>zfs receive</command> można użyć <command>zfs recv</command>.</para>
<para>Jeśli wystąpiły zmiany na systemie plików, zanim nastąpi próba przesłania inkrementalnego obrazu plików,
muszą być cofnięte zmiany na systemie plików, który będzie odbierał dane.</para>
<para>Na przykład, jeśli została wykonana zmiana, jak poniżej:</para>
<screen>host2# <userinput>rm newtank/dana/file.1</userinput>
</screen>
<para>I użytkownik chce przesłać inkrementalnie obraz <filename>tank/dana@snap3</filename>,
trzeba najpierw cofnąć zmiany na systemie plików odbierającym nowy inkrementalny obraz. Można
ominąć ten krok poprzez użycie opcji <option>F</option>. Na przykład:</para>
<screen>host1# <userinput>zfs send -i tank/dana@snap2 tank/dana@snap3 | ssh host2 zfs recv -F newtank/dana</userinput>
</screen>
<para>W przypadku odbierania obrazu inkrementalnego, docelowy system plików musi już istnieć.</para>
<para>Jeśli istnieją zmiany na docelowym systemie plików, a użytkownik ani nie cofnął tych zmian,
ani nie użył opcji <option>F</option> do przesyłu inkrementalnego, zobaczy następujący komunikat:</para>
<screen>host1# <userinput>zfs send -i tank/dana@snap4 tank/dana@snap5 | ssh host2 zfs recv newtank/dana</userinput>
cannot receive: destination has been modified since most recent snapshot</screen>
<para>Użycie opcji <option>F</option> musi spełnić następujące założenia, zanim powiedzie się sukcesem:</para>
<itemizedlist>
<listitem>
<para>Jeśli najświeższy obraz nie odpowiada źródłu do przesyłu inkrementalnego, jak również
nie jest zakończone odzyskiwanie systemu plików z obrazu lub odbiór innego obrazu, zostanie wyświetlony
komunikat o błędzie.</para>
</listitem>
<listitem>
<para>Jeśli do polecenia <command>zfs receive</command> zostanie podana nazwa innego
systemu plików, która nie odpowiada źródłu inkrementalnego obrazu, zostanie wyświetlony
komunikat o błędzie:</para>
<screen>cannot send 'pool/fs@name': not an earlier snapshot from the same fs</screen>
</listitem>
</itemizedlist>
</sect2>
<sect2 xml:id="gbinz">
<title>Zdalna replikacja danych ZFS</title>
<para>Do zdalnego skopiowania strumieniowej reprezentacji obrazu z jednego systemu na drugi można użyć komend <command>zfs send</command> i <command>zfs recv</command>. Na przykład:</para>
<screen># <userinput>zfs send tank/cindy@today | ssh newsys zfs recv sandbox/restfs@today</userinput>
</screen>
<para>Komenda ta zapisuje obraz systemu plików <filename>tank/cindy@today</filename> i odzyskuje go w systemie plików <filename>sandbox/restfs</filename>. Tworzy także obraz <filename>restfs@today</filename> w systemie <literal>newsys</literal>. W tym przykładzie na zdalnym systemie istnieje użytkownik do używania komendy <command>ssh</command>.</para>
</sect2>
</sect1>
</chapter>
