<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML//EN" "docbook.dtd"[
	<!ENTITY % xinclude SYSTEM "xinclude.mod">
	%xinclude;
]>

<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="gavvx">



<title>Praca z migawkami i klonami ZFS-a</title>
<toc>
<para>Rozdział ten opisuje jak stworzyć i zarządzać obrazami i klonami ZFS (snapshots and clones).
Rozdział ten informuje również jak zapisywać stworzone obrazy.</para>
<para>W rozdziale omówiono poniższe zagadnienia:</para>
<itemizedlist>
<listitem>
<para>
<olink targetdoc="" remap="internal" targetptr="gbciq">Obrazy ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink targetdoc="" remap="internal" targetptr="gbcya">Tworzenie i niszczenie obrazów ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink targetdoc="" remap="internal" targetptr="gbiqe">Wyświetlanie i uzyskiwanie dostępu do obrazów ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink targetdoc="" remap="internal" targetptr="gbcxk">Uzyskiwanie dostępu i przywracanie obrazów ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink targetdoc="" remap="internal" targetptr="gbcxz">Klony ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink targetdoc="" remap="internal" targetptr="gbcyg">Tworzenie klona ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink targetdoc="" remap="internal" targetptr="gbiob">Niszczenie klona ZFS</olink>
</para>
</listitem>
<listitem>
<para>
<olink targetdoc="" remap="internal" targetptr="gbchx">Zapis i odtwarzanie danych ZFS</olink>
</para>
</listitem>
</itemizedlist>
</toc>
<sect1 xml:id="gbciq">
<title>Obrazy ZFS</title>
<para><emphasis>Obraz</emphasis> jest kopią systemu plików (tylko do odczytu) lub woluminu. Obrazy mogą być stworzone niemal natychmiastowo i początkowo nie nie zajmują dodatkowego miejsca na dysku poza pulą. Niemniej jednak, wraz z kolejnymi zmianami danych, obraz pochłania przestrzeń dyskową poprzez czynienie kolejnych odniesień do starych danych.<indexterm xml:id="indexterm-376">
<primary>System plików ZFS</primary>
<secondary>obraz</secondary>
<tertiary>opis</tertiary>
</indexterm>
<indexterm xml:id="indexterm-377">
<primary>obraz</primary>
<secondary>funkcje</secondary>
</indexterm>
</para>
<para>Obrazy ZFS zawierają następujące funkcje:</para>
<itemizedlist>
<listitem>
<para>Zapewniają trwałość danych.</para>
</listitem>
<listitem>
<para>Teoretyczna liczba możliwych do stworzenia obrazów wynosi 2<superscript>64</superscript>.</para>
</listitem>
<listitem>
<para>Nie używa osobnego nośnika danych na potrzeby kopii. Obrazy pochłaniają zajmują przestrzeń dyskową bezpośrednio z puli nośników danych tak samo jak system plików, pod którym zostały stworzone.</para>
</listitem>
</itemizedlist>
<para>Obrazy woluminów nie są dostępne bezpośrednio, mogą być jednakże klonowane, zapisywane, przywracane i tak dalej. Więcej informacji o  zapisywaniu obrazu ZFS-a w <olink targetdoc="" remap="internal" targetptr="gbchx">Zapis i odtwarzanie danych ZFS</olink>.</para>
<sect2 xml:id="gbcya">
<title>Tworzenie i niszczenie obrazów ZFS-a</title>
<para>Obrazy tworzone są za pomocą komendy <command>zfs snapshot</command>, której jedynym argumentem jest nazwa obrazu do utworzenia. Nazwę tworzy się w sposób następujący:</para>
<screen>
<replaceable>systemplików@nazwaobrazu</replaceable>
<replaceable>wolumin@nazwaobrazu</replaceable>
</screen>
<para>Nazwa obrazu musi spełniać wymogi konwencji zdefiniowane w <olink targetdoc="" remap="internal" targetptr="gbcpt">Wymogi nazewnicze komponentów ZFS-a</olink>.</para>
<para>W poniższym przykładzie utworzony zostanie obraz systemu plików <filename>tank/home/ahrens</filename> o nazwie <filename>friday</filename>.<indexterm xml:id="indexterm-378">
<primary>systemy plików ZFS-a</primary>
<secondary>obraz</secondary>
<tertiary>tworzenie</tertiary>
</indexterm>
<indexterm xml:id="indexterm-379">
<primary>tworzenie</primary>
<secondary>obrazu ZFS-a</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-380">
<primary>obraz</primary>
<secondary>tworzenie</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<screen># <userinput>zfs snapshot tank/home/ahrens@friday</userinput>
</screen>
<para>Obrazy nie mają żadnych modyfikowalnych właściwości, nie można też do obrazu przypisać właściwości datasetu.</para>
<screen># zfs set compression=on tank/home/ahrens@tuesday
cannot set compression property for 'tank/home/ahrens@tuesday': snapshot
properties cannot be modified</screen>
<para>Obrazy niszczy się za pomocą komendy <command>zfs destroy</command>. Na przykład:</para>
<screen># <userinput>zfs destroy tank/home/ahrens@friday</userinput>
</screen>
<para>Nie można zniszczyć datasetu, jeśli wciąż istnieją obrazy tego datasetu. Na przykład:</para>
<screen># <userinput>zfs destroy tank/home/ahrens</userinput>
cannot destroy 'tank/home/ahrens': filesystem has children
use '-r' to destroy the following datasets:
tank/home/ahrens@tuesday
tank/home/ahrens@wednesday
tank/home/ahrens@thursday</screen>
<para>Jeśli dodatkowo istnieją klony obrazu, muszą zostać zniszczone zanim zniszczony będzie obraz.<indexterm xml:id="indexterm-381">
<primary>systemy plików ZFS-a</primary>
<secondary>obraz</secondary>
<tertiary>niszczenie</tertiary>
</indexterm>
<indexterm xml:id="indexterm-382">
<primary>niszczenie</primary>
<secondary>obrazy ZFS-a</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-383">
<primary>obraz</primary>
<secondary>niszczenie</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<para>Więcej informacji o podkomendzie <command>destroy</command> w <olink targetdoc="" remap="internal" targetptr="gammq">Niszczenie systemów plików ZFS-a</olink>.</para>
<sect3 xml:id="gbion">
<title>Zmiana nazwy obrazu ZFS-a</title>
<para>Zmiana nazwy obrazu jest możliwa, musi się jednak odbyć w ramach puli i datasetu, z których został utworzony. Na przykład:<indexterm xml:id="indexterm-384">
<primary>systemy plików ZFS-a</primary>
<secondary>obraz</secondary>
<tertiary>zmiana nazwy</tertiary>
</indexterm>
<indexterm xml:id="indexterm-385">
<primary>zmiana nazwy</primary>
<secondary>obraz ZFS-a</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-386">
<primary>obraz</primary>
<secondary>zmiana nazwy</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<screen># zfs rename tank/home/cindys@031306 tank/home/cindys@today</screen>
<para>Poniższej operacji zmiany nazwy nie da się wykonać, ponieważ docelowa pula i system plików są inne, niż pula i system plików, dla których utworzono obraz.</para>
<screen># zfs rename tank/home/cindys@today pool/home/cindys@saturday
cannot rename to 'pool/home/cindys@today': snapshots must be part of same 
dataset</screen>
</sect3>
</sect2>
<sect2 xml:id="gbiqe">
<title>Przeglądanie i dostęp do obrazów ZFS-a</title>
<para>Obrazy systemu plików dostępne są w katalogu <filename>.zfs/snapshot</filename> w szczycie hierarchii zawierającego obraz systemu plików. Na przykład, jeśli system plików <filename>tank/home/ahrens</filename> zamontowano w katalogu  <filename>/home/ahrens</filename>, to obraz <filename>tank/home/ahrens@thursday</filename> będzie dostępny w katalogu <filename>/home/ahrens/.zfs/snapshot/thursday</filename>.<indexterm xml:id="indexterm-387">
<primary>systemy plików ZFS-a</primary>
<secondary>obraz</secondary>
<tertiary>dostęp</tertiary>
</indexterm>
<indexterm xml:id="indexterm-388">
<primary>dostęp</primary>
<secondary>ZFS snapshot</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-389">
<primary>obraz</primary>
<secondary>dostęp</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<screen># <userinput>ls /home/ahrens/.zfs/snapshot</userinput>
tuesday wednesday thursday</screen>
<para>Listę obrazów można wydrukować następująco:</para>
<screen># <userinput>zfs list -t snapshot</userinput>
NAME                        USED  AVAIL  REFER  MOUNTPOINT
pool/home/anne@monday          0      -   780K  -
pool/home/bob@monday           0      -  1.01M  -
tank/home/ahrens@tuesday   8.50K      -   780K  -
tank/home/ahrens@wednesday 8.50K      -  1.01M  -
tank/home/ahrens@thursday      0      -  1.77M  -
tank/home/cindys@today     8.50K      -   524K  -</screen>
<para>Listę obrazów dla konkretnego systemu plików można wydrukować następująco:</para>
<screen># <userinput>zfs list -r -t snapshot -o name,creation pool/home</userinput>
NAME                   CREATION
pool/home/anne@monday  Mon Mar 13 11:46 2006
pool/home/bob@monday   Mon Mar 13 11:46 2006</screen>
<sect3 xml:id="gbcxc">
<title>Zużycie miejsca przez obraz</title>
<para>Po utworzeniu obrazu współdzieli on początkowo miejsce z systemem plików oraz, być może, z poprzednimi obrazami. Wraz z postępowaniem zmian w systemie plików, współdzielone uprzednio miejsce staje się unikalne dla obrazu i zostaje wliczone do właściwości obrazu <property>used</property>. Dodatkowo, usunięcie obrazu może spowodować wzrost unikalnej przestrzeni 
(a tym samym również <emphasis>used</emphasis>) innych obrazów.</para>
<para>Właściwość <property>referenced</property> przestrzeni obrazu jest taka sama jak systemu plików, kiedy obraz został utworzony.<indexterm xml:id="indexterm-390">
<primary>systemy plików ZFS-a</primary>
<secondary>zużycie miejsca przez obraz</secondary>
</indexterm>
<indexterm xml:id="indexterm-391">
<primary>obraz</primary>
<secondary>zużycie miejsca</secondary>
</indexterm>
</para>
</sect3>
</sect2>
<sect2 xml:id="gbcxk">
<title>Powrót do obrazu ZFS-a</title>
<para>Przy pomocy komendy <command>zfs rollback</command> można cofnąć wszystkie zmiany aż do momentu utworzenia dowolnego obrazu. System plików powraca do stanu z momentu utworzenia obrazu. Domyślnie nie można cofnąć się dalej, niż do ostatniego obrazu.</para>
<para>Zanim będzie można cofnąć się do wcześniejszego obrazu, wszystkie obrazy utworzone później należy zniszczyć. Można to zrobić za pomocą opcji <option> r</option>.</para>
<para>Jeśli istnieją klony pośrednich obrazów, należy zniszczyć je za pomocą opcji <option>R</option>. </para>
<note>
<para>Należy odmontować i ponownie zamontować system plików, aby cofnięcie do obrazu powiodło się. Jeśli nie można odmontować systemu plików, nie uda się wycofanie zmian. W celu wymuszenia odmontowania systemu plików można użyć opcji <option>f</option>.</para>
</note>
<para>W poniższym przykładzie system plików <filename>tank/home/ahrens</filename> cofany jest do obrazu o nazwie <filename>tuesday</filename>:<indexterm xml:id="indexterm-392">
<primary>systemy plików ZFS-a</primary>
<secondary>obraz</secondary>
<tertiary>wycofywanie zmian</tertiary>
</indexterm>
<indexterm xml:id="indexterm-393">
<primary>wycofywanie zmian</primary>
<secondary>obraz ZFS-a</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-394">
<primary>obraz</primary>
<secondary>wycofywanie zmian</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<screen># <userinput>zfs rollback tank/home/ahrens@tuesday</userinput>
cannot rollback to 'tank/home/ahrens@tuesday': more recent snapshots exist
use '-r' to force deletion of the following snapshots:
tank/home/ahrens@wednesday
tank/home/ahrens@thursday
# <userinput>zfs rollback -r tank/home/ahrens@tuesday</userinput>
</screen>
<para>W powyższym przykładzie obrazy o nazwach <literal>wednesday</literal> i <literal>thursday</literal> zostały zniszczone, ponieważ wycofywano system do poprzedzającego je obrazu o nazwie <literal>tuesday</literal>.</para>
<screen># <userinput>zfs list -r -t snapshot -o name,creation tank/home/ahrens</userinput>
NAME                  CREATION
tank/home/ahrens@tuesday  Mon Mar 13 11:05 2006</screen>
</sect2>
</sect1>
<sect1 xml:id="gbcxz">
<title>Klony ZFS-a</title>
<para><emphasis>Klon</emphasis> jest zapisywalnym woluminem lub systemem plików, którego początkowa zawartość jest taka sama, jak zawartość datasetu, z którego został utworzony. Podobnie jak w przypadku obrazów, tworzenie klonów jest natychmiastowe i początkowo nie zajmuje miejsca na dysku.<indexterm xml:id="indexterm-395">
<primary>systemy plików ZFS-a</primary>
<secondary>klony</secondary>
<tertiary>opis</tertiary>
</indexterm>
<indexterm xml:id="indexterm-396">
<primary>klony</primary>
<secondary>możliwości</secondary>
</indexterm>
</para>
<para>Klony można utworzyć wyłącznie z obrazu. Po sklonowaniu obrazu powstaje implikowana zależność między klonem a obrazem. Pomimo tego, że klon jest tworzony w innym miejscu hierarchii datasetu, nie można zniszczyć oryginalnego obrazu tak długo, jak długo istnieje jego klon. Właściwość <property>origin</property> eksponuje tę zależność, a komenda <command>zfs destroy</command> podaje listę takich zależności, jeśli istnieją.</para>
<para>Klony nie dziedziczą właściwości datasetu, z którego są tworzone, ale raczej dziedziczą właściwości wynikłe z miejsca utworzenia ich w hierarchii puli. Do drukowania i modyfikowania właściwości sklonowanego datasetu służą odpowiednio komendy <command>zfs get</command> i <command>zfs set</command>.
Więcej informacji o ustawianiu właściwości datasetu ZFS-a w <olink targetdoc="" remap="internal" targetptr="gazsp">Ustawianie właściwości ZFS-a</olink>.</para>
<para>Klon zaraz po utworzeniu współdzieli przestrzeń dyskową z oryginalnym obrazem, dlatego jego właściwość <property>used</property> jest początkowo równa zeru. W miarę postępowania zmian w klonie, zaczyna on zużywać więcej przestrzeni. Właściwość <property>used</property> oryginalnego obrazu nie obejmuje przestrzeni zużytej przez jego klony.</para>
<sect2 xml:id="gbcyg">
<title>Tworzenie klonu ZFS-a</title>
<para>Klon tworzy się przy pomocy komendy <command>klon ZFS-a</command>, podając nazwę klonowanego obrazu i nazwę nowego systemu plików lub woluminu. Nowy system plików lub wolumin może znajdować się w dowolnym miejscu hierarchii ZFS-a. Typ nowego datasetu (system plików lub wolumin) jest taki sam, jak typ klonowanego obrazu. Nie można utworzyć klonu systemu plików w puli innej, niż pula, w której znajduje się klonowany obraz.<indexterm xml:id="indexterm-397">
<primary>systemy plików ZFS-a</primary>
<secondary>klon</secondary>
<tertiary>tworzenie</tertiary>
</indexterm>
<indexterm xml:id="indexterm-398">
<primary>tworzenie</primary>
<secondary>klon ZFS-a</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-399">
<primary>klony</primary>
<secondary>tworzenie</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<para>W poniższym przykładzie utworzony zostanie nowy klon <literal>tank/home/ahrens/bug123</literal> z identycznym zestawem początkowych danych, jak obraz <literal>tank/ws/gate@yesterday</literal>.</para>
<screen># <userinput>zfs snapshot tank/ws/gate@yesterday</userinput>
# <userinput>zfs clone tank/ws/gate@yesterday tank/home/ahrens/bug123</userinput>
</screen>
<para>W poniższym przykładzie sklonowano obszar roboczy z obrazu <filename>projects/newproject@today</filename> dla tymczasowego użytkownika <filename>projects/teamA/tempuser</filename>. Następnie ustalane są właściwości sklonowanego obszaru.</para>
<screen># <userinput>zfs snapshot projects/newproject@today</userinput>
# <userinput>zfs clone projects/newproject@today projects/teamA/tempuser</userinput>
# <userinput>zfs set sharenfs=on projects/teamA/tempuser</userinput>
# <userinput>zfs set quota=5G projects/teamA/tempuser</userinput>
</screen>
</sect2>
<sect2 xml:id="gbiob">
<title>Niszczenie klonu ZFS-a</title>
<para>Klony ZFS-a niszczone są komendą <command>zfs destroy</command>. Na przykład:<indexterm xml:id="indexterm-400">
<primary>systemy plików ZFS-a</primary>
<secondary>klon</secondary>
<tertiary>niszczenie</tertiary>
</indexterm>
<indexterm xml:id="indexterm-401">
<primary>niszczenie</primary>
<secondary>klon ZFS-a</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-402">
<primary>klony</primary>
<secondary>niszczenie</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<screen># <userinput>zfs destroy tank/home/ahrens/bug123</userinput>
</screen>
<para>Przed zniszczeniem obrazu trzeba zniszczyć wszystkie jego klony.</para>
</sect2>
</sect1>
<sect1 xml:id="gbchx">
<title>Zapisywanie i odzyskiwanie danych ZFS-a</title>
<para>Komenda <command>zfs send</command> tworzy strumieniową reprezentację obrazu drukowaną na standardowym wyjściu. Domyślnie drukuje się cały strumień. Wyjście komendy można przekierować do pliku lub do innego systemu. Komenda <command>zfs receive</command> tworzy obraz ze strumienia, którego zawartość pochodzi ze standardowego wejścia. Przy pomocy tych komend można zapisywać i odczytywać dane obrazów i systemów plików ZFS-a. Przykłady w następnym podrozdziale.<indexterm xml:id="indexterm-403">
<primary>zapisywanie i odzyskiwanie</primary>
<secondary>dane systemów plików ZFS-a</secondary>
<tertiary>opis</tertiary>
</indexterm>
<indexterm xml:id="indexterm-404">
<primary>systemy plików ZFS-a</primary>
<secondary>zapisywanie i odzyskiwanie</secondary>
<tertiary>opis</tertiary>
</indexterm>
</para>
<para>Dane ZFS-a można zapisywać w następujący sposób:</para>
<itemizedlist>
<listitem>
<para>Zapisywanie obrazów ZFS-a i cofanie zmian.</para>
</listitem>
<listitem>
<para>Zapisywanie pełnych, przyrostowych kopii obrazów ZFS-a i odzyskiwanie obrazów i systemów plików.</para>
</listitem>
<listitem>
<para>Zdalna wymiana systemów plików ZFS-a dzięki zapisywaniu i odzyskiwaniu obrazów i systemów plików ZFS-a.</para>
</listitem>
<listitem>
<para>Zapisywanie danych ZFs-a przy pomocy narzędzi archiwizujących typu <command>tar</command> i <command>cpio</command> lub produktów tworzących kopie zapasowe pochodzących od osób trzecich.</para>
</listitem>
</itemizedlist>
<para>Przed wybraniem opcji należy rozważnych następujące:</para>
<itemizedlist>
<listitem>
<para>Obrazy systemu plików i cofanie zmian. Kopie systemu plików można w łatwy sposób utworzyć za pomocą komendy <command>zfs snapshot</command>, natomiast wycofać zmiany do wcześniej ustalonego punku można za pomocą komendy <command>zfs rollback</command>. Można w ten sposób na przykład odzyskać pliki z poprzedniej wersji systemu plików.</para>
<para>Więcej informacji o tworzeniu obrazów i wycofywaniu zmian w <olink targetdoc="" remap="internal" targetptr="gbciq">Obrazy ZFS-a</olink>.</para>
</listitem>
<listitem>
<para>Zapisywanie obrazów. Wykonuje się je za pomocą komendy <command>zfs send</command> lub <command>zfs receive</command>, które zapisują i odzyskują obrazy ZFS-a. Można zapisać przyrostowe zmiany między obrazami, ale nie można odzyskać pojedynczych plików - konieczne jest odzyskanie całego obrazu.</para>
</listitem>
<listitem>
<para>Zdalna replikacja. Przy pomocy komend <command>zfs send</command> i <command>zfs receive</command> można wysłać kopię systemu plików z jednego systemu do drugiego. Proces ten różni się od tradycyjnych produktów zarządzania woluminami mirrorującymi urządzenia w sieci LAN. W przypadku komend ZFS-a nie wymaga się dodatkowej konfiguracji bądź sprzętu. Zaletą tego rozwiązania jest możliwość odtworzenia systemu plików w puli nośników danych innego systemu i zdefiniowania innej konfiguracji w nowoutworzonej puli, na przykład RAID-Z, z tymi samymi danymi.</para>
</listitem>
</itemizedlist>
<sect2 xml:id="gbscu">
<title>Zapisywanie danych ZFS-a z innymi produktami kopii zapasowych</title>
<para>Oprócz wykorzystania komend <command>zfs send</command> i <command>zfs receive</command>, można zapisać pliki ZFS-a korzystając z narzędzi archiwizujących, takich jak <command>tar</command> i <command>cpio</command>. Wszystkie te narzędzia zapisują i odtwarzają atrybuty plików i ACL-e ZFS-a. Przed wykonanie kopii należy sprawdzić opcje wywołania komend <command>tar</command> i <command>cpio</command>.</para>
<para>Informacje o problemach ZFS-a z produktami archiwizującymi od osób trzecich znajdują się w notach do wydań Solaris Express.</para>
</sect2>
<sect2 xml:id="gbinw">
<title>Zapisywanie obrazu ZFS-a</title>
<para>Najprostsza forma wywołania komendy <command>zfs send</command>, to zapisanie kopii obrazu. Na przykład:<indexterm xml:id="indexterm-405">
<primary>saving</primary>
<secondary>dane systemu plików ZFS-a (<command>zfs send</command>)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-406">
<primary>
<command>zfs send</command>
</primary>
<secondary>(przykład)</secondary>
</indexterm>
<indexterm xml:id="indexterm-407">
<primary>systemy plików ZFS-a</primary>
<secondary>zapisywanie strumieni danych (<command>zfs send</command>)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<screen># <userinput>zfs send tank/dana@040706 &gt; /dev/rmt/0</userinput>
</screen>
<para>Inkrementalne zapisy danych można wykonać za pomocą komendy <command>zfs send</command> <option>
i</option>. Na przykład:</para>
<screen># <userinput>zfs send -i tank/dana@040706 tank/dana@040806 &gt; /dev/rmt/0</userinput>
</screen>
<para>Pierwszym argumentem jest wcześniejszy obraz, drugim zaś obraz późniejszy.</para>
<para>Jeśli zachodzi konieczność utworzenia wielu kopii, strumieniową reprezentację obrazu można spakować za pomocą komendy <command>gzip</command>. Na przykład:</para>
<screen># <userinput>zfs send pool/fs@snap | gzip &gt; backupfile.gz</userinput>
</screen>
</sect2>
<sect2 xml:id="gbimy">
<title>Odzyskiwanie obrazu ZFS-a</title>
<para>Przy odzyskiwaniu obrazu systemu plików, odzyskiwany jest także sam system plików. Podczas odzyskiwanie system plików jest odmontowany i niedostępny. Oryginalny odzyskiwany właśnie system plików nie może istnieć. Jeśli istnieje nazwa wywołująca konflikt, można użyć komendy <command>zfs
rename</command> do zmiany nazwy systemu plików. Na przykład:<indexterm xml:id="indexterm-408">
<primary>odzyskiwanie</primary>
<secondary>dane systemu plików ZFS-a (<command>zfs receive</command>)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
<indexterm xml:id="indexterm-409">
<primary>
<command>zfs receive</command>
</primary>
<secondary>(przykład)</secondary>
</indexterm>
<indexterm xml:id="indexterm-410">
<primary>systemy plików ZFS-a</primary>
<secondary>odzyskiwanie strumieni danych (<command>zfs receive</command>)</secondary>
<tertiary>(przykład)</tertiary>
</indexterm>
</para>
<screen># <userinput>zfs send tank/gozer@040706 &gt; /dev/rmt/0</userinput>

.
.
.
# <userinput>zfs receive tank/gozer2@today &lt; /dev/rmt/0</userinput>
# <userinput>zfs rename tank/gozer tank/gozer.old</userinput>
# <userinput>zfs rename tank/gozer2 tank/gozer</userinput>
</screen>
<para>Jako skrótu komendy <command>zfs receive</command> można użyć <command>zfs recv</command>.</para>
<para>Przy odzyskiwaniu przyrostowych obrazów systemu plików, należy wycofywać zmiany w kolejności odwrotnej do utworzenia: najpierw najnowszy obraz. Musi również istnieć docelowy system plików. W poniższym przykładzie odzyskiwana jest poprzednia przyrostowa kopia systemu plików <filename>tank/dana</filename>.</para>
<screen># <userinput>zfs rollback tank/dana@040706</userinput>
cannot rollback to 'tank/dana@040706': more recent snapshots exist
use '-r' to force deletion of the following snapshots:
tank/dana@now
# <userinput>zfs rollback -r tank/dana@040706/</userinput>
# <userinput>zfs recv tank/dana &lt; /dev/rmt/0</userinput>
</screen>
<para>Podczas przyrostowego procesu odzyskiwania system plików jest odmontowany i niedostępny. </para>
</sect2>
<sect2 xml:id="gbinz">
<title>Zdalna replikacja danych ZFS-a</title>
<para>Do zdalnego skopiowania strumieniowej reprezentacji obrazu z jednego systemu na drugi można użyć komend <command>zfs send</command> i <command>zfs recv</command>. Na przykład:</para>
<screen># <userinput>zfs send tank/cindy@today | ssh newsys zfs recv sandbox/restfs@today</userinput>
</screen>
<para>Komenda ta zapisuje obraz systemu plików <filename>tank/cindy@today</filename> i odzyskuje go w systemie plików <filename>sandbox/restfs</filename>. Tworzy także obraz <filename>restfs@today</filename> w systemie <literal>newsys</literal>. W tym przykładzie na zdalnym systemie istnieje użytkownik do używania komendy <command>ssh</command>.</para>
</sect2>
</sect1>
</chapter>
