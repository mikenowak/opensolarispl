<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML//EN" "docbook.dtd"[
	<!ENTITY % xinclude SYSTEM "xinclude.mod">
	%xinclude;
]>

<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="seamplan-1">



<title>Planning for the
Kerberos Service</title>
<indexterm xml:id="indexterm-2323">
<primary>Kerberos</primary>
<secondary>planning for</secondary>
</indexterm>
<indexterm xml:id="indexterm-2324">
<primary>Kerberos</primary>
<secondary>configuration decisions</secondary>
</indexterm>
<indexterm xml:id="indexterm-2325">
<primary>planning</primary>
<secondary>Kerberos</secondary>
<tertiary>configuration decisions</tertiary>
</indexterm>
<toc>
<para>This chapter should be studied by administrators who are involved in
the installation and maintenance of the Kerberos service. The chapter discusses
several installation and configuration options that administrators must resolve
before they install or configure the service. </para>
<para>This is a list of the topics that a system administrator or other knowledgeable
support staff should study:</para>
<itemizedlist>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-20.xml" targetptr="seamplan-2">Why Plan for Kerberos Deployments?</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-20.xml" targetptr="planning-8">Kerberos Realms</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-20.xml" targetptr="planning-1">Mapping Host Names Onto Realms</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-20.xml" targetptr="planning-25">Client and Service Principal
Names</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-20.xml" targetptr="planning-2">Ports for the KDC and Admin
Services</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-20.xml" targetptr="planning-3">The Number of Slave KDCs</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-20.xml" targetptr="planning-5">Which Database Propagation System
to Use</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-20.xml" targetptr="planning-26">Clock Synchronization Within
a Realm</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-20.xml" targetptr="seamplan-41">Client Installation Options</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-20.xml" targetptr="ehgay">Kerberos Encryption Types</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-20.xml" targetptr="seamplan-3">Online Help URL in the SEAM
Administration Tool</olink>
</para>
</listitem>
</itemizedlist>
</toc>
<sect1 xml:id="seamplan-2">
<title>Why Plan for Kerberos Deployments?</title>
<para>Before you install the Kerberos service, you must resolve several configuration
issues. Although changing the configuration after the initial install is not
impossible, doing so becomes more difficult with each new client that is added
to the system. In addition, some changes require a full re-installation, so
it is better to consider long-term goals when you plan your Kerberos configuration.</para>
<para>Deploying a Kerberos infrastructure involves such tasks as installing
KDCs, creating keys for your hosts, and migrating users.  Reconfiguring a
Kerberos deployment can be as hard as performing an initial deployment, so
plan a deployment carefully to avoid having to re-configure.</para>
</sect1>
<sect1 xml:id="planning-8">
<title>Kerberos Realms</title>
<indexterm xml:id="indexterm-2326">
<primary>realms (Kerberos)</primary>
<secondary>configuration decisions</secondary>
</indexterm>
<indexterm xml:id="indexterm-2327">
<primary>configuration decisions</primary>
<secondary>Kerberos</secondary>
<tertiary>realms</tertiary>
</indexterm>
<indexterm xml:id="indexterm-2328">
<primary>planning</primary>
<secondary>Kerberos</secondary>
<tertiary>realms</tertiary>
</indexterm>
<para>A <emphasis>realm</emphasis> is logical network, similar to a domain,
that defines a group of systems that are under the same master KDC. As with
establishing a DNS domain name, issues such as the realm name, the number
and size of each realm, and the relationship of a realm to other realms for
cross-realm authentication should be resolved before you configure the Kerberos
service.</para>
<sect2 xml:id="planning-27">
<title>Realm Names</title>
<indexterm xml:id="indexterm-2329">
<primary>realms (Kerberos)</primary>
<secondary>names</secondary>
</indexterm>
<indexterm xml:id="indexterm-2330">
<primary>configuration decisions</primary>
<secondary>Kerberos</secondary>
<tertiary>realm names</tertiary>
</indexterm>
<indexterm xml:id="indexterm-2331">
<primary>planning</primary>
<secondary>Kerberos</secondary>
<tertiary>realm names</tertiary>
</indexterm>
<para>Realm names can consist of any ASCII string. Usually, the realm name
is the same as your DNS domain name, except that the realm name is in uppercase.
This convention helps differentiate problems with the Kerberos service from
problems with the DNS namespace, while using a name that is familiar. If you
do not use DNS or you choose to use a different string, then you can use any
string. However, the configuration process requires more work. The use of
realm names that follow the standard Internet naming structure is wise.</para>
</sect2>
<sect2 xml:id="planning-28">
<title>Number of Realms</title>
<indexterm xml:id="indexterm-2332">
<primary>realms (Kerberos)</primary>
<secondary>number of</secondary>
</indexterm>
<indexterm xml:id="indexterm-2333">
<primary>configuration decisions</primary>
<secondary>Kerberos</secondary>
<tertiary>number of realms</tertiary>
</indexterm>
<indexterm xml:id="indexterm-2334">
<primary>planning</primary>
<secondary>Kerberos</secondary>
<tertiary>number of realms</tertiary>
</indexterm>
<para>The number of realms that your installation requires depends on several
factors:</para>
<itemizedlist>
<listitem>
<para>The number of clients to be supported. Too many clients in
one realm makes administration more difficult and eventually requires that
you split the realm. The primary factors that determine the number of clients
that can be supported are as follows:</para>
<itemizedlist>
<listitem>
<para>The amount of Kerberos traffic that each client generates</para>
</listitem>
<listitem>
<para>The bandwidth of the physical network</para>
</listitem>
<listitem>
<para>The speed of the hosts</para>
</listitem>
</itemizedlist>
<para>Because each installation will have different limitations, no rule exists
for determining the maximum number of clients.</para>
</listitem>
<listitem>
<para>How far apart the clients are. Setting up several small realms
might make sense if the clients are in different geographic regions.</para>
</listitem>
<listitem>
<para>The number of hosts that are available to be installed as
KDCs. Each realm should have at least two KDC servers, one master server and
one slave server.</para>
</listitem>
</itemizedlist>
<para>Alignment of Kerberos realms with administrative domains is recommended.
 Note that a Kerberos V realm can span multiple sub-domains of the DNS domain
to which the realm corresponds.</para>
</sect2>
<sect2 xml:id="planning-29">
<title>Realm Hierarchy</title>
<indexterm xml:id="indexterm-2335">
<primary>realms (Kerberos)</primary>
<secondary>hierarchy</secondary>
</indexterm>
<indexterm xml:id="indexterm-2336">
<primary>configuration decisions</primary>
<secondary>Kerberos</secondary>
<tertiary>realm hierarchy</tertiary>
</indexterm>
<indexterm xml:id="indexterm-2337">
<primary>planning</primary>
<secondary>Kerberos</secondary>
<tertiary>realm hierarchy</tertiary>
</indexterm>
<indexterm xml:id="indexterm-2338">
<primary>hierarchical realms</primary>
<secondary>in Kerberos</secondary>
</indexterm>
<para>When you are configuring multiple realms for cross-realm authentication,
you need to decide how to tie the realms together. You can establish a hierarchical
relationship among the realms, which provides automatic paths to the related
domains. Of course, all realms in the hierarchical chain must be configured
properly. The automatic paths can ease the administration burden. However,
if there are many levels of domains, you might not want to use the default
path because it requires too many transactions. </para>
<para>You can also choose to establish the connection directly. A direct connection
is most useful when too many levels exist between two hierarchical realms
or when no hierarchal relationship exists. The connection must be defined
in the <filename>/etc/krb5/krb5.conf</filename> file on all hosts that use
the connection. So, some additional work is required. For an introduction,
see <olink remap="external" targetdoc="chapter-19.xml" targetptr="intro-56">Kerberos Realms</olink>. For the configuration
procedures for multiple realms, see <olink remap="external" targetdoc="chapter-21.xml" targetptr="setup-87">Configuring
Cross-Realm Authentication</olink>.</para>
</sect2>
</sect1>
<sect1 xml:id="planning-1">
<title>Mapping Host Names Onto Realms</title>
<indexterm xml:id="indexterm-2339">
<primary>configuration decisions</primary>
<secondary>Kerberos</secondary>
<tertiary>mapping host names onto realms</tertiary>
</indexterm>
<indexterm xml:id="indexterm-2340">
<primary>realms (Kerberos)</primary>
<secondary>mapping host names onto</secondary>
</indexterm>
<indexterm xml:id="indexterm-2341">
<primary>mapping</primary>
<secondary>host names onto realms (Kerberos)</secondary>
</indexterm>
<indexterm xml:id="indexterm-2342">
<primary>host names</primary>
<secondary>mapping onto realms</secondary>
</indexterm>
<indexterm xml:id="indexterm-2343">
<primary>
<filename>krb5.conf</filename> file</primary>
<secondary>
<literal>domain_realm</literal> section</secondary>
</indexterm>
<indexterm xml:id="indexterm-2344">
<primary>
<literal>domain_realm</literal> section</primary>
<secondary>
<filename>krb5.conf</filename> file</secondary>
</indexterm>
<para>The mapping of host names onto realm names is defined in the <literal>domain_realm</literal> section of the <filename>krb5.conf</filename> file. These mappings
can be defined for a whole domain and for individual hosts, depending on the
requirements. </para>
<para>DNS can also be used to look up information about the KDCs. Using DNS
makes it easier to change the information because you will not need to edit
the <filename>krb5.conf</filename> file on all of the clients each time you
make a change. See the <olink remap="external" targetdoc="819-2251" targetptr="krb5.conf-4">
<citerefentry>
<refentrytitle>krb5.conf</refentrytitle>
<manvolnum>
4
</manvolnum>
</citerefentry>
</olink> man
page for more information.</para>
</sect1>
<sect1 xml:id="planning-25">
<title>Client and Service Principal Names</title>
<indexterm xml:id="indexterm-2345">
<primary>configuration decisions</primary>
<secondary>Kerberos</secondary>
<tertiary>client and service principal names</tertiary>
</indexterm>
<indexterm xml:id="indexterm-2346">
<primary>planning</primary>
<secondary>Kerberos</secondary>
<tertiary>client and service principal names</tertiary>
</indexterm>
<indexterm xml:id="indexterm-2347">
<primary>service principal</primary>
<secondary>planning for names</secondary>
</indexterm>
<indexterm xml:id="indexterm-2348">
<primary>client names</primary>
<secondary>planning for in Kerberos</secondary>
</indexterm>
<indexterm xml:id="indexterm-2349">
<primary>DNS</primary>
<secondary>Kerberos and</secondary>
</indexterm>
<indexterm xml:id="indexterm-2350">
<primary>FQDN (Fully Qualified Domain Name)</primary>
<secondary>in Kerberos</secondary>
</indexterm>
<para>When you are using the Kerberos service, it is strongly recommended
that DNS services already be configured and running on all hosts. If DNS is
used, it must be enabled on all hosts or on none of them. If DNS is available,
then the principal should contain the Fully Qualified Domain Name (FQDN) of
each host. For example, if the host name is <literal>boston</literal>, the
DNS domain name is <literal>example.com</literal>, and the realm name is <literal>EXAMPLE.COM</literal>, then the principal name for the host should be <literal>host/boston.example.com@EXAMPLE.COM</literal>. The examples in this book require that DNS is configured and use
the FQDN for each host.</para>
<para>For the principal names that include the FQDN of a host, it is important
to match the string that describes the DNS domain name in the <filename>/etc/resolv.conf</filename> file. The Kerberos service requires that the DNS domain name be
in lowercase letters when you are specifying the FQDN for a principal. The
DNS domain name can include uppercase and lowercase letters, but only use
lowercase letters when you are creating a host principal. For example, it
doesn't matter if the DNS domain name is <literal>example.com</literal>, <literal>Example.COM</literal>, or any other variation. The principal name for the
host would still be <literal>host/boston.example.com@EXAMPLE.COM</literal>.</para>
<para>
<indexterm xml:id="indexterm-2351">
<primary>host principal</primary>
<secondary>DNS and</secondary>
</indexterm>The Kerberos service can run without DNS services. However, some
key capabilities, such as the ability to communicate with other realms, will
not work. If DNS is not configured, then a simple host name can be used as
the instance name. In this case, the principal would be <literal>host/boston@EXAMPLE.COM</literal>. If DNS is enabled later, all host principals must be deleted and
replaced in the KDC database.</para>
<para>In addition, the Service Management Facility has been configured so
that many of the daemons or commands do not start if the DNS service is not
running. The <command>kdb5_util</command>, <command>kadmind</command>, and <command>kpropd</command> daemons, as well as the <command>kprop</command> command
all are configured to depend on the DNS service. To fully utilize the features
available using the Kerberos service and SMF, you must configure DNS on all
hosts.</para>
</sect1>
<sect1 xml:id="planning-2">
<title>Ports for the KDC and Admin Services</title>
<indexterm xml:id="indexterm-2352">
<primary>ports</primary>
<secondary>for Kerberos KDC</secondary>
</indexterm>
<indexterm xml:id="indexterm-2353">
<primary>planning</primary>
<secondary>Kerberos</secondary>
<tertiary>ports</tertiary>
</indexterm>
<indexterm xml:id="indexterm-2354">
<primary>configuration decisions</primary>
<secondary>Kerberos</secondary>
<tertiary>ports</tertiary>
</indexterm>
<indexterm xml:id="indexterm-2355">
<primary>
<filename>krb5.conf</filename> file</primary>
<secondary>ports definition</secondary>
</indexterm>
<indexterm xml:id="indexterm-2356">
<primary>KDC</primary>
<secondary>ports</secondary>
</indexterm>
<para>By default, port <literal>88</literal> and port <literal>750</literal> are
used for the KDC, and port <literal>749</literal> is used for the KDC administration
daemon. Different port numbers can be used. However, if you change the port
numbers, then the <filename>/etc/services</filename> and <filename>/etc/krb5/krb5.conf</filename> files must be changed on every client. In addition, the <filename>/etc/krb5/kdc.conf</filename> file on each KDC must be updated.</para>
</sect1>
<sect1 xml:id="planning-3">
<title>The Number of Slave KDCs</title>
<indexterm xml:id="indexterm-2357">
<primary>KDC</primary>
<secondary>slave</secondary>
</indexterm>
<indexterm xml:id="indexterm-2358">
<primary>KDC</primary>
<secondary>planning</secondary>
</indexterm>
<indexterm xml:id="indexterm-2359">
<primary>slave KDCs</primary>
<secondary>planning for</secondary>
</indexterm>
<indexterm xml:id="indexterm-2360">
<primary>planning</primary>
<secondary>Kerberos</secondary>
<tertiary>slave KDCs</tertiary>
</indexterm>
<indexterm xml:id="indexterm-2361">
<primary>configuration decisions</primary>
<secondary>Kerberos</secondary>
<tertiary>slave KDCs</tertiary>
</indexterm>
<indexterm xml:id="indexterm-2362">
<primary>backup</primary>
<secondary>slave KDCs</secondary>
</indexterm>
<para>Slave KDCs generate credentials for clients just as the master KDC does.
Slave KDCs provide backup if the master becomes unavailable. Each realm should
have at least one slave KDC. Additional slave KDCs might be required, depending
on these factors:</para>
<itemizedlist>
<listitem>
<para>The number of physical segments in the realm. Normally, the
network should be set up so that each segment can function, at least minimally,
without the rest of the realm. To do so, a KDC must be accessible from each
segment. The KDC in this instance could be either a master or a slave.</para>
</listitem>
<listitem>
<para>The number of clients in the realm. By adding more slave KDC
servers, you can reduce the load on the current servers. </para>
</listitem>
</itemizedlist>
<para>It is possible to add too many slave KDCs. Remember that the KDC database
must be propagated to each server, so the more KDC servers that are installed,
the longer it can take to get the data updated throughout the realm. Also,
because each slave retains a copy of the KDC database, more slaves increase
the risk of a security breach.</para>
<para>In addition, one or more slave KDCs can easily be configured to be swapped
with the master KDC. The advantage of configuring at least one slave KDC in
this way is that if the master KDC fails for any reason, you will have a system
preconfigured that will be easy to swap as the master KDC. For instructions
on how to configure a swappable slave KDC, see <olink remap="external" targetdoc="chapter-21.xml" targetptr="aadmin-2">Swapping
a Master KDC and a Slave KDC</olink>.</para>
</sect1>
<sect1 xml:id="ezlsz">
<title>Mapping GSS Credentials to UNIX Credentials</title>
<indexterm xml:id="indexterm-2363">
<primary>mapping GSS credentials</primary>
</indexterm>
<indexterm xml:id="indexterm-2364">
<primary>credentials</primary>
<secondary>mapping</secondary>
</indexterm>
<para>The Kerberos service provides a default mapping of GSS credential names
to UNIX user IDs (UIDs) for GSS applications that require this mapping, such
as NFS. GSS credential names are equivalent to Kerberos principal names when
using the Kerberos service. The default mapping algorithm is to take a one
component Kerberos principal name and use that component, which is the primary
name of the principal, to look up the UID. The look up occurs in the default
realm or any realm that is allowed by using the <literal>auth_to_local_realm</literal> parameter
in <filename>/etc/krb5/krb5.conf</filename>. For example, the
user principal name <literal>bob@EXAMPLE.COM</literal> is mapped to the UID
of the UNIX user named <literal>bob</literal> using the password table. The
user principal name <literal>bob/admin@EXAMPLE.COM</literal> would not be
mapped, because the principal name includes an instance component of <literal>admin</literal>. If the default mappings for the user credentials are sufficient,
the GSS credential table does not need to be populated. In past releases,
populating the GSS credential table was required to get the NFS service to
work. If the default mapping is not sufficient, for example if you want to
map a principal name which contains an instance component, then other methods
should be used. For more information see:</para>
<itemizedlist>
<listitem>
<para>
<olink remap="external" targetdoc="chapter-21.xml" targetptr="setup-133">How to Create a Credential Table</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="external" targetdoc="chapter-21.xml" targetptr="setup-137">How to Add a Single Entry to
the Credential Table</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="external" targetdoc="chapter-21.xml" targetptr="ezltf">How to Provide Credential Mapping
Between Realms</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="external" targetdoc="chapter-22.xml" targetptr="fabaf">Observing Mapping from GSS Credentials
to UNIX Credentials</olink>
</para>
</listitem>
</itemizedlist>
</sect1>
<sect1 xml:id="faawc">
<title>Automatic User Migration to a Kerberos Realm</title>
<para>UNIX users who do not have valid user accounts in the default Kerberos
realm can be automatically migrated using the PAM framework. Specifically,
the <literal>pam_krb5_migrate</literal> module would be used in the authentication
stack of the PAM service. Services would be setup up so that whenever a user,
who does not have a Kerberos principal, performs a successful log in to a
system using their password, a Kerberos principal would be automatically created
for that user. The new principal would use the same password. See <olink remap="external" targetdoc="chapter-21.xml" targetptr="faavx">Configuring Automatic Migration of Users in a Kerberos Realm</olink> for
instructions on how to use the <literal>pam_krb5_migrate</literal> module.</para>
</sect1>
<sect1 xml:id="planning-5">
<title>Which Database Propagation System to Use</title>
<indexterm xml:id="indexterm-2365">
<primary>planning</primary>
<secondary>Kerberos</secondary>
<tertiary>database propagation</tertiary>
</indexterm>
<indexterm xml:id="indexterm-2366">
<primary>configuration decisions</primary>
<secondary>Kerberos</secondary>
<tertiary>database propagation</tertiary>
</indexterm>
<indexterm xml:id="indexterm-2367">
<primary>databases</primary>
<secondary>KDC propagation</secondary>
</indexterm>
<indexterm xml:id="indexterm-2368">
<primary>KDC</primary>
<secondary>database propagation</secondary>
</indexterm>
<indexterm xml:id="indexterm-2369">
<primary>propagation</primary>
<secondary>KDC database</secondary>
</indexterm>
<para>The database that is stored on the master KDC must be regularly propagated
to the slave KDCs. You can configure the propagation of the database to be
incremental. The incremental process propagates only updated information to
the slave KDCs, rather than the entire database.  For more information about
database propagation, see <olink remap="external" targetdoc="chapter-21.xml" targetptr="aadmin-3">Administering the Kerberos
Database</olink>.</para>
<para>If you do not use incremental propagation, one of the first issues to
resolve is how often to update the slave KDCs. The need to have up-to-date
information that is available to all clients must be weighed against the amount
of time it takes to complete the update.</para>
<para>In large installations with many KDCs in one realm, one or more slaves
can propagate the data so that the process is done in parallel. This strategy
reduces the amount of time that the update takes, but it also increases the
level of complexity in administering the realm. For a complete description
of this strategy, see <olink remap="external" targetdoc="chapter-21.xml" targetptr="setup-313">Setting Up Parallel Propagation</olink>.</para>
</sect1>
<sect1 xml:id="planning-26">
<title>Clock Synchronization Within a Realm</title>
<indexterm xml:id="indexterm-2370">
<primary>planning</primary>
<secondary>Kerberos</secondary>
<tertiary>clock synchronization</tertiary>
</indexterm>
<indexterm xml:id="indexterm-2371">
<primary>configuration decisions</primary>
<secondary>Kerberos</secondary>
<tertiary>clock synchronization</tertiary>
</indexterm>
<indexterm xml:id="indexterm-2372">
<primary>clock synchronizing</primary>
<secondary>Kerberos and</secondary>
</indexterm>
<indexterm xml:id="indexterm-2373">
<primary>clock skew</primary>
<secondary>Kerberos and</secondary>
</indexterm>
<indexterm xml:id="indexterm-2374">
<primary>NTP</primary>
<secondary>Kerberos and</secondary>
</indexterm>
<para>All hosts that participate in the Kerberos authentication system must
have their internal clocks synchronized within a specified maximum amount
of time. Known as <emphasis>clock skew</emphasis>, this feature provides another
Kerberos security check. If the clock skew is exceeded between any of the
participating hosts, requests are rejected. </para>
<para>One way to synchronize all the clocks is to use the Network Time Protocol
(NTP) software. See <olink remap="external" targetdoc="chapter-21.xml" targetptr="setup-192">Synchronizing Clocks Between
KDCs and Kerberos Clients</olink> for more information. Other ways of synchronizing
the clocks are available, so the use of NTP is not required. However, some
form of synchronization should be used to prevent access failures because
of clock skew.</para>
</sect1>
<sect1 xml:id="seamplan-41">
<title>Client Installation Options</title>
<para>A new feature in the Solaris 10 release is the <command>kclient</command> installation
utility. The utility can be run in interactive mode or noninteractive mode.
In interactive mode, the user is prompted for Kerberos-specific parameter
values, which allows the user to make changes to the existing installation
when installing the client. In noninteractive mode, a file with previously
set parameter values is used. Also, command-line options can be used in the
noninteractive mode. Both interactive and noninteractive modes require less
steps than the manual process, which should make the process quicker and less
prone to error. See <olink remap="external" targetdoc="chapter-21.xml" targetptr="setup-148">Configuring Kerberos Clients</olink> for
a description of all the client installation processes.</para>
</sect1>
<sect1 xml:id="ehgay">
<title>Kerberos Encryption Types</title>
<para>An <emphasis>encryption type</emphasis> is an identifier that specifies
the encryption algorithm, encryption mode, and hash algorithms used in the
Kerberos service. The keys in the Kerberos service have an associated encryption
type to identify the cryptographic algorithm and mode to be used when the
service performs cryptographic operations with the key. Here are the supported
encryption types in the Solaris 10 release:</para>
<itemizedlist>
<listitem>
<para>
<literal>des-cbc-md5</literal>
</para>
</listitem>
<listitem>
<para>
<literal>des-cbc-crc</literal>
</para>
</listitem>
<listitem>
<para>
<literal>des3-cbc-sha1</literal>
</para>
</listitem>
<listitem>
<para>
<literal>arcfour-hmac-md5</literal>
</para>
</listitem>
<listitem>
<para>
<literal>arcfour-hmac-md5-exp</literal>
</para>
</listitem>
<listitem>
<para>
<literal>aes128-cts-hmac-sha1-96</literal>
</para>
</listitem>
</itemizedlist>
<note>

<para>In addition, the <literal>aes256-cts-hmac-sha1-96</literal> encryption
type can be used with the Kerberos service if the unbundled Strong Cryptographic
packages are  installed.</para>
</note>
<para>If you want to change the encryption type, you should do so when creating
a new principal database. Because of the interaction between the KDC, the
server, and the client, changing the encryption type on an existing database
is difficult. Leave these parameters unset unless you are re-creating the
database. Refer to <olink remap="external" targetdoc="chapter-25.xml" targetptr="egric">Using Kerberos Encryption Types</olink> for
more information.</para>
<note>

<para>If you have a master KDC installed that is not running the Solaris
10 release, the slave KDCs must be upgraded to the Solaris 10 release before
you upgrade the master KDC. A Solaris 10 master KDC will use the new encryption
types, which an older slave will not be able to handle.</para>
</note>
</sect1>
<sect1 xml:id="seamplan-3">
<title>Online Help URL in the SEAM Administration Tool</title>
<indexterm xml:id="indexterm-2375">
<primary>help</primary>
<secondary>URL for online</secondary>
</indexterm>
<indexterm xml:id="indexterm-2376">
<primary>online help</primary>
<secondary>URL for</secondary>
</indexterm>
<indexterm xml:id="indexterm-2377">
<primary>URL for online help</primary>
<secondary>SEAM Tool</secondary>
</indexterm>
<indexterm xml:id="indexterm-2378">
<primary>Kerberos</primary>
<secondary>online help</secondary>
</indexterm>
<para>The online help URL is used by the SEAM Administration Tool, so the
URL should be defined properly to enable the “Help Contents“ menu
to work. The HTML version of this manual can be installed on any appropriate
server. Alternately, you can decide to use the collections at <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="url" xlink:href="http://docs.sun.com">
</link>.</para>
<para>The URL is specified in the krb5.conf file when configuring a host to
use the Kerberos service. The URL should point to the section titled “SEAM
Administration Tool” in the “Administering Principals and Policies
(Tasks)” chapter in this book. You can choose another HTML page, if
another location is more appropriate.</para>
</sect1>
</chapter>
