<chapter id="rfsintro-2"><title>Managing Network File Systems (Overview)</title><highlights><para>This chapter provides an overview of the NFS service, which can be used
to access file systems over the network. The chapter includes a discussion
of the concepts necessary to understand the NFS service and a description
of the latest features in NFS and autofs. </para><itemizedlist><listitem><para><olink targetptr="ewbds" remap="internal">What's New With the NFS Service</olink></para>
</listitem><listitem><para><olink targetptr="rfsintro-27" remap="internal">NFS Terminology</olink></para>
</listitem><listitem><para><olink targetptr="rfsintro-7" remap="internal">About the NFS Service</olink></para>
</listitem><listitem><para><olink targetptr="rfsintro-19" remap="internal">About Autofs</olink></para>
</listitem><listitem><para><olink targetptr="rfsintro-101" remap="internal">Features of the NFS Service</olink></para>
</listitem>
</itemizedlist><note><para>If your system has zones enabled and you want to use this feature
in a non-global zone, see <olink targetdoc="sysadrm" remap="external"><citetitle remap="book">System Administration Guide: Solaris Containers-Resource Management and Solaris Zones</citetitle></olink> for
more information.</para>
</note>
</highlights><sect1 id="ewbds"><title>What's New With the NFS Service</title><para>This section provides information about new features in releases of the Solaris OS.</para><sect2 id="gedmt"><title>Changes in the Solaris Express,
Developer Edition 2/07 Release</title><itemizedlist><para>The Solaris Express, Developer Edition 2/07 release provides support
for two utilities that enable you to manage file systems and file-sharing
protocols:</para><listitem><para>The <command>sharemgr</command> utility simplifies tasks related
to sharing file systems. For example, when using <command>sharemgr</command> to
share file systems, set property values for shared file systems, or perform
related tasks, you do not need to use the <command>share</command>, <command>shareall</command>, or <command>unshare</command> utilities. Additionally, you do
not need to edit the <filename>/etc/dfs/dfstab</filename> file. For more information,
see the <citerefentry><refentrytitle>sharemgr</refentrytitle><manvolnum>1M</manvolnum></citerefentry> man page and <olink targetptr="gcrvu" remap="internal">sharemgr Command</olink>.</para><itemizedlist><para>For procedures that use the <command>sharemgr</command> utility, see
the following:</para><listitem><para><olink targetptr="rfsadmin-56" remap="internal">Automatic File-System Sharing</olink></para>
</listitem><listitem><para><olink targetptr="rfsadmin-61" remap="internal">Mounting File Systems</olink></para>
</listitem><listitem><para><olink targetptr="rfsadmin-96" remap="internal">Administering the Secure NFS
System</olink></para>
</listitem>
</itemizedlist>
</listitem><listitem><para>The <command>sharectl</command> utility enables you to configure
and manage file-sharing protocols, such as NFS. For example, this utility
allows you to set client and server operational properties, display property
values for a specific protocol, and obtain the status of a protocol. For more
information, see the <citerefentry><refentrytitle>sharectl</refentrytitle><manvolnum>1M</manvolnum></citerefentry> man page and <olink targetptr="gecpc" remap="internal">sharectl
Command</olink>.</para>
</listitem>
</itemizedlist><para>For information about all the new features in the Solaris Express, Developer
Edition 2/07 release, see <olink targetdoc="solwhatsnew" remap="external"><citetitle remap="book">Solaris Express, Developer Edition What&#8217;s New</citetitle></olink>.</para>
</sect2><sect2 id="gcbdu"><title>Changes in the Solaris 10 11/06 Release</title><itemizedlist><para>The Solaris 10 11/06 release provides support for a file system monitoring
tool. See the following:</para><listitem><para><olink targetptr="gcays" remap="internal">fsstat Command</olink> for a description
and examples</para>
</listitem><listitem><para><olink targetdoc="refman" targetptr="fsstat-1m" remap="external"><citerefentry><refentrytitle>fsstat</refentrytitle><manvolnum>1M</manvolnum></citerefentry></olink> man
page for more information</para>
</listitem>
</itemizedlist><itemizedlist><para>Additionally, this Guide provides a more detailed description of the <command>nfsmapid</command> daemon. For information about <command>nfsmapid</command>,
see the following:</para><listitem><para><olink targetptr="rfsrefer-118" remap="internal">nfsmapid Daemon</olink></para>
</listitem><listitem><para><olink targetdoc="refman1m" targetptr="nfsmapid-1m" remap="external"><citerefentry><refentrytitle>nfsmapid</refentrytitle><manvolnum>1M</manvolnum></citerefentry></olink> man
page</para>
</listitem>
</itemizedlist><para>For a complete list of new features in the Solaris 10 11/06 release,
see <olink targetdoc="solwhatsnew" remap="external"><citetitle remap="book">Solaris Express, Developer Edition What&#8217;s New</citetitle></olink>.</para>
</sect2><sect2 id="gcpih"><title>Changes in the Solaris Express 5/06 Release</title><itemizedlist><para>Starting
in the Solaris Express 5/06 release, the NFS version 4 domain can be defined
during the installation of the Solaris OS. For more information, see the following:</para><listitem><para><olink targetptr="rfsrefer-118" remap="internal">nfsmapid Daemon</olink> for
a description and examples</para>
</listitem><listitem><para><olink targetdoc="refman1m" targetptr="nfsmapid-1m" remap="external"><citerefentry><refentrytitle>nfsmapid</refentrytitle><manvolnum>1M</manvolnum></citerefentry></olink> man
page for more information</para>
</listitem>
</itemizedlist><para>For a complete list of the new features in the Solaris Express release,
see <olink targetdoc="nvdwhatsnew" remap="external"><citetitle remap="book">What&#8217;s New
in Solaris Express</citetitle></olink>.</para>
</sect2><sect2 id="gcbbq"><title>Changes in the Solaris 10 Release</title><itemizedlist><para>Starting in the Solaris 10 release, NFS version 4 is the default. For
information about features in NFS version 4 and other changes, refer to the
following:</para><listitem><para><olink targetptr="rfsadmin-155" remap="internal">Accessing NFS File Systems
Using CacheFS</olink></para>
</listitem><listitem><para><olink targetptr="rfsrefer-146" remap="internal">/etc/default/autofs File</olink></para>
</listitem><listitem><para><olink targetptr="rfsrefer-133" remap="internal">Keywords for the /etc/default/nfs
File</olink></para>
</listitem><listitem><para><olink targetptr="rfsrefer-9" remap="internal">lockd Daemon</olink></para>
</listitem><listitem><para><olink targetptr="rfsrefer-144" remap="internal">nfs4cbd Daemon</olink></para>
</listitem><listitem><para><olink targetptr="rfsrefer-118" remap="internal">nfsmapid Daemon</olink></para>
</listitem><listitem><para><olink targetptr="rfsrefer-16" remap="internal">mount Options for NFS File
Systems</olink></para>
</listitem><listitem><para><olink targetptr="rfsrefer-154" remap="internal">NFS Over RDMA</olink></para>
</listitem><listitem><para><olink targetptr="rfsrefer-147" remap="internal">Version Negotiation in NFS</olink></para>
</listitem><listitem><para><olink targetptr="rfsrefer-134" remap="internal">Features in NFS Version 4</olink></para>
</listitem><listitem><para><olink targetptr="rfsrefer-86" remap="internal">How Autofs Selects the Nearest
Read-Only Files for Clients (Multiple Locations)</olink></para>
</listitem>
</itemizedlist><itemizedlist><para>Also, see the following:</para><listitem><para><olink targetptr="rfsadmin-68" remap="internal">Setting Up NFS Services</olink> for
task information</para>
</listitem><listitem><para><olink targetdoc="solwhatsnew" remap="external"><citetitle remap="book">Solaris Express, Developer Edition What&#8217;s New</citetitle></olink> for a complete list of new features</para>
</listitem>
</itemizedlist><para>Additionally, the NFS service is managed by the Service Management Facility.
Administrative actions on this service, such as enabling, disabling, or restarting,
can be performed by using the <command>svcadm</command> command. The service's
status can be queried by using the <command>svcs</command> command. For more
information about the Service Management Facility, refer to the <olink targetdoc="refman5" targetptr="smf-5" remap="external"><citerefentry><refentrytitle>smf</refentrytitle><manvolnum>5</manvolnum></citerefentry></olink> man page and <olink targetdoc="sysadv1" targetptr="hbrunlevels-25516" remap="external">Chapter 14, <citetitle remap="chapter">Managing Services (Overview),</citetitle> in <citetitle remap="book">System Administration Guide: Basic Administration</citetitle></olink>.</para>
</sect2>
</sect1><sect1 id="rfsintro-27"><title>NFS Terminology</title><para>This section presents some of the basic terminology that must be understood
to work with the NFS service. Expanded coverage of the NFS service is included
in <olink targetptr="rfsrefer-1" remap="internal">Chapter&#160;6, Accessing Network File Systems
(Reference)</olink>.</para><sect2 id="rfsintro-5"><title>NFS Servers and Clients</title><para>The terms <emphasis>client</emphasis> and <emphasis>server</emphasis> are
used to describe the roles that a computer assumes when sharing file systems.
Computers that share their file systems over a network are acting as servers.
The computers that are accessing the file systems are said to be clients.
The NFS service enables any computer to access any other computer's file systems.
At the same time, the NFS service provides access to its own file systems.
A computer can assume the role of client, server, or both client and server
at any particular time on a network.</para><para>Clients access files on the server by mounting the server's shared file
systems. When a client mounts a remote file system, the client does not make
a copy of the file system. Rather, the mounting process uses a series of remote
procedure calls that enable the client to access the file system transparently
on the server's disk. The mount resembles a local mount. Users type commands
as if the file systems were local. See <olink targetptr="rfsadmin-61" remap="internal">Mounting
File Systems</olink> for information about tasks that mount file systems.</para><para>After a file system has been shared on a server through an NFS operation,
the file system can be accessed from a client. You can mount an NFS file system
automatically with autofs. See <olink targetptr="rfsadmin-56" remap="internal">Automatic File-System
Sharing</olink> and <olink targetptr="rfsadmin-127" remap="internal">Task Overview for Autofs
Administration</olink> for tasks that involve the <command>share</command> command
and autofs.</para>
</sect2><sect2 id="rfsintro-6"><title>NFS File Systems</title><para>The objects that can be shared with the NFS service include any
whole or partial directory tree or a file hierarchy, including a single file.
A computer cannot share a file hierarchy that overlaps a file hierarchy that
is already shared. Peripheral devices such as modems and printers cannot be
shared.</para><para>In most UNIX system environments, a file hierarchy that can be
shared corresponds to a file system or to a portion of a file system. However,
NFS support works across operating systems, and the concept of a file system
might be meaningless in other, non-UNIX environments. Therefore, the term <emphasis>file</emphasis> <emphasis>system</emphasis> refers to a file or file hierarchy
that can be shared and be mounted with NFS.  </para>
</sect2>
</sect1><sect1 id="rfsintro-7"><title>About the NFS Service</title><para>The NFS service enables computers of different architectures that run
different operating systems to share file systems across a network. NFS support
has been implemented on many platforms that range from the MS-DOS to the VMS
operating systems. </para><para>The NFS environment can be implemented on different operating systems
because NFS defines an abstract model of a file system, rather than an architectural
specification. Each operating system applies the NFS model to its file-system
semantics. This model means that file system operations such as reading and
writing function as though the operations are accessing a local file.</para><itemizedlist><para>The NFS service has the following benefits: </para><listitem><para>Enables multiple computers to use the same files so that everyone
on the network can access the same data </para>
</listitem><listitem><para>Reduces storage costs by having computers share applications
instead of needing local disk space for each user application</para>
</listitem><listitem><para>Provides data consistency and reliability because all users
can read the same set of files</para>
</listitem><listitem><para>Makes mounting of file systems transparent to users</para>
</listitem><listitem><para>Makes accessing of remote files transparent to users</para>
</listitem><listitem><para>Supports heterogeneous environments</para>
</listitem><listitem><para>Reduces system administration overhead</para>
</listitem>
</itemizedlist><para>The NFS service makes the physical location of the file system irrelevant
to the user. You can use the NFS implementation to enable users to see all
the relevant files regardless of location. Instead of placing copies of commonly
used files on every system, the NFS service enables you to place one copy
on one computer's disk. All other systems access the files across the network.
Under NFS operation, remote file systems are almost indistinguishable from
local file systems.</para>
</sect1><sect1 id="rfsintro-19"><title>About Autofs</title><para>File systems that are shared through the NFS service can be mounted
by using automatic mounting. Autofs, a client-side service, is a file-system
structure that provides automatic mounting. The autofs file system is initialized
by <command>automount</command>, which is run automatically when a system
is booted. The automount daemon, <command>automountd</command>, runs continuously,
mounting and unmounting remote directories as necessary.      </para><para>Whenever a client computer that is running <command>automountd</command> tries
to access a remote file or remote directory, the daemon mounts the remote
file system. This remote file system remains mounted for as long as needed.
If the remote file system is not accessed for a certain period of time, the
file system is automatically unmounted.</para><para>Mounting need not be done at boot time, and the user no longer
has to know the superuser password to mount a directory. Users do not need
to use the <command>mount</command> and <command>umount</command> commands.
The autofs service mounts and unmounts file systems as required without any
intervention by the user.    </para><para>Mounting some file hierarchies with <command>automountd</command> does
not exclude the possibility of mounting other hierarchies with <command>mount</command>.
A diskless computer <emphasis>must</emphasis> mount  <literal>/</literal> (root), <filename>/usr</filename>, and <filename>/usr/kvm</filename> through the <command>mount</command> command
and the <filename>/etc/vfstab</filename> file.          </para><para><olink targetptr="rfsadmin-127" remap="internal">Task Overview for Autofs Administration</olink> and <olink targetptr="rfsrefer-75" remap="internal">How Autofs Works</olink> give more specific information
about the autofs service.</para>
</sect1><sect1 id="rfsintro-101"><title>Features of the NFS Service</title><para>This section describes the important features that are included in the
NFS service. </para><sect2 id="rfsintro-8"><title>NFS Version 2 Protocol</title><para>Version 2 was the first version of the NFS protocol in wide use. Version
2 continues to be available on a large variety of platforms. All Solaris releases
support version 2 of the NFS protocol, but Solaris releases prior to Solaris
2.5 support version 2 only. </para>
</sect2><sect2 id="rfsintro-9"><title>NFS Version 3 Protocol</title><para>An implementation of NFS version 3 protocol was a new feature of the
Solaris 2.5 release. Several changes have been made to improve interoperability
and performance. For optimal use, the version 3 protocol must be running on
both the NFS servers and clients. </para><para>Unlike the NFS version 2 protocol, the NFS version 3 protocol can handle
files that are larger than 2 Gbytes. The previous limitation has been removed.
See <olink targetptr="rfsintro-13" remap="internal">NFS Large File Support</olink>.</para><para>The NFS version 3 protocol enables safe asynchronous writes on the server,
which improve performance by allowing the server to cache client write requests
in memory. The client does not need to wait for the server to commit the changes
to disk, so the response time is faster. Also, the server can batch the requests,
which improves the response time on the server.</para><para>Many Solaris NFS version 3 operations return the file attributes,
which are stored in the local cache. Because the cache is updated more often,
the need to do a separate operation to update this data arises less often.
Therefore, the number of RPC calls to the server is reduced, improving performance. </para><para>The process for verifying file access permissions has been improved.
Version 2 generated a &#8220;write error&#8221; message  or a &#8220;read
error&#8221; message if users tried to copy a remote file without the appropriate
permissions. In version 3, the permissions are checked before the file is
opened, so the error is reported as an &#8220;open error.&#8221; </para><para>The NFS version 3 protocol removed the 8-Kbyte transfer size limit.
Clients and servers could negotiate whatever transfer size the clients and
servers support, rather than conform to the 8-Kbyte limit that version 2 imposed.
Note that in the Solaris 2.5 implementation, the protocol defaulted to a 32-Kbyte
transfer size. Starting in the Solaris 10 release, restrictions on wire transfer
sizes are relaxed. The transfer size is based on the capabilities of the underlying
transport.</para>
</sect2><sect2 id="rfsintro-23"><title>NFS Version 4 Protocol</title><para>NFS version 4 has features that are not available in the previous versions:</para><itemizedlist><para>The NFS version 4 protocol represents the user ID and the group
ID as strings. <command>nfsmapid</command> is used by the client and the server
to do the following: </para><listitem><para>To map these version 4 ID strings to a local numeric ID</para>
</listitem><listitem><para>To map the local numeric IDs to version 4 ID strings</para>
</listitem>
</itemizedlist><para>For more information, refer to <olink targetptr="rfsrefer-118" remap="internal">nfsmapid
Daemon</olink>.</para><para>Note that in NFS version 4, the ID mapper, <command>nfsmapid</command>,
is used to map user or group IDs in ACL entries on a server to user or group
IDs in ACL entries on a client. The reverse is also true. For more information,
see <olink targetptr="gande" remap="internal">ACLs and nfsmapid in NFS Version 4</olink>.</para><para>With NFS version 4, when you unshare a file system, all the state for
any open files or file locks in that file system is destroyed. In NFS version
3 the server maintained any locks that the clients had obtained before the
file system was unshared. For more information, refer to <olink targetptr="rfsrefer-148" remap="internal">Unsharing and Resharing a File System in NFS Version
4</olink>.</para><para>NFS version 4 servers use a pseudo file system to provide clients with
access to exported objects on the server. Prior to NFS version 4 a pseudo
file system did not exist. For more information, refer to <olink targetptr="rfsrefer-136" remap="internal">File-System Namespace in NFS Version 4</olink>.</para><para>In NFS version 2 and version 3 the server returned persistent file handles.
NFS version 4 supports volatile file handles. For more information, refer
to <olink targetptr="rfsrefer-137" remap="internal">Volatile File Handles in NFS Version 4</olink>.</para><para>Delegation, a technique by which the server delegates the management
of a file to a client, is supported on both the client and the server. For
example, the server could grant either a read delegation or a write delegation
to a client. For more information, refer to <olink targetptr="rfsrefer-140" remap="internal">Delegation
in NFS Version 4</olink>.</para><para>Starting in the Solaris 10 release, NFS version 4 does not support the
LIPKEY/SPKM security flavor.</para><itemizedlist><para>Also, NFS version 4 does not use the following daemons:</para><listitem><para><command>mountd</command></para>
</listitem><listitem><para><command>nfslogd</command></para>
</listitem><listitem><para><command>statd</command></para>
</listitem>
</itemizedlist><para>For a complete list of the features in NFS version 4, refer to <olink targetptr="rfsrefer-134" remap="internal">Features in NFS Version 4</olink>.</para><para>For procedural information that is related to using NFS version 4, refer
to <olink targetptr="rfsadmin-68" remap="internal">Setting Up NFS Services</olink>.</para>
</sect2><sect2 id="etezd"><title>Controlling NFS Versions</title><para>The <filename>/etc/default/nfs</filename> file has keywords to
control the NFS protocols that are used by both the client and the server.
For example, you can use keywords to manage version negotiation. For more
information, refer to <olink targetptr="rfsrefer-133" remap="internal">Keywords for the /etc/default/nfs
File</olink> or the <olink targetdoc="refman4" targetptr="nfs-4" remap="external"><citerefentry><refentrytitle>nfs</refentrytitle><manvolnum>4</manvolnum></citerefentry></olink> man
page.</para>
</sect2><sect2 id="rfsintro-10"><title>NFS ACL Support</title><para>Access control list (ACL) support was added in the Solaris 2.5
release. ACLs provide a finer-grained mechanism to set file access permissions
than is available through standard UNIX file permissions. NFS ACL support
provides a method of changing and viewing ACL entries from a Solaris NFS client
to a Solaris NFS server. See <olink targetdoc="sysadv6" targetptr="secfile-37" remap="external"><citetitle remap="section">Using Access Control Lists to Protect Files</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle></olink> for
more information about ACLs.</para><para>For information about support for ACLs in NFS version 4, see <olink targetptr="gande" remap="internal">ACLs and nfsmapid in NFS Version 4</olink>.</para>
</sect2><sect2 id="rfsintro-11"><title>NFS Over TCP</title><para>The default transport protocol for the NFS protocol was changed
to the Transport Control Protocol (TCP) in the Solaris 2.5 release. TCP helps
performance on slow networks and wide area networks. TCP also provides congestion
control and error recovery. NFS over TCP works with version 2, version 3,
and version 4. Prior to the Solaris 2.5 release, the default NFS protocol
was User Datagram Protocol (UDP).</para><note><para>Starting in the Solaris 10 release, if RDMA for InfiniBand is
available, RDMA is the default transport protocol for NFS. For more information,
see <olink targetptr="rfsrefer-154" remap="internal">NFS Over RDMA</olink>. Note, however,
that if you use the <option role="nodash">proto=tcp</option> mount option,
NFS mounts are forced to use TCP only.</para>
</note>
</sect2><sect2 id="rfsintro-30"><title>NFS Over UDP</title><para>Starting in the Solaris 10 release, the NFS client no longer uses an
excessive number of UDP ports.  Previously, NFS transfers over UDP used a
separate UDP port for each outstanding request.  Now, by default, the NFS
client uses only one UDP reserved port.  However, this support is configurable.
 If the use of more simultaneous ports would increase system performance through
increased scalability, then the system can be configured to use more ports.
This capability also mirrors the NFS over TCP support, which has had this
kind of configurability since its inception. For more information, refer to
the <olink targetdoc="soltuneparamref" remap="external"><citetitle remap="book">Solaris Tunable Parameters Reference Manual</citetitle></olink>.</para><note><para>NFS version 4 does not use UDP. If you mount a file system with
the <option role="nodash">proto=udp</option> option, then NFS version 3 is
used instead of version 4.</para>
</note>
</sect2><sect2 id="rfsintro-130"><title>Overview of NFS Over RDMA</title><para>Starting in the Solaris 10 release, the default transport for NFS is
the Remote Direct Memory Access (RDMA) protocol, which is a technology for
memory-to-memory transfer of data over high speed networks. Specifically,
RDMA provides remote data transfer directly to and from memory without CPU
intervention. To provide this capability, RDMA combines the interconnect I/O
technology of InfiniBand-on-SPARC platforms with the Solaris Operating System.
For more information, refer to <olink targetptr="rfsrefer-154" remap="internal">NFS Over RDMA</olink>.</para>
</sect2><sect2 id="rfsintro-12"><title>Network Lock Manager and NFS</title><para>The Solaris 2.5 release also included an improved version of the
network lock manager. The network lock manager provided UNIX record locking
and PC file sharing for NFS files. The locking mechanism is now more reliable
for NFS files, so commands that use locking are less likely to hang.</para><note><para>The Network Lock Manager is used only for NFS version 2 and version
3 mounts. File locking is built into the NFS version 4 protocol.</para>
</note>
</sect2><sect2 id="rfsintro-13"><title>NFS Large File Support</title><para>The Solaris 2.6 implementation of the NFS version 3 protocol was
changed to correctly manipulate files that were larger than 2 Gbytes. The
NFS version 2 protocol and the Solaris 2.5 implementation of the version 3
protocol could not handle files that were larger than 2 Gbytes. </para>
</sect2><sect2 id="rfsintro-14"><title>NFS Client Failover</title><para>Dynamic failover of read-only file systems was added in the Solaris
2.6 release. Failover provides a high level of availability for read-only
resources that are already replicated, such as man pages, other documentation,
and shared binaries. Failover can occur anytime after the file system is mounted.
Manual mounts can now list multiple replicas, much like the automounter in
previous releases. The automounter has not changed, except that failover need
not wait until the file system is remounted. See <olink targetptr="rfsadmin-81" remap="internal">How
to Use Client-Side Failover</olink> and <olink targetptr="rfsrefer-51" remap="internal">Client-Side
Failover</olink> for more information.  </para>
</sect2><sect2 id="rfsintro-15"><title>Kerberos Support for the NFS Service</title><para>Support for Kerberos V4 clients was included in the Solaris 2.0
release. In the 2.6 release, the <command>mount</command> and <command>share</command> commands
were altered to support NFS version 3 mounts that use Kerberos V5 authentication.
Also, the <command>share</command> command was changed to enable multiple
authentication flavors for different clients. See <olink targetptr="rfsintro-17" remap="internal">RPCSEC_GSS Security Flavor</olink> for more information about changes that
involve security flavors. See <olink targetdoc="sysadv6" targetptr="setup-97" remap="external"><citetitle remap="section">Configuring Kerberos NFS Servers</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle></olink> for
information about Kerberos V5 authentication.</para>
</sect2><sect2 id="rfsintro-16"><title>WebNFS Support</title><para>The Solaris 2.6 release also included the ability to make a file
system on the Internet accessible through firewalls. This capability was provided
by using an extension to the NFS protocol. One of the advantages to using
the <trademark>WebNFS</trademark> protocol for Internet access is its reliability.
The service is built as an extension of the NFS version 3 and version 2 protocol.
Additionally, the WebNFS implementation provides the ability to share these
files without the administrative overhead of an anonymous <filename>ftp</filename> site.
See <olink targetptr="rfsintro-21" remap="internal">Security Negotiation for the WebNFS Service</olink> for
a description of more changes that are related to the WebNFS service. See <olink targetptr="rfsadmin-110" remap="internal">WebNFS Administration Tasks</olink> for more task
information.</para><note><para>The NFS version 4 protocol is preferred over the WebNFS service.
NFS version 4 fully integrates all the security negotiation that was added
to the MOUNT protocol and the WebNFS service.</para>
</note>
</sect2><sect2 id="rfsintro-17"><title>RPCSEC_GSS Security Flavor</title><para>A security flavor, called RPCSEC_GSS, is supported in the Solaris
7 release. This flavor uses the standard GSS-API interfaces to provide authentication,
integrity, and privacy, as well as enabling support of multiple security mechanisms.
See <olink targetptr="rfsintro-15" remap="internal">Kerberos Support for the NFS Service</olink> for
more information about support of Kerberos V5 authentication. See <olink targetdoc="gssapipg" remap="external"><citetitle remap="book">Solaris Security for Developers Guide</citetitle></olink> for more information about GSS-API.</para>
</sect2><sect2 id="rfsintro-18"><title>Solaris 7 Extensions for NFS Mounting</title><para>The Solaris 7 release includes extensions to the <command>mount</command> command
and <command>automountd</command> command. The extensions  enable the mount
request to use the public file handle instead of the MOUNT protocol. The MOUNT
protocol is the same access method that the WebNFS service uses. By circumventing
the MOUNT protocol, the mount can occur through a firewall. Additionally,
because fewer transactions need to occur between the server and the client,
the mount should occur faster. </para><para>The extensions also enable NFS URLs to be used instead of the
standard path name. Also, you can use the <option role="nodash">public</option> option
with the <command>mount</command> command and the automounter maps to force
the use of the public file handle. See <olink targetptr="rfsintro-16" remap="internal">WebNFS
Support</olink> for more information about changes to the WebNFS service.</para>
</sect2><sect2 id="rfsintro-21"><title>Security Negotiation for the WebNFS Service</title><para>A new protocol has been added to enable a WebNFS client to negotiate
a security mechanism with an NFS server in the Solaris 8 release. This protocol
provides the ability to use secure transactions when using the WebNFS service.
See <olink targetptr="egcod" remap="internal">How WebNFS Security Negotiation Works</olink> for
more information.</para>
</sect2><sect2 id="rfsintro-22"><title>NFS Server Logging</title><para>In the Solaris 8 release, NFS server logging enables an NFS server
to provide a record of  file operations that have been performed on its file
systems. The record includes information about which file was accessed, when
the file was accessed, and who accessed the file. You can specify the location
of the logs that contain this information through a set of configuration options.
You can also use these options to select the operations that should be logged.
This feature is particularly useful for sites that make anonymous FTP archives
available to NFS and WebNFS clients. See <olink targetptr="rfsadmin-101" remap="internal">How
to Enable NFS Server Logging</olink> for more information.</para><note><para>NFS version 4 does not support server logging.</para>
</note>
</sect2><sect2 id="rfsintro-20"><title>Autofs Features</title><para>Autofs works with file systems that are specified in the local
namespace. This information can be maintained in NIS, NIS+, or local files.
 </para><para>A fully multithreaded version of <command>automountd</command> was
included in the Solaris 2.6 release. This enhancement makes autofs more reliable
and enables concurrent servicing of multiple mounts, which prevents the service
from hanging if a server is unavailable.</para><para>The new <command>automountd</command> also provides better on-demand
mounting. Previous releases would mount an entire set of file systems if the
file systems  were hierarchically related. Now, only the top file system is
mounted. Other file systems that are related to this mount point are mounted
when needed.</para><para>The autofs service supports browsability of indirect maps. This
support enables a user to see which directories could be mounted, without
having to actually mount each file system. A <option>nobrowse</option> option
has been added to the autofs maps so that large file systems, such as <literal>/net</literal> and <literal>/home</literal>, are not automatically browsable.
Also, you can turn off autofs browsability on each client by using the <option>n</option> option
with <command>automount</command>. See <olink targetptr="rfsadmin-195" remap="internal">Disabling
Autofs Browsability</olink> for more information. </para>
</sect2>
</sect1>
</chapter>