<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML//EN" "docbook.dtd"[
	<!ENTITY % xinclude SYSTEM "xinclude.mod">
	%xinclude;
]>

<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="ewpor">



<title>Working With the Sun Java Web Console (Tasks)</title>
<toc>
<para>
<indexterm xml:id="indexterm-10">
<primary>Sun Java Web Console</primary>
<see>
Java Web Console</see>
</indexterm>
<indexterm xml:id="indexterm-11">
<primary>Java Web Console</primary>
<secondary>Sun Java Web Console</secondary>
</indexterm>This chapter
describes the Sun Java Web Console, which is used to administer web-based
Sun system management applications that are installed and registered on your
system. Topics in this chapter include the following:</para>
<itemizedlist>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="gbyuq">What's New in Administering the Java Web Console?</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="sunweb-1">Java Web Console (Overview)</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="swc123">Getting Started With the Java Web Console</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdckg">Managing the Console Service</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="eyamf">Configuring the Java Web Console</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="ewppf">Troubleshooting the Java Web Console Software</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="ewpoy">Java Web Console Reference Information</olink>
</para>
</listitem>
</itemizedlist>
<para>For information about the procedures that are associated with using
the Java Web Console, see <olink remap="internal" targetdoc="chapter-3.xml" targetptr="swctask-1">Getting Started With the Java Web Console (Task Map)</olink> and  <olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdkcl">Troubleshooting the Java Web Console Software (Task Map)</olink>.</para>
</toc>
<sect1 xml:id="gbyuq">
<title>What's New in Administering the Java Web Console?</title>
<para>This section includes features that are new in this Solaris release.
For a complete listing of new Solaris features and a description of Solaris
releases, see <olink remap="external" targetdoc="819-2183">
<citetitle remap="book">What’s New in Solaris Express</citetitle>
</olink>.</para>
<sect2 xml:id="gdjqg">
<title>Java Web Console Server
Management</title>
<para>
<emphasis role="strong">Solaris Express 5/06:</emphasis> The Java Web Console server
is managed as a service by the Service Management Facility (SMF). For more
information about SMF, see <olink remap="external" targetdoc="chapter-14.xml" targetptr="hbrunlevels-25516">Chapter 14, Managing Services (Overview)</olink>.</para>
</sect2>
<sect2 xml:id="ewidh">
<title>Applications That Are Available to the Java Web Console</title>
<para>
<emphasis role="strong">Solaris Express 2/06:</emphasis> The Solaris ZFS web-based
management tool is available in the Java Web Console. This tool enables you
to perform much of the administration tasks that you can perform with the
command-line interface (CLI). These capabilities include setting parameters,
viewing the various pools and file systems, and making updates to them. The
following are examples of typical procedures that you might perform with the
tool:</para>
<itemizedlist>
<listitem>
<para>Create a new storage pool.</para>
</listitem>
<listitem>
<para>Add capacity to an existing pool.</para>
</listitem>
<listitem>
<para>Move (export) a storage pool to another system.</para>
</listitem>
<listitem>
<para>Import a previously exported storage pool, to make it available
on another system.</para>
</listitem>
<listitem>
<para>View tables of information about storage pools.</para>
</listitem>
<listitem>
<para>Create a file system.</para>
</listitem>
<listitem>
<para>Create a <filename>zvol</filename> (virtual volume). </para>
</listitem>
<listitem>
<para>Take a snapshot of a file system or a <filename>zvol</filename> volume.</para>
</listitem>
<listitem>
<para>Roll back a file system to a previous snapshot.</para>
</listitem>
</itemizedlist>
<para>For more information about using the Solaris ZFS web-based management
tool, see <olink remap="external" targetdoc="817-2271">
<citetitle remap="book">Solaris ZFS Administration Guide</citetitle>
</olink>.</para>
<note>

<para>The Sun Java Enterprise System
software includes several management applications that run in the Java Web
Console.</para>
</note>
</sect2>
</sect1>
<sect1 xml:id="sunweb-1">
<title>Java Web Console (Overview)</title>
<para>
<indexterm xml:id="indexterm-12">
<primary>Java Web Console</primary>
<secondary>(Overview)</secondary>
</indexterm>
<indexterm xml:id="indexterm-13">
<primary>web-based system management applications</primary>
<secondary>Java Web Console</secondary>
</indexterm>The Java Web Console provides a common location for users to
access web-based system management applications. You access the web console
by logging in through a secure <literal>https</literal> port with one of several
supported web browsers. The single entry point that the web console provides
eliminates the need to learn URLs for multiple applications. In addition,
the single entry point provides user authentication and authorization for
all applications that are registered with the web console.</para>
<para>All web console-based applications conform to the same user interface
guidelines, which enhances ease of use. The web console also provides auditing of user sessions and
logging service
for all registered applications.</para>
<sect2 xml:id="ewppg">
<title>What Is the Java Web Console?</title>
<para>The Java Web Console is a web page where you can find the Sun system
management web-based applications that are installed and registered on your
system. Any compliant <trademark> J2EE</trademark> web application can register
with the web console to make itself available to authenticated and authorized
users. Registration is automatically a part of an application's installation process. Thus,
registration requires no administrator intervention.</para>
<para>The Java Web Console provides the following:</para>
<itemizedlist>
<listitem>
<para>
<emphasis role="strong">A single point of entry for login and the
launching of browser-based system management applications</emphasis>
</para>
<para>
<indexterm xml:id="indexterm-14">
<primary>compatibility with other applications</primary>
<secondary>Java Web Console</secondary>
</indexterm>
<indexterm xml:id="indexterm-15">
<primary>Java Web Console</primary>
<secondary>compatibility with other applications</secondary>
</indexterm>The Java Web Console is Sun's current direction
for system management applications. The console provides a central location from which you can
start browser-based management applications simply by clicking the application
names. No compatibility exists between the Java Web Console and
the Solaris Management Console. The Java Web Console is a  web application that you access through a browser, and Solaris Management Console is a Java application that you start from a command line.  Because the consoles are completely independent,
you can run both consoles on the same system at the same
time.</para>
</listitem>
<listitem>
<para>
<indexterm xml:id="indexterm-16">
<primary>single sign-on, secure <literal>https</literal> port</primary>
<secondary>Java Web Console</secondary>
</indexterm>
<emphasis role="strong">Single sign-on through a secure https
port</emphasis>
</para>
<para>Single sign-on in this context means that you
do not have to authenticate yourself to each management application after
you authenticate yourself to the web console. You enter your user name and password just once per console
session.</para>
</listitem>
<listitem>
<para>
<emphasis role="strong">Dynamically organized and aggregated
applications</emphasis>
</para>
<para>Applications are installed and displayed on the console launch page under  the category
of management tasks that is most applicable. Categories include the following:</para>
<itemizedlist>
<listitem>
<para>Systems</para>
</listitem>
<listitem>
<para>Storage</para>
</listitem>
<listitem>
<para>Services</para>
</listitem>
<listitem>
<para>Desktop applications</para>
</listitem>
<listitem>
<para>Other</para>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<para>
<emphasis role="strong">A common look and feel</emphasis>
</para>
<para>All web console applications use the same user interface (UI) components and behavior,
thereby reducing the learning curve for administrators.</para>
</listitem>
<listitem>
<para>
<emphasis role="strong">Standard, extensible authentication,
authorization, and auditing mechanisms</emphasis>
</para>
<para>The Java Web Console supports
Pluggable Authentication Module (PAM), role-based access control (RBAC) roles,
and Basic Security Module (BSM) auditing.</para>
</listitem>
</itemizedlist>
</sect2>
<sect2 xml:id="gcngp">
<title>Java Web Console Management
Commands</title>
<para>The Java Web Console includes the following management commands:</para>
<itemizedlist>
<listitem>
<para>
<indexterm xml:id="indexterm-17">
<primary>
<command>smcwebserver</command> command</primary>
<secondary>Java Web Console</secondary>
</indexterm>
<indexterm xml:id="indexterm-18">
<primary>
<command>wcadmin</command> command</primary>
<secondary>Java Web Console</secondary>
</indexterm>
<indexterm xml:id="indexterm-19">
<primary>
<command>smreg</command> command</primary>
<secondary>Java Web Console</secondary>
</indexterm>
<indexterm xml:id="indexterm-20">
<primary>Java Web Console commands</primary>
<secondary>
<command>wcadmin</command>
</secondary>
</indexterm>
<indexterm xml:id="indexterm-21">
<primary>Java Web Console commands</primary>
<secondary>
<command>smcwebserver</command>
</secondary>
</indexterm>
<indexterm xml:id="indexterm-22">
<primary>Java Web Console commands</primary>
<secondary>
<command>smreg</command>
</secondary>
</indexterm>
<command>smcwebserver</command> – This command starts and
stops the console's web server.</para>
</listitem>
<listitem>
<para>
<command>wcadmin</command> – <emphasis role="strong">Starting
with the Solaris Express 5/06 release</emphasis>,  this
command is used to configure the console, and to register and deploy console
applications.</para>
</listitem>
<listitem>
<para>
<command>smreg</command> – If you are <emphasis>not</emphasis> running
at least the Solaris Express 5/06 release,
this command is used to register all console applications.</para>
<para>
<emphasis role="strong">Starting
with the Solaris Express 5/06 release</emphasis>, use
this command only to register legacy applications that were created for a
version of the console that is not at least Java Web Console 3.0.</para>
</listitem>
</itemizedlist>
<para>The commands are used to perform various tasks that this chapter describes.</para>
<para>For more information about each command, see the <olink remap="external" targetdoc="819-2240" targetptr="smcwebserver-1m">
<citerefentry>
<refentrytitle>smcwebserver</refentrytitle>
<manvolnum>
1M
</manvolnum>
</citerefentry>
</olink>, <citerefentry>
<refentrytitle>wcadmin</refentrytitle>
<manvolnum>
1M
</manvolnum>
</citerefentry>, and <olink remap="external" targetdoc="819-2240" targetptr="smreg-1m">
<citerefentry>
<refentrytitle>smreg</refentrytitle>
<manvolnum>
1M
</manvolnum>
</citerefentry>
</olink> man pages.</para>
</sect2>
<sect2 xml:id="gcnfo">
<title>Supported Web Browsers</title>
<para>
<indexterm xml:id="indexterm-23">
<primary>Java Web Console</primary>
<secondary>browsers supported</secondary>
</indexterm>The Java Web Console can be used in any of the following browsers
while running the Solaris OS.</para>
<itemizedlist>
<listitem>
<para>Mozilla (at least Version, 1.4)</para>
</listitem>
<listitem>
<para>Netscape (at least Version, 6.2)</para>
</listitem>
<listitem>
<para>Firefox (at least Version, 1.0)</para>
</listitem>
</itemizedlist>
</sect2>
</sect1>
<sect1 xml:id="swctask-1">
<title>Getting Started With the Java Web Console (Task
Map)</title>
<informaltable frame="all">
<tgroup cols="3" colsep="1" rowsep="1">
<colspec colwidth="33*"/>
<colspec colwidth="33*"/>
<colspec colwidth="33*"/>
<thead>
<row>
<entry>
<para>Task</para>
</entry>
<entry>
<para>Description</para>
</entry>
<entry>
<para>For Instructions</para>
</entry>
</row>
</thead>
<tbody>
<row>
<entry>
<para>Start applications from the Java Web Console's launch page.</para>
</entry>
<entry>
<para>The Java Web Console's launch page lists all the registered system management
applications that you have permission to use. You connect to a specific application
by clicking its application name. </para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="swc321">How to Start Applications From the Java Web Console's Launch Page</olink>
</para>
</entry>
</row>
<row>
<entry>
<para>Start, stop,
enable, and disable the console server.</para>
</entry>
<entry>
<para>You can
manage the web server that is used to run the console and the registered applications.</para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdcki">How to Start the Console Service</olink>
</para>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdcjp">How to Enable the Console Service to Run at System Start</olink>
</para>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdbnw">How to Stop the Console Service</olink>
</para>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdboa">How to Disable the Console Service</olink>
</para>
</entry>
</row>
<row>
<entry>
<para>Change the Java Web Console's properties.</para>
</entry>
<entry>
<para>You should not have to change any of the web console's default properties.
Properties that you might choose to change include the following:</para>
<itemizedlist>
<listitem>
<para>Console session timeout</para>
</listitem>
<listitem>
<para>Logging level</para>
</listitem>
<listitem>
<para>Audit implementation</para>
</listitem>
</itemizedlist>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="eyame">How to Change Java Web Console Properties</olink>
</para>
</entry>
</row>
<row>
<entry>
<para>Install the Java Web Console software.</para>
</entry>
<entry>
<para>The Java Web Console software
is installed with the Solaris OS. However, if the console software is removed,
you can install the software by running the <command>setup</command> script. The web
console packages are installed into a directory layout that is based on the
J2EE web application structure.</para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="eyamt">How to Install the Java Web Console Software</olink>
</para>
</entry>
</row>
<row>
<entry>
<para>Remove the Java Web Console software.</para>
</entry>
<entry>
<para>You can easily remove the web console software if you need to reinstall
it.</para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="eyamp">How to Remove the Java Web Console Software</olink>
</para>
</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</sect1>
<sect1 xml:id="swc123">
<title>Getting Started With the Java Web Console</title>
<para>The Java Web Console's launch
page
lists  the registered
system management applications that you have permission to use,  and displays a brief description
of each application. You connect to a specific application by clicking its
application name, which is a link to the actual application. By default, the
selected application opens in the web console window. You can choose to open
applications in separate browser windows by clicking the Start Each Application in a New Window check box. When
you open applications in separate windows,  the web console
launch page remains available, so you can return to it and launch multiple
applications under a single login.</para>
<para>
<indexterm xml:id="indexterm-24">
<primary>starting applications</primary>
<secondary>Java Web Console launch page</secondary>
</indexterm>
<indexterm xml:id="indexterm-25">
<primary>Java Web Console</primary>
<secondary>starting applications from</secondary>
</indexterm>To access the console launch  page, type a URL of the following format in
the web location field: </para>
<para>
<userinput>https://<replaceable>hostname.domain</replaceable>:6789</userinput>
</para>
<para>where:</para>
<itemizedlist>
<listitem>
<para>
<literal>https</literal> specifies a Secure Socket Layer (SSL) connection</para>
</listitem>
<listitem>
<para>
<replaceable>hostname.domain</replaceable> specifies the name and domain of the server
that is hosting the console</para>
</listitem>
<listitem>
<para>
<literal>6789</literal> is the console's assigned port number</para>
</listitem>
</itemizedlist>
<note>

<para>The first time you access the Java Web Console from a particular
system, you must accept the server's certificate before the web console's
launch page is displayed.</para>
</note>
<para>If RBAC is enabled on the system, you are prompted for a role password
after you have successfully logged in. Following a successful login, the web
console launch page is displayed.</para>
<sect2>
<title/>
<task id="swc321">

<title>How to Start Applications From the Java Web Console's
Launch Page</title>
<procedure>
<step>
<para>Start a web browser that is compatible with the Java Web Console,
such as Mozilla 1.7.</para>
<para>See <olink remap="internal" targetdoc="chapter-3.xml" targetptr="gcnfo">Supported Web Browsers</olink> for a list of supported browsers.</para>
</step>
<step>
<para>Type the
console's URL in the web browser's location field.</para>
<para>For example,
if the management server host is named <literal>sailfish</literal>, and the domain is <literal>sw</literal>, the URL is <literal>https://sailfish.sw:6789</literal>. This URL takes you
to the web console login page.</para>
</step>
<step>
<para>Enter your
user name and password, and optionally your RBAC role.</para>
<para>Roles contain
authorizations and privileged commands. For more information about roles,
see <olink remap="external" targetdoc="819-3321" targetptr="rbactask-15">
<citetitle remap="section">Configuring RBAC (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
<para>The
console services check your credentials to authenticate them, and ensure that
you are authorized to use the console and registered applications.</para>
</step>
<step>
<para>Accept the server's certificate before the web console's login
page displays.</para>
<para>You only have to accept the server's certificate once per console session, not
each time you start an application.</para>
<figure xml:id="faasq">

<title>Java Web Console Login Page</title>
<mediaobject>
<imageobject>
<imagedata fileref="figures/LoginPage.gif"/>
</imageobject>
<textobject>
<simpara>Shows the Java Web Console login page.</simpara>
</textobject>
</mediaobject>
</figure>
<para>After your user
credentials are successfully authenticated, the launch page
is displayed.</para>
</step>
<step>
<para>Click the
Start Each Application in a New Window check box if you want to run the application
in a new window.</para>
<para>If you do not select this option, the application
will run in the default window, replacing the launch page.</para>
</step>
<step>
<para>Click the link for the application that you want to run.</para>
<tip>

<para>You can also launch an individual application directly and bypass
the launch page by using the following syntax:</para>
<screen>https://<replaceable>hostname.domain</replaceable>:6789/<replaceable>app-context-name</replaceable>
</screen>
<para>where <replaceable>app-context-name</replaceable> is the name that is used when the application is deployed. </para>
<para>To find the application context name, you can do one of the following:</para>
<itemizedlist>
<listitem>
<para>Read the application's documentation</para>
</listitem>
<listitem>
<para>Run the command <command>wcadmin list -a</command> or <command>smreg
list –a</command> to see a list of deployed web applications and their
context names</para>
</listitem>
<listitem>
<para>Run the application from the web console's launch page and note
the URL that is displayed in the address location field. You can type the
URL directly the next time you use the application. Or, you can bookmark the
location and access the application through the bookmark.</para>
</listitem>
</itemizedlist>
</tip>
</step>
</procedure>
</task>
</sect2>
</sect1>
<sect1 xml:id="gdckg">
<title>Managing
the Console Service</title>
<indexterm xml:id="indexterm-26">
<primary>Java Web Console</primary>
<secondary>managing the console service</secondary>
</indexterm>
<indexterm xml:id="indexterm-27">
<primary>managing Java Web Console service</primary>
</indexterm>
<para>
<emphasis role="strong">Solaris Express 5/06:</emphasis> The Java Web Console service
is managed through the Service Management Facility (SMF). You can start, stop,
enable, and disable the console service by using SMF commands, or by using
the <command>smcwebserver</command> script. The FMRI used in SMF for the console
is <literal>system/webconsole:console</literal>.</para>
<sect2>
<title/>
<task id="gdcki">

<title>How to Start the Console Service</title>
<indexterm xml:id="indexterm-28">
<primary>Java Web Console</primary>
<secondary>starting the console service</secondary>
</indexterm>
<tasksummary>
<para>This procedure starts the server temporarily. If the server was disabled
from starting when the system bootst, it will continue to be disabled. If
the server was enabled, it will continue to be enabled.</para>
<para>
<emphasis role="strong">Starting with the Solaris
Express 5/06 release</emphasis>, the running <literal>enabled</literal> state
displays as <literal>true (temporary)</literal>, if the server is running
while disabled.</para>
</tasksummary>
<procedure>
<step>
<para>Become superuser or assume an equivalent role.</para>
<para>Roles
contain authorizations and privileged commands. For more information about
roles, see <olink remap="external" targetdoc="819-3321" targetptr="rbactask-15">
<citetitle remap="section">Configuring RBAC (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
</step>
<step>
<para>Start the server now, without changing the enabled state.</para>
<screen># <userinput>smcwebserver start</userinput>
</screen>
</step>
</procedure>
</task>
</sect2>
<sect2>
<title/>
<task id="gdcjp">

<title>How to Enable the Console Service to Run at System
Start</title>
<indexterm xml:id="indexterm-29">
<primary>Java Web Console</primary>
<secondary>enabling the console service</secondary>
</indexterm>
<tasksummary>
<para> This procedure enables the console service to run each time the system
starts. The console is not started in the current session.</para>
<para>
<emphasis role="strong">Starting with the Solaris
Express 7/06 release</emphasis> this procedure sets the <literal>general/enabled</literal> property to true in SMF, so that the server is started at the time
the system boots.</para>
</tasksummary>
<procedure>
<step>
<para>Become superuser or assume an equivalent role.</para>
<para>Roles
contain authorizations and privileged commands. For more information about
roles, see <olink remap="external" targetdoc="819-3321" targetptr="rbactask-15">
<citetitle remap="section">Configuring RBAC (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
</step>
<step>
<para>Enable the server to be started at system boot.</para>
<screen># <userinput>smcwebserver enable</userinput>
</screen>
<para>
<emphasis role="strong">Solaris Express 5/06:</emphasis> Alternatively, if you want
to both start the server now, and enable the server to start when the system
boots, use the command:</para>
<screen># <userinput>svcadm enable system/webconsole:console</userinput>
</screen>
<note>

<para>If you are running the Solaris
Express 5/06 or the Solaris Express 6/06 release, you cannot disable the
console, by using the <command>smcwebserver</command> command. You must use
the <command>svcadm</command> command.</para>
</note>
</step>
</procedure>
</task>
</sect2>
<sect2>
<title/>
<task id="gdbnw">

<title>How to Stop the Console Service</title>
<indexterm xml:id="indexterm-30">
<primary>Java Web Console</primary>
<secondary>stopping the console service</secondary>
</indexterm>
<tasksummary>
<para> This procedure stops the server temporarily. If the server is disabled
from starting when the system boots, it will continue to be disabled. If the
server was enabled, it will continue to be enabled.</para>
<para>
<emphasis role="strong">Starting with the Solaris
Express 5/06 release,</emphasis> the running <literal>enabled</literal> state
displays as <literal>false (temporary)</literal> if the server is stopped
while enabled.</para>
</tasksummary>
<procedure>
<step>
<para>Become superuser or assume an equivalent role.</para>
<para>Roles
contain authorizations and privileged commands. For more information about
roles, see <olink remap="external" targetdoc="819-3321" targetptr="rbactask-15">
<citetitle remap="section">Configuring RBAC (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
</step>
<step>
<para>Stop the server now, without changing the enabled state.</para>
<screen># <userinput>smcwebserver stop</userinput>
</screen>
</step>
</procedure>
</task>
</sect2>
<sect2>
<title/>
<task id="gdboa">

<title>How to Disable the Console Service</title>
<indexterm xml:id="indexterm-31">
<primary>Java Web Console</primary>
<secondary>disabling the console service</secondary>
</indexterm>
<tasksummary>
<para>When the console server is disabled, the server does not start when
the system boots.</para>
<para>
<emphasis role="strong">Starting with the Solaris
Express 7/06 release,</emphasis> this procedure sets the console's <literal>general/enabled</literal> property to false in SMF , so that the console server does not
start when the system boots.</para>
</tasksummary>
<procedure>
<step>
<para>Become superuser or assume an equivalent role.</para>
<para>Roles
contain authorizations and privileged commands. For more information about
roles, see <olink remap="external" targetdoc="819-3321" targetptr="rbactask-15">
<citetitle remap="section">Configuring RBAC (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
</step>
<step>
<para>Disable the server from starting when the system boots.</para>
<screen># <userinput>smcwebserver disable</userinput>
</screen>
<para>
<emphasis role="strong">Solaris Express 5/06:</emphasis> Alternatively, if you want
to both stop the server now, and disable the server from starting when the
system boots, use the command:</para>
<screen># <userinput>svcadm disable system/webconsole:console</userinput>
</screen>
<note>

<para>If you are running at least the Solaris
Express 5/06release, you cannot disable the console with the <command>smcwebserver</command> command. You must use the <command>svcadm</command> command.</para>
</note>
</step>
</procedure>
</task>
</sect2>
</sect1>
<sect1 xml:id="eyamf">
<title>Configuring the Java Web Console</title>
<para>
<indexterm xml:id="indexterm-32">
<primary>configuring Java Web Console</primary>
</indexterm>
<indexterm xml:id="indexterm-33">
<primary>Java Web Console</primary>
<secondary>configuring</secondary>
</indexterm>The Java Web Console is preconfigured to run without administrator
intervention. However, you might choose to change some of the web console's
default behavior by overriding
the console's configuration properties. </para>
<note>

<para>
<emphasis role="strong">Starting
with the Solaris Express 5/06 OS,</emphasis> you must use the <command>wcadmin</command> command to change
these properties. Previously, the <command>smreg</command> command was used.
For more information about the <command>wcadmin</command> command, see the <citerefentry>
<refentrytitle>wcadmin</refentrytitle>
<manvolnum>
1M
</manvolnum>
</citerefentry> man
page.</para>
</note>
<para>Properties in the
console's configuration files control the behavior of the
console.  To change the behavior, you define new values for properties
to override the default values. The default values of most
properties should not be overridden unless there is a specific need that the default values do not
provide, such as specifying your own login service. In general, the  property values that you might consider changing  are the following:</para>
<itemizedlist>
<listitem>
<para>
<emphasis role="strong">Console session timeout</emphasis>
</para>
<para>
<indexterm xml:id="indexterm-34">
<primary>console session timeout</primary>
<secondary>changing Java Web Console properties</secondary>
</indexterm>
<indexterm xml:id="indexterm-35">
<primary>Java Web Console</primary>
<secondary>changing properties of</secondary>
<tertiary>console session timeout</tertiary>
</indexterm>The web console's session timeout period is controlled
by the <literal>session.timeout.value</literal> property. This property controls
how long a web console page can be displayed without user
interaction before the session times out. After the timeout
is reached, the user must log in again. The default value is 15 minutes. You
can set a new value, in minutes, to conform to your own security policy. However,
keep in mind that this property controls the timeout period for all console users and all registered
applications. </para>
<para>See <olink remap="internal" targetdoc="chapter-3.xml" targetptr="eyamm">Example 3–1</olink> for an example of how to change
the session timeout.</para>
</listitem>
<listitem>
<para>
<emphasis role="strong">Logging level</emphasis>
</para>
<para>
<indexterm xml:id="indexterm-36">
<primary>selecting a logging level</primary>
<secondary>changing Java Web Console properties</secondary>
</indexterm>
<indexterm xml:id="indexterm-37">
<primary>Java Web Console</primary>
<secondary>changing properties of</secondary>
<tertiary>console session timout</tertiary>
</indexterm>
<indexterm xml:id="indexterm-38">
<primary>Java Web Console</primary>
<secondary>changing properties of</secondary>
<tertiary>logging level</tertiary>
</indexterm>You use
logging properties to configure the logging service. The console log files are created in the <filename>/var/log/webconsole/console</filename> directory. The <literal>logging.default.level</literal> property determines  which messages are logged. The console
logs
provide
valuable information for troubleshooting problems. The following property
values are available
for <literal>logging.default.level</literal>:</para>
<itemizedlist>
<listitem>
<para>
<literal>all</literal>
</para>
</listitem>
<listitem>
<para>
<literal>info</literal>
</para>
</listitem>
<listitem>
<para>
<literal>off</literal>
</para>
</listitem>
<listitem>
<para>
<literal>severe</literal>
</para>
</listitem>
<listitem>
<para>
<literal>warning</literal>
</para>
</listitem>
</itemizedlist>
<para>See <olink remap="internal" targetdoc="chapter-3.xml" targetptr="eyamu">Example 3–2</olink> for an example that shows how
to change the logging level.</para>
</listitem>
<listitem>
<para>
<emphasis role="strong">Auditing implementation</emphasis>
</para>
<para>
<indexterm xml:id="indexterm-39">
<primary>changing Java Web Console properties</primary>
<secondary>choosing an auditing implementation</secondary>
</indexterm>
<indexterm xml:id="indexterm-40">
<primary>auditing implementation</primary>
<secondary>Java Web Console</secondary>
</indexterm>
<indexterm xml:id="indexterm-41">
<primary>Java Web Console</primary>
<secondary>changing properties of</secondary>
<tertiary>auditing implementation</tertiary>
</indexterm>Auditing
is the process of generating and logging security-related management events.
An event signifies that a specific user has updated the management information
on a system.  The auditing implementation is used by  services and
applications that generate audit events. The following audit events are defined
by the web console:</para>
<itemizedlist>
<listitem>
<para>Login</para>
</listitem>
<listitem>
<para>Logout</para>
</listitem>
<listitem>
<para>Role assumption</para>
</listitem>
<listitem>
<para>Authorization</para>
</listitem>
</itemizedlist>
<para>When audit events
occur, a record of the event is made in an audit log. The location of the
audit log varies with the auditing implementation that is in use. The web
console's auditing service uses an auditing implementation that is provided
by the underlying operating system.</para>
<para>The web console supports three auditing implementations: <literal>Solaris</literal>, <literal>Log</literal>, and <literal>None</literal>. You
can select an auditing implementation by specifying one of these keywords
for the value of the <literal>audit.default.type</literal> configuration property.
Only one auditing implementation is in effect at a time. </para>
<para>The supported auditing implementation types are:</para>
<itemizedlist>
<listitem>
<para>
<literal>Solaris</literal>
</para>
<para>The <literal>Solaris</literal>implementation is the default..
This implementation supports the BSM auditing mechanism. The auditing mechanism
writes audit records into a system file in the <filename>/var/audit</filename> directory.</para>
<para>You
can display the records with the <command>praudit</command> command. For events
to be captured, you must enable the BSM auditing mechanism on the system.
In addition, the <filename>/etc/security/audit_control</filename> file must
contain entries that indicate which events should be generated. You must set
the <literal>lo</literal> event as the flag option to see login and logout
events for each user. For more information, see the <olink remap="external" targetdoc="819-2240" targetptr="praudit-1m">
<citerefentry>
<refentrytitle>praudit</refentrytitle>
<manvolnum>
1M
</manvolnum>
</citerefentry>
</olink> and <olink remap="external" targetdoc="819-2240" targetptr="bsmconv-1m">
<citerefentry>
<refentrytitle>bsmconv</refentrytitle>
<manvolnum>
1M
</manvolnum>
</citerefentry>
</olink> man pages and <olink remap="external" targetdoc="819-3321" targetptr="audittm-1">Part VII, <citetitle remap="chapter">Solaris Auditing,</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
</listitem>
<listitem>
<para>
<literal>Log</literal>
</para>
<para>You can configure this
implementation to write to the system's <filename>syslog</filename> service.
Audit messages are written to the console log if the logging service has been
enabled at the <literal>info</literal> level. See <olink remap="internal" targetdoc="chapter-3.xml" targetptr="eyamu">Example 3–2</olink> for more information.</para>
</listitem>
<listitem>
<para>
<literal>None</literal>
</para>
<para>
<indexterm xml:id="indexterm-42">
<primary>audit events</primary>
<secondary>Java Web Console</secondary>
</indexterm>No audit events are generated. Audit messages
are written to the debug
trace  log, if enabled.</para>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<para>See <olink remap="internal" targetdoc="chapter-3.xml" targetptr="eyamv">Example 3–5</olink> for an example of specifying the
auditing implementation.</para>
<sect2>
<title/>
<task id="eyame">

<title>How to Change Java Web Console Properties</title>
<indexterm xml:id="indexterm-43">
<primary>Java Web Console</primary>
<secondary>configuring properties</secondary>
</indexterm>
<procedure>
<step>
<para>Become superuser or assume an equivalent role.</para>
<para>Roles
contain authorizations and privileged commands. For more information about
roles, see <olink remap="external" targetdoc="819-3321" targetptr="rbactask-15">
<citetitle remap="section">Configuring RBAC (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
</step>
<step>
<para>Depending on which Solaris release you are running, change the
selected property value
as follows:</para>
<stepalternatives>
<step>
<para>If you are running at least the Solaris
Express 5/06 release, use this command:</para>
<screen># <userinput>wcadmin add -p -a console <replaceable>name=value</replaceable>
</userinput>
</screen>
<variablelist>
<varlistentry>
<term>
<option>
p</option>
</term>
<listitem>
<para>Specifies that the object type is a property.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<option>
a console</option>
</term>
<listitem>
<para>Specifies that the property changes are for the application
named <literal>console</literal>. The <option>
a console</option> option must
always be used when you are changing console properties.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<replaceable>name=value</replaceable>
</term>
<listitem>
<para>Specifies the property name and the new value for that property.</para>
</listitem>
</varlistentry>
</variablelist>
</step>
<step>
<para>If you are <emphasis>not</emphasis> running at least
the Solaris Express 5/06 release, use this command:</para>
<screen># <userinput>smreg add -p -c <replaceable>name=value</replaceable>
</userinput>
</screen>
</step>
</stepalternatives>
</step>
<step performance="optional">

<para>Reset a console property to its default
value.</para>
<stepalternatives>
<step>
<para>If you are running at least the Solaris
Express 5/06 release, use this command:</para>
<screen># <userinput>wcadmin remove -p -a console <replaceable>name</replaceable>
</userinput>
</screen>
</step>
<step>
<para>If you are <emphasis>not</emphasis> running at least
the Solaris Express 5/06 release,  use this command:</para>
<screen># <userinput>smreg remove -p -c <replaceable>name</replaceable>
</userinput>
</screen>
<variablelist>
<varlistentry>
<term>
<option>
p</option>
</term>
<listitem>
<para>Specifies that the object type is a property.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<option>
c</option>
</term>
<listitem>
<para>Specifies that the property changes are for the console application.
The <option>
c</option> option must always be used when you are changing console
properties.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<replaceable>name=value</replaceable>
</term>
<listitem>
<para>Specifies the property name and the new value for that property.</para>
</listitem>
</varlistentry>
</variablelist>
</step>
</stepalternatives>
</step>
</procedure>
<example xml:id="eyamm">

<title>Changing the Java Web Console's Session Timeout Property</title>
<para>
<indexterm xml:id="indexterm-44">
<primary>session timeout period</primary>
<secondary>changing Java Web Console properties</secondary>
</indexterm>
<indexterm xml:id="indexterm-45">
<primary>changing</primary>
<secondary>Java Web Console properties</secondary>
<tertiary>session timeout period</tertiary>
</indexterm>This example shows how to set the session time out value to 5
minutes.</para>
<screen># <userinput>wcadmin add -p -a console session.timeout.value=5</userinput>
</screen>
</example>
<example xml:id="eyamu">

<title>Configuring the Java Web Console Logging Level</title>
<para>This example shows you how to set the logging level to <literal>all</literal>.</para>
<screen># <userinput>wcadmin add -p -a console logging.default.level=all</userinput>
</screen>
</example>
<example xml:id="gdhbw">

<title>Resetting the Java Web Console Logging Level to the Default Value</title>
<para>This example shows how to reset the logging level to the default.</para>
<screen># <userinput>wcadmin remove -p -a console logging.default.level</userinput>
</screen>
</example>
<example xml:id="gdhhd">

<title>Specifying a Java Version for the Java Web Console</title>
<para>This example shows how to set the Java version for the console.</para>
<screen># <userinput>wcadmin add -p -a console java.home=/usr/java</userinput>
</screen>
</example>
<example xml:id="eyamv">

<title>Choosing an Auditing Implementation for the Java Web Console</title>
<para>This example shows you how to set the auditing implementation to <literal>None</literal>.</para>
<screen># <userinput>wcadmin add -p -a console audit.default.type=None</userinput>
</screen>
</example>
</task>
</sect2>
<sect2 xml:id="frjpw">
<title>Java Web Console User Identity</title>
<para>
<indexterm xml:id="indexterm-46">
<primary>
<literal>noaccess</literal> user/group</primary>
<secondary>and Java Web Console</secondary>
</indexterm>
<indexterm xml:id="indexterm-47">
<primary>Java Web Console</primary>
<secondary>changing the user identity that runs the console</secondary>
</indexterm>
<indexterm xml:id="indexterm-48">
<primary>Java Web Console</primary>
<secondary>
<literal>noaccess</literal> user identity</secondary>
</indexterm>By default, the web console runs under the user
identity, <literal>noaccess</literal>. However, some system configurations
disable the <literal>noaccess</literal> user, or set the login shell for the <literal>noaccess</literal> user to an invalid entry to make this user identity unusable. </para>
<para>When the <literal>noaccess</literal> user
is not usable, the web console server cannot be started or configured, so
an alternative user identity must be specified. Ideally, the user identity
should be changed only once, before the console server is configured at initial
startup. While the identity can be changed after configuration is completed,
the changes that then must be made to the console infrastructure are complex
and time consuming.</para>
<para>You can configure the web console to run under
an alternative non-root user identity by using either of the following commands: </para>
<screen># <userinput>smcwebserver -U <replaceable>username</replaceable>
</userinput>
</screen>
<para>This command starts the web console server under the specified user
identity. The web console server runs under this identity each time the server  is subsequently
started.</para>
<para>If
you are running at least the <emphasis role="strong">Solaris
Express 5/06 release, </emphasis> use this command:</para>
<screen># <userinput>wcadmin add -p -a console com.sun.web.console.user=<replaceable>username</replaceable>
</userinput>
</screen>
<para>If you are <emphasis>not</emphasis> running
at least the Solaris Express 5/06 release, use this command:</para>
<screen># <userinput>smreg add -p -c com.sun.web.console.user=<replaceable>username</replaceable>
</userinput>
</screen>
<para>This command causes the web console server to run under the specified  user identity the next time the server starts, and each time the server is started.</para>
</sect2>
<sect2 xml:id="faaor">
<title>Using the Console Debug Trace Log</title>
<para>By default, the console does
not log debug messages. You can turn on debug logging to help troubleshoot
console service problems.</para>
<para>Use the <literal>debug.trace.level</literal> property
to turn on debug logging by setting the property to a value other than 0.
Available choices include the following:</para>
<itemizedlist>
<listitem>
<para>
<emphasis role="strong">1</emphasis> - Use this setting to
record potentially severe errors.</para>
</listitem>
<listitem>
<para>
<emphasis role="strong">2</emphasis> - Use this setting to
record important messages, as well as error messages of the 1 level.</para>
</listitem>
<listitem>
<para>
<emphasis role="strong">3</emphasis> - Use this setting to
record all possible messages with full details.</para>
</listitem>
</itemizedlist>
<para>By default, the debug
trace  log is created in the <filename>/var/log/webconsole</filename> directory and is named <filename>console_debug_log</filename>. Historical logs,
such as <filename>console_debug_log.1</filename> and <filename>console_debug_log.2</filename> might also exist in this directory.  There can be up to five (default setting) historical
logs stored in this directory before the earliest log is deleted and a new
log is created.</para>
<example xml:id="faaoq">

<title>Setting the Console Debug Trace Log Level</title>
<para>Use the following command to set the debug trace  log level to 3.</para>
<para>For the <emphasis role="strong">Solaris Express 5/06</emphasis> release, use this command:</para>
<screen># <userinput>wcadmin add -p -a console debug.trace.level=3</userinput>
</screen>
<para>If
you are <emphasis>not</emphasis> running at least the Solaris
Express 5/06 release, use this command:<emphasis role="strong">
</emphasis>
</para>
<screen># <userinput>smreg add -p -c debug.trace.level=3</userinput>
</screen>
</example>
<example xml:id="faaox">

<title>Checking the Status of the <command>debug.trace.level</command> Property</title>
<para>To check the status of the <literal>debug.trace.level</literal> property,
use the <command>wcadmin
list</command> or <command>smreg list</command> command.</para>
<para>
<emphasis role="strong">Solaris Express
5/06:</emphasis>
</para>
<screen># <userinput>wcadmin list -p | grep "debug.trace.level"</userinput>
</screen>
<para>If you are <emphasis>not</emphasis> running
at least the Solaris Express 5/06 release, use this command:</para>
<screen># <userinput>smreg list -p | grep "debug.trace.level"</userinput>
</screen>
</example>
</sect2>
</sect1>
<sect1 xml:id="eyams">
<title>Installing the Java Web Console Software</title>
<para>
<indexterm xml:id="indexterm-49">
<primary>Java Web Console installation</primary>
</indexterm>
<indexterm xml:id="indexterm-50">
<primary>installing Java Web Console</primary>
<secondary>running the <command>setup</command> script</secondary>
</indexterm>
<indexterm xml:id="indexterm-51">
<primary>
<command>setup</command> script</primary>
<secondary>Java Web Console</secondary>
</indexterm>The Java Web Console is automatically installed as part of
the Solaris software installation. The following information is provided if
you need to manually install or uninstall the web console.</para>
<sect2>
<title/>
<task id="eyamt">

<title>How to Install the Java Web Console Software</title>
<tasksummary>
<para>You install the Java Web Console software by running the <command>setup</command> script.
The web console packages are installed into a directory layout that is based
on the J2EE web application structure. For the Solaris software, the default
installation is located at <filename>/usr/share/webconsole</filename>, which
contains files for the console framework and services. The <filename>webapps/console</filename> subdirectory
contains files that are relevant to the web console application, which is
the user-visible part of the product. The <command>setup</command> command
is located in the directory where the software was extracted.</para>
<note>

<para>If you want to save the installation
output to a log file, use the technique shown in <olink remap="internal" targetdoc="chapter-3.xml" targetptr="eyamr" type="auto-generated">Example 3–8</olink>
</para>
</note>
</tasksummary>
<procedure>
<step>
<para>Become superuser or assume an equivalent role.</para>
<para>Roles
contain authorizations and privileged commands. For more information about
roles, see <olink remap="external" targetdoc="819-3321" targetptr="rbactask-15">
<citetitle remap="section">Configuring RBAC (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
</step>
<step>
<para>Install the Java Web Console software.</para>
<screen># <userinput>/<replaceable>extracted-software-location</replaceable>/setup [-h] [-n] [-u] [-G] [-f]</userinput>
</screen>
<variablelist>
<varlistentry>
<term>
<option>
h</option>
</term>
<listitem>
<para>Specifies to print a usage statement.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<option>
n</option>
</term>
<listitem>
<para>Specifies to not start the server at the end of installation. Note that when you do not start
the server at the end of installation, the server configuration is not completed.
Configuration will automatically be completed the next time the server starts.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<option>
u</option>
</term>
<listitem>
<para>Specifies to uninstall the Java Web Console software.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<option>
G</option> (Starting with the <emphasis role="strong">Solaris Express
7/06</emphasis> release)</term>
<listitem>
<para>Specifies to install in the global zone only. When used in
the global zone, the software is installed to the global zone only and is
not propagated to any existing or yet-to-be-created non-global zone. When <command>setup</command> is used in a non-global zone, the software is always installed
to the non-global zone only. This parameter is identical to the <option>
G</option> option
of the <command>pkgadd</command> command. When the <option>
G</option> option
is not used when the software is installed into the global zone, the software
is propagated to non-global zones.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>
<option>
f</option>
</term>
<listitem>
<para>When
used with the <option>
u</option> option to uninstall the Java Web Console
software, specifies
to uninstall the  Java and <trademark>JavaHelp </trademark> software  forcibly, if the software
was installed by using the <command>setup</command> command. By default you are prompted to
confirm removal of each of these packages..</para>
<para>When used without
the <option>
u</option> option, the <option>
f</option> option does a silent
install. You are not prompted to confirm upgrade from an earlier version,
and not prompted to confirm upgrade of the Java software if it does not satisfy
the minimum requirements.  By default, you are prompted to confirm all upgrades.</para>
</listitem>
</varlistentry>
</variablelist>
</step>
</procedure>
<example xml:id="eyamr">

<title>Installing the Java Web Console Software</title>
<para>This example shows you how to install the console software<filename>
</filename> from a directory where the console
software was extracted. The output from the <command>setup</command> script
is directed to a log file.</para>
<screen>
</screen>
<screen># <userinput>/usr/new-console/setup | tee console_install_log</userinput>
Copyright 2006 Sun Microsystems, Inc.  All rights reserved.
Use is subject to license terms.

Installation of &lt;SUNWmctag&gt; was successful.
.
.
.
.
Installation of &lt;SUNWmcosx&gt; was successful.

Installing man pages ...

Installation complete.


Starting Sun Java(TM) Web Console Version <replaceable>version</replaceable> ...
The console is running.</screen>
</example>
</task>
</sect2>
<sect2>
<title/>
<task id="eyamp">

<title>How to Remove the Java Web Console Software</title>
<taskprerequisites>

<para>
<indexterm xml:id="indexterm-52">
<primary>removing Java Web Console software</primary>
</indexterm>
<indexterm xml:id="indexterm-53">
<primary>uninstalling</primary>
<secondary>Java Web Console</secondary>
</indexterm>
<indexterm xml:id="indexterm-54">
<primary>Java Web Console</primary>
<secondary>removing software</secondary>
</indexterm>
<indexterm xml:id="indexterm-55">
<primary>Java Web Console</primary>
<secondary>uninstalling</secondary>
</indexterm>You must not be in any of the following directories
or their subdirectories when you uninstall the Java Web Console software:</para>
<itemizedlist>
<listitem>
<para>
<filename>/usr/lib/webconsole</filename>(If you are <emphasis>not</emphasis> running
at least the Solaris Express 5/06 release.))</para>
</listitem>
<listitem>
<para>
<filename>/usr/share/webconsole</filename>
</para>
</listitem>
<listitem>
<para>
<filename>/etc/webconsole</filename> (Starting with the Solaris Express 5/06 release)</para>
</listitem>
<listitem>
<para>
<filename>/var/webconsole</filename> (Starting
with the Solaris Express 5/06 release)</para>
</listitem>
<listitem>
<para>
<filename>/var/opt/webconsole</filename>
</para>
</listitem>
<listitem>
<para>
<filename>/var/log/webconsole</filename>
</para>
</listitem>
</itemizedlist>
<para>If you do not take this precaution, the software is not completely removed.</para>
<note>

<para>If
you are running a system that implements Solaris zones, you must disable the
console server in the Service Management Facility in all zones before you
remove the console software.</para>
</note>
</taskprerequisites>
<procedure>
<step>
<para>Become superuser or assume an equivalent role.</para>
<para>Roles
contain authorizations and privileged commands. For more information about
roles, see <olink remap="external" targetdoc="819-3321" targetptr="rbactask-15">
<citetitle remap="section">Configuring RBAC (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
</step>
<step>
<para>If you are
running at least the Solaris
Express 5/06 release, disable the console server in SMF.</para>
<screen># <userinput>svcadm disable system/webconsole:console</userinput>
</screen>
</step>
<step>
<para>Change to a non-console directory.</para>
<screen># <userinput>cd /</userinput>
</screen>
</step>
<step>
<para>Remove the Java Web Console software.</para>
<para>
<emphasis role="strong">Solaris Express
5/06:</emphasis>
</para>
<screen># <userinput>
<replaceable>
</replaceable>/usr/share/webconsole/bin/setup -u</userinput>
</screen>
<para>If
you are <emphasis>not</emphasis> running at least the Solaris Express 5/06
release, use this command:</para>
<screen># <userinput>/usr/lib/webconsole/setup -u</userinput>
</screen>
</step>
</procedure>
<example xml:id="eyaof">

<title>Removing the Java Web Console Software</title>
<para>This example shows how to remove the Java Web Console software, starting with the Solaris
Express 5/06 release.</para>
<screen># <userinput>svcadm disable system/webconsole:console</userinput>
# <userinput>cd /</userinput>
# <userinput>/usr/share/webconsole/bin/setup -u</userinput>

Shutting down Sun Java(TM) Web Console Version <replaceable>version</replaceable> ...
The console is stopped.

Removing "console" console instance...

Removing SUNWmcosx ...

Removal of &lt;SUNWmcosx&gt; was successful.
Removing SUNWmcos ...

Removal of &lt;SUNWmcos&gt; was successful.
Removing SUNWmcon ...

Removal of &lt;SUNWmcon&gt; was successful.
Removing SUNWmconr ...

Removal of &lt;SUNWmconr&gt; was successful.
Removing SUNWmctag ...

Removal of &lt;SUNWmctag&gt; was successful.

Uninstallation complete.</screen>
</example>
</task>
</sect2>
</sect1>
<sect1 xml:id="gdkcl">
<title>Troubleshooting
the Java Web Console Software (Task Map)</title>
<informaltable frame="all">
<tgroup cols="3" colsep="1" rowsep="1">
<colspec colwidth="33*"/>
<colspec colwidth="33*"/>
<colspec colwidth="33*"/>
<thead>
<row>
<entry>
<para>Task</para>
</entry>
<entry>
<para>Description</para>
</entry>
<entry>
<para>For Instructions</para>
</entry>
</row>
</thead>
<tbody>
<row>
<entry>
<para>Check to determine if the console is running and enabled.</para>
</entry>
<entry>
<para>Use the <command>smcwebserver</command>, <command>wcadmin</command>,
and <command>svcs</command> commands to check if the console is running and
enabled. This information is useful for troubleshooting problems.</para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdbnk">How to Check if the Console is Running and Enabled</olink>
</para>
</entry>
</row>
<row>
<entry>
<para>List console resources and properties.</para>
</entry>
<entry>
<para>You might need to gather information about the console resources and
properties for troubleshooting purposes.</para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdbnv">How to List Console Resources and Properties</olink>
</para>
</entry>
</row>
<row>
<entry>
<para>Determine if an application is a legacy application.</para>
</entry>
<entry>
<para>Current applications are registered and deployed with a single command
while the console server is running. Legacy applications require the console
server to be stopped during registration. If you need to register or unregister
an application, you must first determine if the application is a legacy application</para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdjpi">How to Determine if an Application is a Legacy Application</olink>
</para>
</entry>
</row>
<row>
<entry>
<para>List all registered applications.</para>
</entry>
<entry>
<para>You can list all applications that are registered with the Java Web
Console. Listing all registered applications provides you with information
that can be helpful in troubleshooting situations.</para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="gcrqd">How to List Registered Applications</olink>
</para>
</entry>
</row>
<row>
<entry>
<para>Register a legacy application with the Java Web Console.</para>
</entry>
<entry>
<para>If you need to use a legacy application, you must first register the
application with the Java Web Console first.</para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdcud">How to Register a Legacy Application With the Java Web Console</olink>
</para>
</entry>
</row>
<row>
<entry>
<para>Unregister a legacy application from the Java Web Console.</para>
</entry>
<entry>
<para>If you do not want a legacy application registered with the Java Web
Console, follow the procedure to unregister the legacy application.</para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdctn">How to Unregister a Legacy Application From the Java Web Console</olink>
</para>
</entry>
</row>
<row>
<entry>
<para>Register a current application with the Java Web Console.</para>
</entry>
<entry>
<para>Before using a new application, you need to register the application
with the Java Web Console.</para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="gcrqq">How to Register a Current Application With the Java Web Console</olink>
</para>
</entry>
</row>
<row>
<entry>
<para>Unregister a current application from the Java Web Console.</para>
</entry>
<entry>
<para>In some situations, you might need to unregister a current application
from the Java Web Console.</para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="gcrsu">How to Unregister a Current Application from the Java Web Console</olink>
</para>
</entry>
</row>
<row>
<entry>
<para>Enable remote Access to the Java Web Console.</para>
</entry>
<entry>
<para>You can enable remote access only to the console, while leaving the
other access restrictions in place.</para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdhgt">How to Enable Remote Access to the Java Web Console</olink>
</para>
</entry>
</row>
<row>
<entry>
<para>Change the console's internal passwords</para>
</entry>
<entry>
<para>The Java Web Console uses internal passwords. To reduce the possibility
of a security breach, you can change these passwords.</para>
</entry>
<entry>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdcsa">How to Change the Console's Internal Passwords</olink>
</para>
</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</sect1>
<sect1 xml:id="ewppf">
<title>Troubleshooting the Java Web Console Software</title>
<para>
<indexterm xml:id="indexterm-56">
<primary>Java Web Console</primary>
<secondary>troubleshooting</secondary>
</indexterm>
<indexterm xml:id="indexterm-57">
<primary>troubleshooting</primary>
<secondary>Java Web Console</secondary>
</indexterm>The following information is provided to help you troubleshoot
any problems that you might encounter when installing or using the Java Web Console software.</para>
<sect2 xml:id="gdbnh">
<title>Checking Console Status and Properties</title>
<indexterm xml:id="indexterm-58">
<primary>Java Web Console</primary>
<secondary>status</secondary>
</indexterm>
<indexterm xml:id="indexterm-59">
<primary>Java Web Console</primary>
<secondary>properties</secondary>
</indexterm>
<para>You can use the <command>smcwebserver</command>, <command>wcadmin</command>,
and <command>svcs</command> commands to get different types of information
about the console, which might be useful for troubleshooting problems.</para>
<task xml:id="gdbnk">
<title>How to Check if the Console is Running and Enabled</title>
<procedure>
<step>
<para>Become superuser or assume an equivalent role.</para>
<para>Roles
contain authorizations and privileged commands. For more information about
roles, see <olink remap="external" targetdoc="819-3321" targetptr="rbactask-15">
<citetitle remap="section">Configuring RBAC (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
</step>
<step>
<para>Check the server status.</para>
<screen># <userinput>smcwebserver status</userinput>
Sun Java(TM) Web Console is running</screen>
</step>
<step>
<para>
<emphasis role="strong">Solaris Express 5/06:</emphasis> Check the console's SMF
status and enabled state.</para>
<screen># <userinput>svcs -l system/webconsole:console</userinput>
fmri         svc:/system/webconsole:console
name         java web console
enabled      true
state        online
next_state   none
state_time   Wed 17 May 2006 01:22:32 PM EDT
logfile      /var/svc/log/system-webconsole:console.log
restarter    svc:/system/svc/restarter:default
contract_id  129
dependency   require_all/none svc:/milestone/multi-user (online)</screen>
<para>If you start and stop the server with <command>smcwebserver</command> commands
without enabling and disabling, the <literal>enabled</literal> property might
display as <literal>false (temporary)</literal> or <literal>true (temporary)</literal>.</para>
</step>
</procedure>
</task>
<task xml:id="gdbnv">
<title>How to List Console Resources and Properties</title>
<procedure>
<step>
<para>Become superuser or assume an equivalent role.</para>
<para>Roles
contain authorizations and privileged commands. For more information about
roles, see <olink remap="external" targetdoc="819-3321" targetptr="rbactask-15">
<citetitle remap="section">Configuring RBAC (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
</step>
<step>
<para>List the console's resources and properties.</para>
<para>If you
are running at least the <emphasis role="strong">Solaris Express 5/06</emphasis> release, use this command:</para>
<screen># <userinput>wcadmin list</userinput>

Deployed web applications (application name, context name, status):
 
    console      ROOT            [running]
    console      com_sun_web_ui  [running]
    console      console         [running]
    console      manager         [running]
    legacy       myapp           [running]
 
Registered jar files (application name, identifier, path):
 
    console  audit_jar     /usr/lib/audit/Audit.jar
    console  console_jars  /usr/share/webconsole/lib/*.jar
    console  jato_jar      /usr/share/lib/jato/jato.jar
    console  javahelp_jar  /usr/jdk/packages/javax.help-2.0/lib/*.jar
    console  shared_jars   /usr/share/webconsole/private/container/shared/lib/*.jar
 
Registered login modules (application name, service name, identifier):
 
    console  ConsoleLogin  userlogin
    console  ConsoleLogin  rolelogin
 
Shared service properties (name, value):
 
    <emphasis role="strong">ENABLE            yes</emphasis>
    java.home         /usr/jdk/jdk1.5.0_06</screen>
<note>

<para>This <property>ENABLE</property> property is ignored because SMF
uses its own enabled property, which is shown in the previous procedure. The <property>ENABLE</property> property is used on older Solaris systems where the console
server is not managed by SMF.</para>
</note>
<para>If you are <emphasis>not </emphasis> running
at least the Solaris Express 5/06 release, use this command:</para>
<screen># <userinput>smreg list</userinput>

 The list of registered plugin applications:

        com.sun.web.console_2.2.4       /usr/share/webconsole/console
        com.sun.web.ui_2.2.4    /usr/share/webconsole/com_sun_web_ui
        com.sun.web.admin.example_2.2.4 /usr/share/webconsole/example

    The list of registered jar files:

         com_sun_management_services_api.jar scoped to ALL
         com_sun_management_services_impl.jar scoped to ALL
         com_sun_management_console_impl.jar scoped to ALL
         com_sun_management_cc.jar scoped to ALL
         com_sun_management_webcommon.jar scoped to ALL
         com_iplanet_jato_jato.jar scoped to ALL
         com_sun_management_solaris_impl.jar scoped to ALL
         com_sun_management_solaris_implx.jar scoped to ALL

    The list of registered login modules for service ConsoleLogin:

        com.sun.management.services.authentication.PamLoginModule optional
                use_first_pass="true" commandPath="/usr/lib/webconsole";
        com.sun.management.services.authentication.RbacRoleLoginModule requisite
        force_role_check="true" commandPath="/usr/lib/webconsole";

    The list of registered server configuration properties:

        session.timeout.value=15
        authentication.login.cliservice=ConsoleLogin
        logging.default.handler=com.sun.management.services.logging.ConsoleSyslogHandler
        logging.default.level=info
        logging.default.resource=com.sun.management.services.logging.resources.Resources
        logging.default.filter=none
        logging.debug.level=off
        audit.default.type=None
        audit.None.class=com.sun.management.services.audit.LogAuditSession
        audit.Log.class=com.sun.management.services.audit.LogAuditSession
        audit.class.fail=none
        authorization.default.type=SolarisRbac
        authorization.SolarisRbac.class=
          com.sun.management.services.authorization.SolarisRbacAuthorizationService
        authorization.PrincipalType.class=
          com.sun.management.services.authorization.PrincipalTypeAuthorizationService
        debug.trace.level=0
        debug.trace.options=m
        debug.trace.maxsize=5
        debug.trace.maxfiles=5
        debug.trace.stacksize=10
        category.name.1=Systems
        category.name.2=Desktop Applications
        category.name.3=Storage
        category.name.4=Other
        category.name.5=Services
        java.home=/usr/j2se
        javahelp.home=/usr/jdk/packages/javax.help-2.0
        com.sun.web.console.user=noaccess

    No environment properties have been registered.</screen>
</step>
</procedure>
</task>
</sect2>
<sect2 xml:id="gdhhr">
<title>Problems Accessing the Console</title>
<para>Problems with console access might indicate that the console server
is not enabled, or security settings are restrictive. See <olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdbnh">Checking Console Status and Properties</olink> and <olink remap="internal" targetdoc="chapter-3.xml" targetptr="ewpla" type="auto-generated">Java Web Console Security Considerations</olink> for
more information.</para>
</sect2>
<sect2 xml:id="gcrrb">
<title>Problems with Application
Registration</title>
<para>This section contains information about solving possible registration
problems with console applications. For information about a particular console
application, you should refer to the application's documentation.</para>
<note>

<para>Console applications typically are registered as part of their
installation process, so you should not normally need to register an application
yourself.</para>
</note>
<para>
<indexterm xml:id="indexterm-61">
<primary>legacy applications</primary>
<secondary>Java Web Console</secondary>
</indexterm>
<indexterm xml:id="indexterm-62">
<primary>Java Web Console</primary>
<secondary>legacy applications</secondary>
</indexterm>
<emphasis role="strong">Starting with the Solaris
Express 5/06 release</emphasis>, the web
console has changed the approach to application registration but can still
support applications that were developed for earlier versions of the console.
Current applications are registered and deployed with a single command while
the console server is running. Applications that were developed for the earlier
console are known as <emphasis>legacy</emphasis> applications, and require
the console server to be stopped during registration. If you need to register
or unregister an application, you must first determine if the application
is a legacy application, as described in the following procedure.</para>
<task xml:id="gdjpi">
<title>How to Determine if an Application is a Legacy Application</title>
<procedure>
<step>
<para>View the application's <filename>app.xml</filename> file.</para>
<para>The <filename>app.xml</filename> file is located in the application's <filename>WEB-INF</filename> directory.</para>
</step>
<step>
<para>Examine the <literal>registrationInfo</literal> tag in the <filename>app.xml</filename> file.</para>
<para>For a legacy application, the <literal>registrationInfo</literal> tag is a version 2.<replaceable>x</replaceable> . For example, <literal>registrationInfo version="2.2.4"</literal>.</para>
<para>For a current application,
the version in the <literal>registrationInfo</literal> tag is at least 3.0.
For example, <literal>registrationInfo version="3.0"</literal>.</para>
</step>
</procedure>
</task>
<task xml:id="gcrqd">
<title>How to List Registered Applications</title>
<procedure>
<step>
<para>Become superuser or assume an equivalent role.</para>
<para>Roles
contain authorizations and privileged commands. For more information about
roles, see <olink remap="external" targetdoc="819-3321" targetptr="rbactask-15">
<citetitle remap="section">Configuring RBAC (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
</step>
<step>
<para>List the registered applications.</para>
<para>If you are running
at least the Solaris Express
5/06 release, use this command:</para>
<screen># <userinput>wcadmin list -a</userinput>

Deployed web applications (application name, context name, status):
 
    console  ROOT            [running]
    console  com_sun_web_ui  [running]
    console  console         [running]
    console  manager         [running]
    legacy   myapp           [running]</screen>
<para>The command lists all the registered applications. Legacy applications
are listed with the application name <literal>legacy</literal>. See <olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdjpi">How to Determine if an Application is a Legacy Application</olink>.
All other listed applications are current applications, and would be registered
as described in <olink remap="internal" targetdoc="chapter-3.xml" targetptr="gcrqq">How to Register a Current Application With the Java Web Console</olink>.</para>
<para>If you are <emphasis>not </emphasis> running at least the Solaris Express 5/06 release, use this
command:</para>
<screen># <userinput>smreg list -a</userinput>

The list of registered plugin applications:

        com.sun.web.console_2.2.4       /usr/share/webconsole/console
        com.sun.web.ui_2.2.4    /usr/share/webconsole/com_sun_web_ui
        com.sun.web.admin.yourapp_2.2.4 /usr/share/webconsole/yourapp</screen>
</step>
</procedure>
</task>
<task xml:id="gdcud">
<title>How to Register a Legacy Application With the Java
Web Console</title>
<tasksummary>
<note>

<para>This procedure applies <emphasis>only</emphasis> to
those applications that are identified as legacy applications.</para>
<para>Use
this procedure under the following conditions:</para>
<itemizedlist>
<listitem>
<para>You are <emphasis>not</emphasis> running at least the Solaris
Express 5/06 release.</para>
</listitem>
<listitem>
<para>You are running <emphasis>at least </emphasis> the Solaris
Express 5/06 release, but you want to run a legacy application.</para>
</listitem>
</itemizedlist>
<para> See <olink remap="internal" targetdoc="chapter-3.xml" targetptr="gcrqq">How to Register a Current Application With the Java Web Console</olink> for the procedure that applies to registering
current applications. See also <olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdjpi">How to Determine if an Application is a Legacy Application</olink>.</para>
</note>
</tasksummary>
<procedure>
<step>
<para>Become superuser or assume an equivalent role.</para>
<para>Roles
contain authorizations and privileged commands. For more information about
roles, see <olink remap="external" targetdoc="819-3321" targetptr="rbactask-15">
<citetitle remap="section">Configuring RBAC (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
</step>
<step>
<para>Stop the web server.</para>
<screen># <userinput>smcwebserver stop</userinput>
</screen>
</step>
<step>
<para>Register the application.</para>
<screen># <userinput>smreg add -a <replaceable>/directory/containing/application-files</replaceable>
</userinput>
</screen>
<para>The <command>smreg</command> command manages the information in the
Java Web Console's registration table. This script also performs some additional
work to deploy the application.</para>
</step>
<step>
<para>Restart the web server.</para>
<screen># <userinput>smcwebserver start</userinput>
</screen>
</step>
</procedure>
<example>

<title>Registering a Legacy Application</title>
<para>This example shows how to register a legacy application whose files
are located in the <filename>/usr/share/webconsole/example</filename> directory.
Notice that for legacy applications, the console server must be stopped before
the application is registered, and started after the application is registered.
A warning given by <command>smreg</command> can be ignored because this application
is a legacy console application.</para>
<screen># <userinput>smcwebserver stop</userinput>
# <userinput>smreg add -a /usr/share/webconsole/example</userinput>

    Warning: smreg is obsolete and is preserved only for
    compatibility with legacy console applications. Use wcadmin instead.

    Type "man wcadmin" or "wcadmin --help" for more information.

Registering com.sun.web.admin.example_<replaceable>version</replaceable>.

# <userinput>smcwebserver start</userinput>
</screen>
</example>
</task>
<task xml:id="gdctn">
<title>How to Unregister a Legacy Application From the Java
Web Console</title>
<tasksummary>
<note>

<para>This procedure applies <emphasis>only</emphasis> to
those applications that are identified as legacy applications.</para>
<para>Use
this procedure under the following conditions:</para>
<itemizedlist>
<listitem>
<para>You are <emphasis>not</emphasis> running at least the Solaris
Express 5/06 release.</para>
</listitem>
<listitem>
<para>You are running <emphasis>at least </emphasis> the Solaris
Express 5/06 release, but you want to unregister a legacy application.</para>
</listitem>
</itemizedlist>
<para> See <olink remap="internal" targetdoc="chapter-3.xml" targetptr="gcrsu">How to Unregister a Current Application from the Java Web Console</olink> for the procedure that applies to unregistering
current applications. See also <olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdjpi">How to Determine if an Application is a Legacy Application</olink>.</para>
</note>
<para>
<indexterm xml:id="indexterm-66">
<primary>unregistering an application from the Java Web Console</primary>
</indexterm>
<indexterm xml:id="indexterm-67">
<primary>
<command>smreg</command> command</primary>
<secondary>Java Web Console</secondary>
</indexterm>If you do not want a particular legacy application to display
in the web console's launch page, but you do not want to uninstall the software,
you can use the <command>smreg</command> command to unregister the application.
See <olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdjpi">How to Determine if an Application is a Legacy Application</olink>.</para>
</tasksummary>
<procedure>
<step>
<para>Become superuser or assume an equivalent role.</para>
<para>Roles
contain authorizations and privileged commands. For more information about
roles, see <olink remap="external" targetdoc="819-3321" targetptr="rbactask-15">
<citetitle remap="section">Configuring RBAC (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
</step>
<step>
<para>Unregister an application.</para>
<screen># <userinput>smreg remove -a <replaceable>app-name</replaceable>
</userinput>
</screen>
</step>
</procedure>
<example>

<title>Unregistering a Legacy Application From the Java Web Console</title>
<para>This example shows how to unregister a legacy application  with the <replaceable>app-name</replaceable> <literal>com.sun.web.admin.example</literal>.</para>
<screen># <userinput>smreg remove -a com.sun.web.admin.example</userinput>

 Unregistering com.sun.web.admin.example_<replaceable>version</replaceable>.</screen>
</example>
</task>
<task xml:id="gcrqq">
<title>How to Register a Current Application With the Java
Web Console</title>
<tasksummary>
<para>
<emphasis role="strong">Solaris Express 5/06:</emphasis> This procedure has been
updated for console applications that can be registered and deployed without
stopping and starting the console server. See <olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdcud">How to Register a Legacy Application With the Java Web Console</olink> for the
registration procedure for legacy applications and all console applications,
if you are not running at least the Solaris Express 5/06 release. See also <olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdjpi">How to Determine if an Application is a Legacy Application</olink>.</para>
</tasksummary>
<procedure>
<step>
<para>Become superuser or assume an equivalent role.</para>
<para>Roles
contain authorizations and privileged commands. For more information about
roles, see <olink remap="external" targetdoc="819-3321" targetptr="rbactask-15">
<citetitle remap="section">Configuring RBAC (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
</step>
<step>
<para>Register and deploy the application.</para>
<screen>wcadmin deploy -a <replaceable>app_name</replaceable> -x <replaceable>app_context_name</replaceable> <replaceable>/full path/to/appname</replaceable>
</screen>
</step>
</procedure>
<example>

<title>Registering Current Applications</title>
<para>This example shows how to register and deploy an application that has
been developed or updated for the current web console.</para>
<screen># <userinput>wcadmin deploy -a newexample_1.0 -x newexample /apps/webconsole/newexample</userinput>
</screen>
</example>
</task>
<task xml:id="gcrsu">
<title>How to Unregister a Current Application from the Java
Web Console</title>
<tasksummary>
<para>
<emphasis role="strong">Solaris Express 5/06:</emphasis> This procedure is for updated
console applications, which can be unregistered and undeployed without stopping
and starting the console server. See <olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdcud">How to Register a Legacy Application With the Java Web Console</olink> for the registration
procedure for legacy applications and all console applications,
if you are not running at least the Solaris Express 5/06 release See <olink remap="internal" targetdoc="chapter-3.xml" targetptr="gcrqd">How to List Registered Applications</olink> and <olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdjpi">How to Determine if an Application is a Legacy Application</olink> to
determine if an application is a legacy or updated application.</para>
</tasksummary>
<procedure>
<step>
<para>Become superuser or assume an equivalent role.</para>
<para>Roles
contain authorizations and privileged commands. For more information about
roles, see <olink remap="external" targetdoc="819-3321" targetptr="rbactask-15">
<citetitle remap="section">Configuring RBAC (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
</step>
<step>
<para>Undeploy and unregister the application.</para>
<screen># <userinput>wcadmin undeploy -a newexample_1.0 -x newexample</userinput>
</screen>
</step>
</procedure>
</task>
</sect2>
</sect1>
<sect1 xml:id="ewpoy">
<title>Java Web Console Reference Information</title>
<indexterm xml:id="indexterm-70">
<primary>Java Web Console</primary>
<secondary>reference information</secondary>
</indexterm>
<para>This reference section includes the following topics:</para>
<itemizedlist>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="ewpla">Java Web Console Security Considerations</olink>
</para>
</listitem>
<listitem>
<para>
<olink remap="internal" targetdoc="chapter-3.xml" targetptr="ewplr">Specifying Authorizations With the <literal>authTypes</literal> Tag</olink>
</para>
</listitem>
</itemizedlist>
<sect2 xml:id="ewpla">
<title>Java Web Console Security Considerations</title>
<para>
<indexterm xml:id="indexterm-71">
<primary>security considerations</primary>
<secondary>Java Web Console</secondary>
</indexterm>
<indexterm xml:id="indexterm-72">
<primary>Java Web Console</primary>
<secondary>security considerations</secondary>
</indexterm>There are several security considerations to keep in mind when
you use applications that are in the Java Web Console. These security considerations
include the following:</para>
<itemizedlist>
<listitem>
<para>
<emphasis role="strong">Access to the Java Web Console</emphasis> –
Whether you can connect to the console through a browser.</para>
</listitem>
<listitem>
<para>
<emphasis role="strong">Access to applications</emphasis> –
Whether you can see a particular application in the Java Web Console's launch
page</para>
</listitem>
<listitem>
<para>
<emphasis role="strong">Application permissions</emphasis> –
The levels of permissions that you must have to run parts or all of an application</para>
</listitem>
<listitem>
<para>
<emphasis role="strong">Application access to remote systems</emphasis> –
How security credentials relate to remote systems</para>
</listitem>
<listitem>
<para>
<emphasis role="strong">Internal passwords used in the console</emphasis> — Changing
the default passwords that are used internally in the console, starting with
the Solaris Express 5/06 release.</para>
</listitem>
</itemizedlist>
<sect3 xml:id="gcnvf">
<title>Access
to the Java Web Console</title>
<para>
<indexterm xml:id="indexterm-73">
<primary>console access</primary>
<secondary>Java Web Console</secondary>
</indexterm>
<indexterm xml:id="indexterm-74">
<primary>Java Web Console</primary>
<secondary>access to console</secondary>
</indexterm>Permissions to the web console launcher application are usually
open so that any valid user can log in. However, you can restrict access to
the console by specifying the rights in the <literal>authTypes</literal> tag
in the web console's <filename>app.xml</filename> file, which is located in
the <filename>/usr/share/webconsole/webapps/console/WEB-INF</filename> directory.
For more information, see <olink remap="internal" targetdoc="chapter-3.xml" targetptr="ewplr">Specifying Authorizations With the <literal>authTypes</literal> Tag</olink>.</para>
<para>Some system configurations are set up to be very secure, so that attempts
to connect from a remote system to the URLs of the console or registered applications
are refused. If your system is configured to prevent remote access, when you
try to access the console as <literal>https://hostname.domain:6789</literal>,
your browser displays a message such as:</para>
<screen>Connect to hostname.domain:6789 failed (Connection refused)</screen>
<para>The SMF profile in effect on the system might be restricting
access. See <olink remap="external" targetdoc="chapter-14.xml" targetptr="fgoth">SMF Profiles</olink> for more information
about profiles. See <olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdhhu" type="auto-generated">Enabling Remote Access to the Java Web Console</olink> for a procedure to allow access
to the console from remote systems.</para>
</sect3>
<sect3 xml:id="ewplb">
<title>Access to Applications in the Java Web Console</title>
<para>
<indexterm xml:id="indexterm-75">
<primary>application access</primary>
<secondary>Java Web Console</secondary>
</indexterm>
<indexterm xml:id="indexterm-76">
<primary>Java Web Console</primary>
<secondary>access to applications</secondary>
</indexterm>After you successfully log in to the web console, you might not automatically
have access to all of the applications that are registered in that console . Typically, applications
are installed so that all users can see them in the console launch page. As an administrator,
you can grant and restrict access to applications. </para>
<para>To restrict
access to an application, specify the rights in the <literal>authTypes</literal> tag, which
is in the application's <filename>app.xml</filename> file.  You can find the
application's <filename>app.xml</filename> file in the <filename>
<replaceable>installation-location</replaceable>/WEB-INF/</filename> subdirectory. By default, this directory would
be located in <filename>/usr/share/webconsole/webapps/<replaceable>app-context-name</replaceable>/WEB-INF</filename>. For more information,
see <olink remap="internal" targetdoc="chapter-3.xml" targetptr="ewplr">Specifying Authorizations With the <literal>authTypes</literal> Tag</olink>.</para>
</sect3>
<sect3 xml:id="ewplg">
<title>Application Privileges</title>
<para>
<indexterm xml:id="indexterm-77">
<primary>application privileges</primary>
<secondary>Java Web Console</secondary>
</indexterm>
<indexterm xml:id="indexterm-78">
<primary>Java Web Console</primary>
<secondary>application privileges</secondary>
</indexterm>If a user
can see an application's link  on the Java Web Console's launch
page, that user can run that
application. However, an application might make additional authorization checks
based upon the authenticated user or role identity.  These checks are not
controlled by the <literal>authTypes</literal> tag, but are explicitly coded
into the application itself.  For example, an application might grant read
access to all authenticated users, but restrict update access to a few users
or a few roles.</para>
</sect3>
<sect3 xml:id="ewplm">
<title>Application Access to Remote Systems</title>
<para>
<indexterm xml:id="indexterm-79">
<primary>application access to remote systems</primary>
<secondary>Java Web Console</secondary>
</indexterm>
<indexterm xml:id="indexterm-80">
<primary>Java Web Console</primary>
<secondary>application access to remote systems</secondary>
</indexterm>Having all the appropriate credentials does not guarantee that
you can use an application to manage every system within the application's
scope of operation. Each system that you administer by using the Java Web
Console application has its own security domain. Having read-and-write permissions
on the web console system does not guarantee that those credentials are automatically
sufficient to administer any other remote system.</para>
<para>In general, access to remote systems depends on how the security is
implemented in the web application.  Typically, web applications make calls
to <emphasis>agents</emphasis> that perform actions on behalf of the applications.
These applications must be authenticated by the agents based on their web
console credentials and the credentials by which they are known on the agent
system. Depending upon how this agent authentication is done, an authorization
check might also be made on the agent itself, based upon this authenticated
identity.</para>
<para>For example, in web applications that use remote WBEM agents, authentication
typically uses the user or role identity that initially authenticated to the Java Web Console.
 If this authentication fails on that agent system, access to that system
is denied in the web application.  If authentication succeeds on that agent
system, access might still be denied if the agent makes an access control
check and denies access there. Most applications are written so that the authentication
and authorization checks on the agent never fail if you have been successfully
authenticated on the web console and assumed the correct role.</para>
</sect3>
<sect3 xml:id="gdcpc">
<title>Internal
Passwords Used in the Console</title>
<indexterm xml:id="indexterm-81">
<primary>Java Web Console</primary>
<secondary>internal passwords</secondary>
</indexterm>
<para>
<emphasis role="strong">Starting with the Solaris Express
5/06 release</emphasis>, the Java Web Console
uses several password-protected internal user names to perform administrative
tasks on the underlying web server, and to encrypt key store and trust store
files. The passwords are set to initial values to enable the console to be
installed. To reduce the possibility of a security breach, you should change
the passwords after installation. See <olink remap="internal" targetdoc="chapter-3.xml" targetptr="gdcso" type="auto-generated">Changing Internal Passwords for Java Web Console</olink>
</para>
</sect3>
</sect2>
<sect2 xml:id="ewplr">
<title>Specifying Authorizations With the <literal>authTypes</literal> Tag</title>
<para>
<indexterm xml:id="indexterm-82">
<primary>
<literal>authTypes</literal> tag</primary>
<secondary>Java Web Console</secondary>
</indexterm>
<indexterm xml:id="indexterm-83">
<primary>Java Web Console</primary>
<secondary>using <literal>authTypes</literal> tag</secondary>
</indexterm>
<indexterm xml:id="indexterm-84">
<primary>Java Web Console</primary>
<secondary>authorizing users of applications</secondary>
</indexterm>While most system management web applications
do not require any administrator intervention to use the <literal>authTypes</literal> tag, in some cases, you might
need to change the values of this tag. The <literal>authTypes</literal> tag contains a set of
information that describes the level of authorization that is required for
a user to view an application in the Java Web Console. The web
console determines if a user is authorized to see a particular application,
based on the 
authorization requirements
in the application's <filename>app.xml</filename> file. Each
application can determine whether a user must have proper authorization to
run the application. This determination might be made as part of the application
installation process. Or, you might need to supply the information, depending
on your own security requirements. The product documentation for the application
should contain the information that is necessary to determine whether you
need to specify a particular permission.</para>
<para>You can nest several  <literal>authType</literal> tags within the <literal>authTypes</literal> tag. The <literal>authTypes</literal> tag must contain at least one <literal>authType</literal> tag that provides
the following necessary information:</para>
<itemizedlist>
<listitem>
<para>Type of authorization check to perform</para>
</listitem>
<listitem>
<para>
<classname>Permission</classname> subclass name</para>
</listitem>
<listitem>
<para>Parameters that are required to instantiate the <classname>Permission</classname> subclass</para>
</listitem>
</itemizedlist>
<para>In the following example, the <literal>authType</literal> tag has one
attribute, <literal>name</literal>. The required <literal>name</literal> attribute
is the name of the authorization service type. Different authorization
types might require different values for the <literal>classType</literal> and <literal>permissionParam</literal> tags. </para>
<screen>&lt;authTypes&gt;
	&lt;authType name="SolarisRbac"&gt;
	    &lt;classType&gt;com.sun.management.solaris.RbacPermission&lt;/classType&gt;
	    &lt;permissionParam name="permission"&gt;solaris.admin.serialmgr.read&lt;/permissionParam&gt;
	&lt;/authType&gt;
&lt;/authTypes&gt;
</screen>
<para>The following table shows the tags that can be nested within an <literal>authType</literal> tag</para>
<table frame="topbot" xml:id="ewpll">

<title>Nested <literal>authTypes</literal> Tags</title>
<tgroup cols="3" colsep="0" rowsep="0">
<colspec colname="colspec6" colwidth="22.74*"/>
<colspec colname="colspec7" colwidth="22.74*"/>
<colspec colname="colspec8" colwidth="53.52*"/>
<thead>
<row rowsep="1">
<entry>
<para>Tag</para>
</entry>
<entry>
<para>Attribute</para>
</entry>
<entry>
<para>Description</para>
</entry>
</row>
</thead>
<tbody>
<row>
<entry>
<para>
<literal>classType</literal>
</para>
</entry>
<entry>
<para>
</para>
</entry>
<entry>
<para>The <literal>Permission</literal> subclass name. This tag is a required
tag.</para>
</entry>
</row>
<row>
<entry>
<para>
<literal>permissionParam</literal>
</para>
</entry>
<entry>
<para>
<literal>name</literal>
</para>
</entry>
<entry>
<para>The parameters that are required to create an instance of the class
specified by <literal>classType</literal>. </para>
</entry>
</row>
</tbody>
</tgroup>
</table>
<para>The <literal>authTypes</literal> tag and nested <literal>authType</literal> tags
are required elements in the <filename>app.xml</filename> file. If you want
to register an application that is available to anyone, specify the <literal>authType</literal> tag
with no content, as shown in the following example.</para>
<screen>&lt;authTypes&gt;
        &lt;authType name=""&gt;
            &lt;classType&gt;&lt;/classType&gt;
            &lt;permissionParam name=""&gt;&lt;/permissionParam&gt;
        &lt;/authType&gt;
&lt;/authTypes&gt;
</screen>
</sect2>
<sect2 xml:id="gdhhu">
<title>Enabling Remote Access to the Java Web Console</title>
<para>If you can only connect to the console by logging into the system that
is running the console, and then using the URL <literal>https://localhost:6789</literal>,
the system is using a configuration that prevents remote access. <emphasis role="strong">Starting with the Solaris Express 5/06 release</emphasis>, you can enable remote access only to the
console, while leaving the other access restrictions in place, by using the
following procedure:</para>
<task xml:id="gdhgt">
<title>How to Enable Remote Access to the Java Web Console</title>
<procedure>
<step>
<para>Become superuser or assume an equivalent role on the system where
the console is running.</para>
<para>Roles contain authorizations and privileged
commands. For more information about roles, see <olink remap="external" targetdoc="819-3321" targetptr="rbactask-15">
<citetitle remap="section">Configuring RBAC (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
</step>
<step>
<para>Set a property to allow the console server to respond to network
requests.</para>
<screen># <userinput>svccfg -s svc:/system/webconsole setprop options/tcp_listen = true</userinput>
# <userinput>svcadm refresh svc:/system/webconsole</userinput>
</screen>
</step>
<step>
<para>On the remote system, set your browser to not use a proxy for
the system that is running the console.</para>
<para>This procedure varies
with the browser. Consult the browser's online help or documentation for information
about setting a proxy.</para>
</step>
</procedure>
</task>
</sect2>
<sect2 xml:id="gdcso">
<title>Changing Internal Passwords for Java Web Console</title>
<para>
<emphasis role="strong">Starting with the Solaris Express
5/06 release,</emphasis> the console uses
some internal user names and passwords. The console's internal user names
and passwords are used only by the console framework, and are never used directly
by a user or system administrator. However, if the passwords were known, a
malicious user could potentially interfere with the console applications.
To reduce the possibility of such a security breach, you should change the
passwords. You do not need to remember the new passwords, because the software
uses them invisibly.</para>
<task xml:id="gdcsa">
<title>How to Change the Console's Internal Passwords</title>
<tasksummary>
<para>The passwords are known as the administrative password, keystore password,
and truststore password. You do not need to know the default initial values
in order to change the passwords. This procedure explains how to change all
three passwords with separate commands.</para>
</tasksummary>
<procedure>
<step>
<para>Become superuser or assume an equivalent role.</para>
<para>Roles
contain authorizations and privileged commands. For more information about
roles, see <olink remap="external" targetdoc="819-3321" targetptr="rbactask-15">
<citetitle remap="section">Configuring RBAC (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Security Services</citetitle>
</olink>.</para>
</step>
<step>
<para>Change the administrative password.</para>
<screen># <userinput>wcadmin password -a</userinput>
</screen>
<para>You are prompted to enter the new password twice. The password should
be 8 to 32 characters.</para>
</step>
<step>
<para>Change the key store password.</para>
<screen># <userinput>wcadmin password -k</userinput>
</screen>
<para>You are prompted to enter the new password twice. The password should
be 8 to 32 characters.</para>
</step>
<step>
<para>Change the trust store password.</para>
<screen># <userinput>wcadmin password -t</userinput>
</screen>
<para>You are prompted to enter the new password twice. The password should
be 8 to 32 characters.</para>
</step>
</procedure>
</task>
</sect2>
</sect1>
</chapter>
