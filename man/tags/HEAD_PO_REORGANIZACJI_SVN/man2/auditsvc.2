'\" te
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").  
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\" Copyright (c) 2005, Sun Microsystems, Inc.  All Rights Reserved.
.TH auditsvc 2 "31 Mar 2005" "SunOS 5.11" "System Calls"
.SH NAME
auditsvc \- write audit log to specified file descriptor
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR... ] \fIfile\fR... \fB-lbsm\fR \fB -lsocket \fR \fB -lnsl \fR  [ \fIlibrary\fR... ]
#include <sys/param.h>
#include <bsm/audit.h>

\fBint\fR \fBauditsvc\fR(\fBint\fR \fIfd\fR, \fBint\fR \fIlimit\fR);
.fi

.SH DESCRIPTION
.LP
The \fBauditsvc()\fR function specifies the audit log file to the kernel. The kernel writes audit records to this file until an exceptional condition occurs and then the call returns. The \fIfd\fR argument is a file descriptor that identifies the audit file. Applications
should open this file for writing before calling \fBauditsvc()\fR.
.LP
The \fIlimit\fR argument specifies the number of free blocks that must be available in the audit file system, and causes \fBauditsvc()\fR to return when the free disk space on the audit filesystem drops below this limit. Thus, the invoking program can take action to
avoid running out of disk space.
.LP
The \fBauditsvc()\fR function does not return until one of the following conditions occurs:
.RS +4
.TP
.ie t \(bu
.el o
The process receives a signal that is not blocked or ignored.
.RE
.RS +4
.TP
.ie t \(bu
.el o
An error is encountered writing to the audit log file.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The minimum free space (as specified by \fIlimit\fR), has been reached.
.RE
.SH RETURN VALUES
.LP
The \fBauditsvc()\fR function returns only on an error.
.SH ERRORS
.LP
The \fBauditsvc()\fR function will fail if:
.sp
.ne 2
.mk
.na
\fB\fBEAGAIN\fR\fR
.ad
.RS 15n
.rt  
The descriptor referred to a \fIstream\fR, was marked for System V-style non-blocking I/O, and no data could be written immediately.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEBADF\fR\fR
.ad
.RS 15n
.rt  
The \fIfd\fR argument is not a valid descriptor open for writing.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEBUSY\fR\fR
.ad
.RS 15n
.rt  
A second process attempted to perform this call.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEFBIG\fR\fR
.ad
.RS 15n
.rt  
An attempt was made to write a file that exceeds the process's file size limit or the maximum file size.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEINTR\fR\fR
.ad
.RS 15n
.rt  
The call is forced to terminate prematurely due to the arrival of a signal whose \fBSV_INTERRUPT\fR bit in \fBsv_flags\fR is set  (see \fBsigvec\fR(3UCB)). The \fBsignal\fR(3C) function sets this bit for any signal it catches.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 15n
.rt  
Auditing is disabled (see \fBauditon\fR(2)), or the \fIfd\fR argument does not refer to a file of an appropriate
type (regular files are always appropriate.)
.RE

.sp
.ne 2
.mk
.na
\fB\fBEIO\fR\fR
.ad
.RS 15n
.rt  
An I/O error occurred while reading from or writing to the file system.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOSPC\fR\fR
.ad
.RS 15n
.rt  
The user's quota of disk blocks on the file system containing the file has been exhausted; audit filesystem space is below the specified limit; or there is no free space remaining on the file system containing the file.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENXIO\fR\fR
.ad
.RS 15n
.rt  
A hangup occurred on the \fIstream\fR being written to.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEPERM\fR\fR
.ad
.RS 15n
.rt  
The {\fBPRIV_SYS_AUDIT\fR} privilege is not asserted in the effective set of the calling process.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEWOULDBLOCK\fR\fR
.ad
.RS 15n
.rt  
The file was marked for 4.2 BSD-style non-blocking I/O, and no data could be written immediately.
.RE

.SH USAGE
.LP
Only processes with appropriate privileges can execute this call successfully.
.SH ATTRIBUTES
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityObsolete
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.LP
\fBauditd\fR(1M), \fBbsmconv\fR(1M), \fBaudit\fR(2), \fBauditon\fR(2), \fBsigvec\fR(3UCB), \fBaudit.log\fR(4), \fBattributes\fR(5), \fBprivileges\fR(5)
.SH NOTES
.LP
The functionality described on this manual page is internal to \fBauditd\fR(1M) and might not be supported in a future release.
.LP
The functionality described on this man page is available only if the Basic Security Module (BSM) has been enabled. See \fBbsmconv\fR(1M) for more information.
