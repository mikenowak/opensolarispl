'\" te
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").  
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\" Copyright (c) 1998, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 1980 Regents of the University of California.  All rights reserved.  The Berkeley software License Agreement  specifies the terms and conditions for redistribution.
.TH vhangup 2 "19 Mar 1998" "SunOS 5.11" "System Calls"
.SH NAME
vhangup \- virtually "hangup" the current controlling terminal
.SH SYNOPSIS
.LP
.nf
#include <unistd.h> 

\fBvoid\fR \fBvhangup\fR(\fBvoid\fR);
.fi

.SH DESCRIPTION
.LP
The \fBvhangup()\fR function is used by the initialization process \fBinit\fR(1M) (among others) to ensure that users are given "clean" terminals
at login by revoking access of the previous users' processes to the terminal. To effect this, \fBvhangup()\fR searches the system tables for references to the controlling terminal of the invoking process and revokes access permissions on each instance of the terminal that it finds. Further
attempts to access the terminal by the affected processes will yield I/O errors (\fBEBADF\fR or \fBEIO\fR). A SIGHUP (hangup signal) is sent to the process group of the controlling terminal.
.SH SEE ALSO
.LP
\fBinit\fR(1M)
.SH BUGS
.LP
Access to the controlling terminal using \fB/dev/tty\fR is still possible.
.LP
This call should be replaced by an automatic mechanism that takes place on process exit.
