'\" te
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").  
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\" Copyright (c) 2006, Sun Microsystems, Inc.,
.\" All Rights Reserved
.TH strcpy 9F "16 Jan 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
strcpy, strlcat, strlcpy, strncat, strncpy, strspn \- String operations.
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi.h> 



\fBchar *\fR\fBstrcpy\fR(\fBchar *\fR\fIdst\fR, \fBconst char *\fR\fIsrc\fR);
.fi

.LP
.nf
\fBsize_t\fR \fBstrlcat\fR(\fBchar *\fR\fIdst\fR, \fBconst char *\fR\fIsrc\fR, \fBsize_t\fR \fIdstsize\fR);
.fi

.LP
.nf
\fBsize_t\fR  \fBstrlcpy\fR(\fBchar *\fR\fIdst\fR, \fBconst char *\fR\fIsrc\fR, \fBsize_t\fR \fIdstsize\fR);
.fi

.LP
.nf
\fBchar *\fR\fBstrncat\fR(\fBchar *\fR\fIrestrict s1\fR, \fBconst char *\fR\fIrestrict  s2\fR, \fBsize_t\fR \fIn\fR);
.fi

.LP
.nf
\fBchar *\fR\fBstrncpy\fR(\fBchar *\fR\fIdst\fR, \fBconst char *\fR\fIsrc\fR, \fBsize_t\fR \fIn\fR);
.fi

.LP
.nf
\fBsize_t\fR \fBstrspn\fR(\fBconst char *\fR\fIs1\fR, \fBconst char *\fR\fIs2\fR);
.fi

.SH INTERFACE LEVEL
.LP
Solaris DDI specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
\fB\fIdst\fR, \fIsrc\fR\fR
.ad
.RS 12n
.rt  
Pointers to character strings.
.RE

.sp
.ne 2
.mk
.na
\fB\fIs1\fR, \fIs2\fR\fR
.ad
.RS 12n
.rt  
Pointers to character strings.
.RE

.sp
.ne 2
.mk
.na
\fB\fIn\fR\fR
.ad
.RS 12n
.rt  
Count of
characters to be copied.
.RE

.SH DESCRIPTION
.LP
The arguments \fIdst\fR, \fIsrc\fR, \fIs1\fR and \fIs2\fR point to strings. The \fBstrcpy()\fR, \fBstrlcpy()\fR, \fBstrncpy()\fR, \fBstrlcat()\fR and \fBstrncat()\fR functions all alter their
first argument. These functions do not check for overflow of the array pointed
to by the first argument.
.SS "\fBstrcpy()\fR"
.LP
The \fBstrcpy()\fR function copies characters in the string \fIsrc\fR to \fIdst\fR, terminating at the first null
character in \fIsrc\fR, and returns \fIdst\fR
to the caller. No bounds checking is done.
.SS "\fBstrncpy()\fR"
.LP
The \fBstrncpy()\fR function copies \fIsrc\fR
to \fIdst\fR, null-padding or truncating at \fIn\fR bytes, and returns \fIdst\fR. No bounds checking
is done.
.SS "\fBstrlcpy()\fR"
.LP
The \fBstrlcpy()\fR function copies a maximum of \fIdstsize\fR\fB-1\fR characters (where \fIdstsize\fR represents the size of the string buffer \fIdst\fR) from \fIsrc\fR to \fIdst\fR,
truncating \fIsrc\fR if necessary. The result is always null-terminated.
The function returns \fBstrlen\fR(\fIsrc\fR).
Buffer overflow can be checked as follows:
.sp
.in +2
.nf
if (strlcpy(dst, src, dstsize) >= dstsize)
                     return (-1);
.fi
.in -2

.SS "\fBstrncat()\fR"
.LP
The \fBstrncat()\fR function appends a maximum of \fIn\fR characters. The initial character of \fIs2\fR
overrides the null character at the end of \fIs1\fR.
.SS "\fBstrlcat()\fR"
.LP
The \fBstrlcat()\fR function appends a maximum of (\fIdstsize\fR\fB-\fR\fBstrlen\fR(\fIdst\fR)\fB-1\fR) characters of \fIsrc\fR
to \fIdst\fR (where \fIdstsize\fR represents
the size of the string buffer \fIdst\fR). If the string pointed
to by \fIdst\fR contains a null-terminated string that fits
into dstsize bytes when \fBstrlcat()\fR is called, the string
pointed to by \fIdst\fR is a null-terminated string that
fits in dstsize bytes (including the terminating null character) when it completes,
and the initial character of \fIsrc\fR overrides the null
character at the end of \fIdst\fR. If the string pointed
to by \fIdst\fR is longer than dstsize bytes when \fBstrlcat()\fR is called, the string pointed to by \fIdst\fR
is not changed. The function returns min{\fIdstsize\fR, \fBstrlen\fR(\fIdst\fR)}\fB+\fR\fBstrlen\fR(\fIsrc\fR). Buffer overflow can be checked
as follows:
.sp
.in +2
.nf
if (strlcat(dst, src, dstsize) >= dstsize) 
                     return -1;
.fi
.in -2

.SS "\fBstrspn()\fR"
.LP
The \fBstrspn()\fR function returns the length of the initial
segment of string \fBs1\fR that consists entirely of characters
from string \fIs2\fR.
.SH RETURN VALUES
.LP
The \fBstrcpy()\fR, \fBstrncat()\fR and \fBstrncpy()\fR functions return \fIdst\fR.
.LP
For \fBstrlcat()\fR, \fBstrlcpy()\fR and \fBstrspn()\fR functions, see the Description section.
.SH CONTEXT
.LP
These functions can be called from user, interrupt, or kernel context.
.SH SEE ALSO
.LP
\fBstrlen\fR(9F), \fBstrcmp\fR(9F), \fBbcopy\fR(9F), \fBddi_copyin\fR(9F)
.LP
\fI\fR
