'\" te
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").  
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"  Copyright 1989 AT&T Copyright (c) 2004 Sun Microsystems, Inc. All Rights Reserved.
.TH set 1 "13 Jul 2004" "SunOS 5.11" "User Commands"
.SH NAME
set, unset, setenv, unsetenv, export \- shell built-in functions to determine the characteristics for environmental variables of the current shell and its descendents 
.SH SYNOPSIS
.SS "sh"
.LP
.nf
\fBset\fR [\fB--aefhkntuvx\fR [\fIargument\fR]]...
.fi

.LP
.nf
\fBunset\fR [\fIname\fR]...
.fi

.LP
.nf
\fBexport\fR [\fIname\fR]...
.fi

.SS "csh"
.LP
.nf
\fBset\fR [\fIvar\fR [= \fIvalue\fR]]
.fi

.LP
.nf
\fBset\fR \fIvar\fR [\fIn\fR] = \fIword\fR
.fi

.LP
.nf
\fBunset\fR \fIpattern\fR
.fi

.LP
.nf
\fBsetenv\fR [\fIVAR\fR [\fIword\fR]]
.fi

.LP
.nf
\fBunsetenv\fR \fIvariable\fR
.fi

.SS "ksh"
.LP
.nf
\fBset\fR [\(+-abCefhkmnopstuvx] [\(+-o \fIoption\fR]... [\(+-A \fIname\fR] 
    [\fIarg\fR]...
.fi

.LP
.nf
\fBunset\fR [\fB-f\fR] \fIname\fR...
.fi

.LP
.nf
\fB**export\fR [\fIname\fR [=\fIvalue\fR]]...
.fi

.LP
.nf
\fB**export\fR [\fB-p\fR]
.fi

.SH DESCRIPTION
.SS "sh"
.LP
The \fBset\fR built-in command has the following options:
.sp
.ne 2
.mk
.na
\fB\fB--\fR\fR
.ad
.RS 6n
.rt  
Does not change any of the flags. This option is useful in setting \fB$1\fR to \fB\(mi\fR\&.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-a\fR\fR
.ad
.RS 6n
.rt  
Marks variables which are modified or created for export.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-e\fR\fR
.ad
.RS 6n
.rt  
Exits immediately if a command exits with a non-zero exit status.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-f\fR\fR
.ad
.RS 6n
.rt  
Disables file name generation.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-h\fR\fR
.ad
.RS 6n
.rt  
Locates and remembers function commands as functions are defined. Function commands are normally located when the function is executed.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-k\fR\fR
.ad
.RS 6n
.rt  
All keyword arguments are placed in the environment for a command, not just those that precede the command name.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-n\fR\fR
.ad
.RS 6n
.rt  
Reads commands but does not execute them.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-t\fR\fR
.ad
.RS 6n
.rt  
Exits after reading and executing one command.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-u\fR\fR
.ad
.RS 6n
.rt  
Treats unset variables as an error when substituting.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-v\fR\fR
.ad
.RS 6n
.rt  
Prints shell input lines as they are read.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-x\fR\fR
.ad
.RS 6n
.rt  
Prints commands and their arguments as they are executed.
.RE

.LP
Using \fB+\fR rather than \fB\(mi\fR causes these flags to be turned off. These flags can also be used upon invocation of the shell. The current set of flags can be found in \fB$\(mi\fR. The remaining \fIargument\fRs
are positional parameters and are assigned, in order, to \fB$1\fR, \fB$2\fR, \fB\&.\|.\|.\|.\fR If no \fIargument\fRs are given the values of all names are printed.
.LP
For each \fIname\fR, \fBunset\fR removes the corresponding variable or function value. The variables PATH, PS1, PS2, MAILCHECK, and IF cannot be unset.
.LP
With the \fBexport\fR built-in, the given \fIname\fRs are marked for automatic export to the \fIenvironment\fR of subsequently executed commands. If no arguments are given, variable names that have been marked for export during the current shell's
execution are listed. Function names are \fInot\fR exported.
.SS "csh"
.LP
With no arguments, \fBset\fR displays the values of all shell variables. Multiword values are displayed as a parenthesized list. With the \fIvar\fR argument alone, \fBset\fR assigns an empty (null) value to the variable \fIvar\fR.
With arguments of the form \fIvar\fR\fB = \fR\fIvalue\fR \fBset\fR assigns \fIvalue\fR to \fIvar\fR, where \fIvalue\fR is one of:
.sp
.ne 2
.mk
.na
\fB\fIword\fR \fR
.ad
.RS 14n
.rt  
A single word (or quoted string).
.RE

.sp
.ne 2
.mk
.na
\fB\fB(\fR\fIwordlist\fR\fB)\fR\fR
.ad
.RS 14n
.rt  
A space-separated list of words enclosed in parentheses.
.RE

.LP
Values are command and filename expanded before being assigned. The form \fBset\fR\fI var\fR\fB[\fR\fIn\fR\fB]=\fR\fIword\fR replaces the \fIn\fR'th word in a
multiword value with \fIword\fR.
.LP
\fBunset\fR removes variables whose names match (filename substitution) \fIpattern\fR. All variables are removed by `\fBunset *\fR'.
.LP
With no arguments, \fBsetenv\fR displays all environment variables. With the \fIVAR\fR argument, \fBsetenv\fR sets the environment variable \fB\fR\fIVAR\fR\fB \fR to an empty (null) value.
(By convention, environment variables are normally given upper-case names.) With both \fIVAR\fR and \fIword\fR arguments specified, \fBsetenv\fR sets \fIVAR\fR to \fIword\fR, which must be either a single
word or a quoted string. The PATH variable can take multiple \fIword\fR arguments, separated by colons (see EXAMPLES). The most commonly used environment variables, USER, TERM, and PATH, are automatically imported to and
exported from the \fBcsh\fR variables \fBuser\fR, \fBterm\fR, and \fBpath\fR. Use \fBsetenv\fR if you need to change these variables. In addition, the shell sets the PWD environment variable from the \fBcsh\fR
variable \fBcwd\fR whenever the latter changes.
.LP
The environment variables LC_CTYPE, LC_MESSAGES, LC_TIME, LC_COLLATE, LC_NUMERIC, and LC_MONETARY take immediate effect when changed within the C shell. See \fBenviron\fR(5) for descriptions of these environment variables.
.LP
\fBunsetenv\fR removes \fIvariable\fR from the environment. As with \fBunset\fR, pattern matching is not performed.
.SS "ksh"
.LP
The flags for the \fBset\fR built-in have meaning as follows:
.sp
.ne 2
.mk
.na
\fB\fB-A\fR \fR
.ad
.RS 13n
.rt  
Array assignment. Unsets the variable \fIname\fR and assigns values sequentially from the list \fIarg\fR. If \fB+A\fR is used, the variable \fIname\fR is
not unset first.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-a\fR \fR
.ad
.RS 13n
.rt  
All subsequent variables that are defined are automatically exported.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-b\fR\fR
.ad
.RS 13n
.rt  
Causes the shell to notify the user asynchronously of background job completions.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-C\fR\fR
.ad
.RS 13n
.rt  
Prevents existing files from being overwritten by the shell's \fB>\fR redirection operator. The \fB>|\fR redirection operator overrides this noclobber option for an individual file.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-e\fR \fR
.ad
.RS 13n
.rt  
If a command has a non-zero exit status, executes the \fBERR\fR trap, if set, and exits. This mode is disabled while reading profiles.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-f\fR \fR
.ad
.RS 13n
.rt  
Disables file name generation.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-h\fR \fR
.ad
.RS 13n
.rt  
Each command becomes a tracked alias when first encountered.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-k\fR \fR
.ad
.RS 13n
.rt  
All variable assignment arguments are placed in the environment for a command, not just those that precede the command name.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-m\fR \fR
.ad
.RS 13n
.rt  
Background jobs run in a separate process group and a line prints upon completion. The exit status of background jobs is reported in a completion message. On systems with job control, this flag is turned on automatically for interactive shells.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-n\fR \fR
.ad
.RS 13n
.rt  
Reads commands and checks them for syntax errors, but does not execute them. Ignored for interactive shells.
.RE

.sp
.ne 2
.mk
.na
\fB\fB+o\fR\fR
.ad
.RS 13n
.rt  
 Writes the current option stettings to standard output in a format that is suitable for reinput to the shell as commands that achieve the same option settings. 
.RE

.sp
.ne 2
.mk
.na
\fB\fB-o\fR \fIoption\fR\fR
.ad
.RS 13n
.rt  
The \fIoption\fR argument can be one of the following option names: 
.sp
.ne 2
.mk
.na
\fB\fBallexport\fR \fR
.ad
.RS 15n
.rt  
Same as \fB-a\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBerrexit\fR \fR
.ad
.RS 15n
.rt  
Same as \fB-e\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBbgnice\fR \fR
.ad
.RS 15n
.rt  
All background jobs are run at a lower priority. This is the default mode. \fBemacs\fR Puts you in an \fBemacs\fR style in-line editor for command entry.
.RE

.sp
.ne 2
.mk
.na
\fB\fBgmacs\fR \fR
.ad
.RS 15n
.rt  
Puts you in a \fBgmacs\fR style in-line editor for command entry.
.RE

.sp
.ne 2
.mk
.na
\fB\fBignoreeof\fR \fR
.ad
.RS 15n
.rt  
The shell does not exit on end-of-file. The command \fBexit\fR must be used.
.RE

.sp
.ne 2
.mk
.na
\fB\fBkeyword\fR \fR
.ad
.RS 15n
.rt  
Same as \fB-k\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBmarkdirs\fR \fR
.ad
.RS 15n
.rt  
All directory names resulting from file name generation have a trailing \fB/\fR appended.
.RE

.sp
.ne 2
.mk
.na
\fB\fBmonitor\fR \fR
.ad
.RS 15n
.rt  
Same as \fB-m\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBnoclobber\fR \fR
.ad
.RS 15n
.rt  
Prevents redirection operator \fB>\fR from truncating existing files. Requires the \fB>|\fR operator to truncate a file when turned on. Same as \fB-C\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBnoexec\fR \fR
.ad
.RS 15n
.rt  
Same as \fB-n\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBnoglob\fR \fR
.ad
.RS 15n
.rt  
Same as \fB-f\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBnolog\fR \fR
.ad
.RS 15n
.rt  
Does not save function definitions in history file.
.RE

.sp
.ne 2
.mk
.na
\fB\fBnotify\fR\fR
.ad
.RS 15n
.rt  
Same as \fB-b\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBnounset\fR \fR
.ad
.RS 15n
.rt  
Same as \fB-u\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBprivileged\fR \fR
.ad
.RS 15n
.rt  
Same as \fB-p\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBverbose\fR \fR
.ad
.RS 15n
.rt  
Same as \fB-v\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBtrackall\fR \fR
.ad
.RS 15n
.rt  
Same as \fB-h\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBvi\fR \fR
.ad
.RS 15n
.rt  
Puts you in insert mode of a \fBvi\fR style in-line editor until you hit escape character \fB033\fR. This puts you in control mode. A return sends the line.
.RE

.sp
.ne 2
.mk
.na
\fB\fBviraw\fR \fR
.ad
.RS 15n
.rt  
Each character is processed as it is typed in \fBvi\fR mode.
.RE

.sp
.ne 2
.mk
.na
\fB\fBxtrace\fR \fR
.ad
.RS 15n
.rt  
Same as \fB-x\fR.
.RE

.RE

.LP
If no option name is supplied then the current option settings are printed.
.sp
.ne 2
.mk
.na
\fB\fB-p\fR \fR
.ad
.RS 9n
.rt  
Disables processing of the \fB$HOME/.profile\fR file and uses the file \fB/etc/suid_profile\fR instead of the ENV file. This mode is on whenever the effective uid is not equal to the real
uid, or when the effective gid is not equal to the real gid. Turning this off causes the effective uid and gid to be set to the real uid and gid.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-s\fR \fR
.ad
.RS 9n
.rt  
Sorts the positional parameters lexicographically.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-t\fR \fR
.ad
.RS 9n
.rt  
Exits after reading and executing one command.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-u\fR \fR
.ad
.RS 9n
.rt  
Treats unset parameters as an error when substituting.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-v\fR \fR
.ad
.RS 9n
.rt  
Prints shell input lines as they are read.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-x\fR \fR
.ad
.RS 9n
.rt  
Prints commands and their arguments as they are executed.
.RE

.sp
.ne 2
.mk
.na
\fB\fB\(mi\fR \fR
.ad
.RS 9n
.rt  
Turns off \fB-x\fR and \fB-v\fR flags and stops examining arguments for flags.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-\fR \fR
.ad
.RS 9n
.rt  
Does not change any of the flags. This option is useful in setting \fB$1\fR to a value beginning with \fB\(mi\fR\&. If no arguments follow this flag then the positional parameters are unset.
.RE

.LP
Using \fB+\fR rather than \fB\(mi\fR causes these flags to be turned off. These flags can also be used upon invocation of the shell. The current set of flags can be found in \fB$\(mi\fR. Unless \fB-A\fR is specified, the remaining
arguments are positional parameters and are assigned, in order, to \fB$1\fR \fB$2\fR .\|.\|.. If no arguments are given then the names and values of all variables are printed on the standard output.
.LP
The variables given by the list of \fIname\fRs are unassigned, that is, their values and attributes are erased. \fBreadonly\fR variables cannot be unset. If the \fB-f\fR flag is set, then the names refer to \fBfunction\fR names. Unsetting \fBERRNO\fR, \fBLINENO\fR, \fBMAILCHECK\fR, \fBOPTARG\fR, \fBOPTIND\fR, \fBRANDOM\fR, \fBSECONDS\fR, \fBTMOUT\fR, and \fB_\fR removes their special meaning even if they are subsequently assigned.
.LP
When using \fBunset\fR, the variables given by the list of \fIname\fRs are unassigned, i.e., their values and attributes are erased. \fBreadonly\fR variables cannot be unset. If the \fB-f\fR, flag is set, then the names refer to \fBfunction\fR names. Unsetting \fBERRNO\fR, \fBLINENO\fR, \fBMAILCHECK\fR, \fBOPTARG\fR, \fBOPTIND\fR, \fBRANDOM\fR, \fBSECONDS\fR, \fBTMOUT\fR, and \fB_\fR removes their special meaning
even if they are subsequently assigned.
.LP
With the \fBexport\fR built-in, the given \fIname\fRs are marked for automatic export to the \fBenvironment\fR of subsequently-executed commands.
.LP
When \fB-p\fR is specified, \fBexport\fR writes to the standard output the names and values of all exported variables in the following format:
.sp
.in +2
.nf
"export %s=%s\en", \fIname\fR, \fIvalue\fR
.fi
.in -2
.sp

.LP
if \fIname\fR is set, and:
.sp
.in +2
.nf
"export %s\en", \fIname\fR
.fi
.in -2
.sp

.LP
if \fIname\fR is unset.
.LP
The shell formats the output, including the proper use of quoting, so that it is suitable for reinput to the shell as commands that achieve the same exporting results, except for the following:
.RS +4
.TP
1.
Read-only variables with values cannot be reset.
.RE
.RS +4
.TP
2.
Variables that were unset at the time they were output are not reset to the unset state if a value is assigned to the variable between the time the state was saved and the time at which the saved output is reinput to the shell.
.RE
.LP
On this man page, \fBksh\fR(1) commands that are preceded by one or two * (asterisks) are treated specially in the following ways:
.RS +4
.TP
1.
Variable assignment lists preceding the command remain in effect when the command completes.
.RE
.RS +4
.TP
2.
I/O redirections are processed after variable assignments.
.RE
.RS +4
.TP
3.
Errors cause a script that contains them to abort.
.RE
.RS +4
.TP
4.
Words, following a command preceded by ** that are in the format of a variable assignment, are expanded with the same rules as a variable assignment. This means that tilde substitution is performed after the \fB=\fR sign and word splitting and file name generation are not
performed.
.RE
.SH EXAMPLES
.SS "csh"
.LP
The following example sets the PATH variable to search for files in the \fB/bin\fR, \fB/usr/bin\fR, \fB/usr/sbin\fR, and \fB/usr/ucb/bin\fR directories, in that order:
.sp
.in +2
.nf
setenv PATH "/bin:/usr/bin:/usr/sbin:usr/ucb/bin"
.fi
.in -2
.sp

.LP
\fB\fR
.SH ATTRIBUTES
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
.TE

.SH SEE ALSO
.LP
\fBcsh\fR(1), \fBksh\fR(1), \fBread\fR(1), \fBsh\fR(1), \fBtypeset\fR(1), \fBattributes\fR(5), \fBenviron\fR(5)
