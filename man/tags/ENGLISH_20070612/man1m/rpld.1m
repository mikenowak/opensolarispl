'\" te
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").  
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"  Copyright (c) 2001 Sun Microsystems, Inc.
.\" All Rights Reserved.
.TH rpld 1M "2 Dec 2003" "SunOS 5.11" "System Administration Commands"
.SH NAME
rpld \- Network Booting RPL (Remote
Program Load) Server
.SH SYNOPSIS
.LP
.nf
\fB/usr/sbin/rpld\fR [\fB-fdDMblgz\fR] \fIinterface\fR
.fi

.LP
.nf
\fB/usr/sbin/rpld\fR \fB-a\fR [\fB-fdDMblgz\fR]
.fi

.SH DESCRIPTION
.LP
The RPL server provides network booting functionality to x86 clients
by listening to boot requests from them according to the RPL protocol specifications. \fBrpld\fR runs on both x86 and SPARC systems. Boot
requests can be generated by clients using the boot floppy supplied in the
distribution. Once the request has been received, the server validates the
client and adds it to its internal service list. Subsequent requests from
the client to download bootfiles will result in the sending of data frames
from the server to the client specifying where to load the boot program in
memory. When all the bootfiles have been downloaded, the server specifies
where to start execution to initiate the boot process.
.LP
In the first synopsis, the interface parameter names the network interface
upon which \fBrpld\fR is to listen for requests. For example:
.LP
\fB/usr/sbin/rpld /dev/eri0\fR
.LP
\fB/usr/sbin/rpld /dev/smc0\fR
.LP
In the second synopsis, \fBrpld\fR locates all of the network
interfaces present on the system and starts a daemon process for each one.
.LP
The server starts by reading the default configuration file, or an alternate
configuration file if one is specified. If no configuration file can be found,
internal default values will be used. Alternatively, command line options
are available to override any of the values in the configuration file. After
the configuration options are set, it then opens the network interface as
specified in the command line and starts listening to RPL boot requests.
.LP
Network boot clients have to have information pre-configured on a server
for the RPL server to validate and serve them. This involves putting configuration
information in both the \fBethers\fR(4)
and the \fBbootparams\fR(4)
databases. The \fBethers\fR database contains a translation from
the physical node address to the IP address of the clients and is normally
used by the RARP server. The \fBbootparams\fR database stores
all other information needed for booting off this client, such as the number
of bootfiles and the file names of the various boot components. Both databases
can be looked up by the RPL server through NIS. See the sub-section \fBClient Configuration\fR for information on how to set up these databases.
.LP
To assist in the administration and maintenance of the network boot
activity, there are two run-time signals that the server will accept to change
some run-time parameters and print out useful status information. See the
sub-section \fBSignals\fR for details.
.LP
The RPL server is not limited to the ability to boot only clients. If
properly configured, the server should be able to download any bootfiles to
the clients.
.SS "Client Configuration"
.LP
The following configuration information is specific to booting x86
clients.
.LP
In order to allow clients to boot x86 from across the network,
the client's information has to be pre-configured in two databases: \fBethers\fR(4) and \fBbootparams\fR(4).
Both databases can be accessed through NIS. Refer to \fI\fR
for information on how to configure a diskless x86 client. The discussion
contained in the rest of this section is provided for your information only
and should not be performed manually.
.LP
The \fBethers\fR database contains a translation table
to convert the physical node address to the IP address of the client. Therefore,
an IP address must be assigned to the client (if this has not been done already),
the node address of the client must be obtained, and then this information
needs to be entered in the \fBethers\fR database.
.LP
The bulk of the configuration is done in the \fBbootparams\fR
database. This is a free-format database that essentially contains a number
of keyword-value string pairs. A number of keywords have been defined for
specific purposes, like the \fBbootparams\fR RPC in \fBbootparamd\fR(1M).
Three more keywords have been defined for the RPL server. They are \fBnumbootfiles\fR, \fBbootfile\fR, and \fBbootaddr\fR. All three keywords must be in lowercase letters with no spaces
before or after the equals symbol following the keyword.
.sp
.ne 2
.mk
.na
\fB\fBnumbootfiles\fR\fR
.ad
.RS 16n
.rt  
Specifies the number of files to be downloaded to the network boot client.
The format of this option is:
.sp
\fBnumbootfiles=n\fR
.sp
Always use \fBnumbootfiles=3\fR to boot x86 across
the network.
.RE

.sp
.ne 2
.mk
.na
\fB\fBbootfile\fR\fR
.ad
.RS 16n
.rt  
Specifies
the path name of the bootfile to be downloaded and where in memory to start
loading the bootfile. A complete path name should be used. For example, assuming
the client's IP address is 172.16.32.15:
.sp
.in +2
.nf
\fBbootfile=/rplboot/172.16.32.15.hw.com:45000
bootfile=/rplboot/172.16.32.15.glue.com:35000
bootfile=/rplboot/172.16.32.15.inetboot=8000\fR 
.fi
.in -2
.sp

The path name following the equals symbol specifies the bootfile to
be downloaded, and the hex address following the colon (:) is the absolute
address of the memory location to start loading that bootfile. These addresses
should be in the range of 7c00 to a0000 (i.e., the base 640K range excluding
the interrupt vector and BIOS data areas). Address 45000 for this \fBhw.com\fR bootfile is also a suggested value and if possible should
not be changed. The address of 35000 for \fBglue.com\fR is a
suggested value that, if possible, should not be changed. The address of 8000
for \fBinetboot\fR is an absolute requirement and should never
be changed.
.RE

.LP
These files, when created following the procedures in
the \fI\fR
are actually symbolic links to to the real file to be downloaded to the client. \fBhw.com\fR is linked to a special driver that corresponds to the network
interface card of the client. \fBglue.com\fR and \fBinetboot\fR are generic to all network boot clients.
.LP
The order of these bootfile lines is not significant, but because problems
have been found with certain boot PROMs, it is highly recommended that the
bootfile lines be ordered in descending order of the load addresses.
.sp
.ne 2
.mk
.na
\fB\fBbootaddr\fR\fR
.ad
.RS 12n
.rt  
The absolute address in memory to start executing after all the bootfiles
have been downloaded. This address should always correspond to the address
where \fBglue.com\fR is being loaded. If possible, always use:
.sp
\fBbootaddr=35000\fR
.RE

.SH OPTIONS
.LP
The following options are supported: 
.sp
.ne 2
.mk
.na
\fB\fB-b\fR \fIbackground_mode\fR\fR
.ad
.RS 24n
.rt  
Specify \fB1\fR to run the server in the background
and relinquish the controlling terminal, or \fB0\fR to run in
the foreground without relinquishing the controlling terminal. This option
corresponds to the \fIBackGround\fR setting in the configuration
file. If you have specified that the error or warning messages be sent to
standard output in the configuration file or by using the \fB-D\fR
option above, the server cannot be run in background mode. Doing so will cause
the server to exit after announcing the error.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-d\fR \fIdebug_level\fR\fR
.ad
.RS 24n
.rt  
Specify a level of \fB0\fR if you do not want
any error or warning messages to be generated, or a level from \fB1\fR to \fB9\fR for increasing amounts of messages. This
option corresponds to the \fIDebugLevel\fR setting in
the configuration file. The default value is \fB0\fR. Note that
it is best to limit the level to \fB8\fR or below; use of level \fB9\fR may generate so many debug messages that the performance of the
RPL server may be impacted.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-D\fR \fIdebug_destination\fR\fR
.ad
.RS 24n
.rt  
Specify \fB0\fR to send error or warning messages
to standard output, \fB1\fR to syslogd, and \fB2\fR
to the log file. This option corresponds to the \fIDebugDest\fR
setting in the configuration file. The default value is \fB2\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-f\fR \fIconfig_filename\fR\fR
.ad
.RS 24n
.rt  
Use this to specify a configuration file
name other than the system default \fB/etc/rpld.conf\fR file.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-g\fR \fIdelay_granularity\fR\fR
.ad
.RS 24n
.rt  
This corresponds to the \fIDelayGran\fR
setting in the configuration file. If retransmission requests from clients
do occur, the delay granularity factor will be used to adjust the delay count
for this client upwards or downwards. If the retransmission request is caused
by data overrun, the delay count will be incremented by delay granularity
units to increase the delay between data frames. If the retransmission request
is caused by sending data too slowly, this will be used to adjust the delay
count downwards to shorten the delay. Eventually the server will settle at
the delay count value that works best with the speed of the client and no
retransmission request will be needed. The default value is \fB2\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-l\fR \fIlog_filename\fR\fR
.ad
.RS 24n
.rt  
Specify an alternate log file name to hold the error or warning
messages in connection with the \fB-D\fR \fB2\fR option
or the configuration file \fIDebugDest = 2\fR
setting. This option corresponds to the \fILogFile\fR
setting in the configuration file. The default is \fB/var/spool/rpld.log\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-M\fR \fImaximum_clients\fR\fR
.ad
.RS 24n
.rt  
Specify the maximum number of simultaneous network boot clients
to be served. This option corresponds to the \fIMaxClients\fR
setting in the configuration file. A value of \fB\(mi1\fR
means unlimited, and the actual number will depend on available system resources.
The default value is \fB\(mi1\fR\&.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-s\fR \fIstart_delay_count\fR\fR
.ad
.RS 24n
.rt  
This option corresponds to the \fIStartDelay\fR
setting in the configuration file. Specify the number of delay units between
outgoing data frames sent to clients to avoid retransmission requests from
them. Using the LLC type \fB1\fR protocol, data transfer is a
one-way, best-effort delivery mechanism. The server, without any type of delay
mechanism, can overrun the client by sending data frames too quickly. Therefore,
a variable delay is built into the server to limit the speed of sending data
to the clients, thus avoiding the clients sending back retransmission requests.
This value should be machine environment specific. If you have a fast server
machine but slow client machines, you may want to set a large start delay
count. If you have comparable server and client machines, the delay count
may be set to \fB1\fR. The delay is only approximate and should
not be taken as an accurate measure of time. There is no specific correlation
between the delay unit and the actual time of delay. The default value is \fB20\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-z\fR \fIframe_size\fR\fR
.ad
.RS 24n
.rt  
This option corresponds to the \fIFrameSize\fR
setting in the configuration file. This specifies the size of the data frames
used to send data to the clients. This is limited by the underlying physical
medium. For \fBethernet/802.3\fR, the maximum physical frame
size is 1500 octets. The default value is \fB1500\fR. Note that
the protocol overhead of LLC1 and RPL is 32 octets, resulting in a maximum
data length of 1468 octets.
.RE

.SS "Signals"
.LP
The RPL server accepts two signals to change run-time parameters and
display status information, respectively:
.sp
.ne 2
.mk
.na
\fB\fBHANGUP\fR\fR
.ad
.RS 10n
.rt  
This will cause the RPL server to reread the default configuration
file \fB/etc/rpld.conf\fR or an alternate configuration file
if one is specified when the server is started. New values of certain parameters
can be used immediately, such as \fIDebugLevel\fR, \fIDebugDest\fR, \fILogFile\fR, \fIDelayGran\fR, and \fIFrameSize\fR. For \fIMaxClients\fR, if the server is already serving more than the new
value, the server will not accept additional boot requests until the number
has fallen below the \fIMaxClients\fR parameter. For \fIStartDelay\fR, this will only affect new boot requests. All the
existing delay counts for the various clients in service will not be affected.
Finally, the \fIBackGround\fR parameter will have no
effect once the server has been running. You cannot change the mode of service
without first killing the server and then restarting it.
.RE

.sp
.ne 2
.mk
.na
\fB\fBUSR1\fR\fR
.ad
.RS 10n
.rt  
This signal will cause the server to dump all the parameter
values and the status of each individual boot client to the destination specified
by \fIDebugDest\fR.
.RE

.SH FILES
.sp
.ne 2
.mk
.na
\fB\fB/usr/sbin/rpld\fR\fR
.ad
.RS 23n
.rt  

.RE

.sp
.ne 2
.mk
.na
\fB\fB/etc/rpld.conf\fR\fR
.ad
.RS 23n
.rt  

.RE

.sp
.ne 2
.mk
.na
\fB\fB/var/spool/rpld.log\fR\fR
.ad
.RS 23n
.rt  

.RE

.sp
.ne 2
.mk
.na
\fB\fB/etc/ethers\fR\fR
.ad
.RS 23n
.rt  

.RE

.sp
.ne 2
.mk
.na
\fB\fB/etc/bootparams\fR\fR
.ad
.RS 23n
.rt  

.RE

.sp
.ne 2
.mk
.na
\fB\fB/rplboot\fR\fR
.ad
.RS 23n
.rt  

.RE

.SH ATTRIBUTES
.LP
See \fBattributes\fR(5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Architecturex86, SPARC
_
AvailabilitySUNWbsu
.TE

.SH SEE ALSO
.LP
\fBbootparamd\fR(1M), \fBin.rarpd\fR(1M), \fBbootparams\fR(4), \fBethers\fR(4), \fBnsswitch.conf\fR(4), \fBrpld.conf\fR(4), \fBattributes\fR(5)
.LP
\fI\fR
