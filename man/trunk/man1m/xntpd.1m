'\" te
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").  
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\" Copyright (c) David L. Mills 1992, 1993, 1994, 1995, 1996, 1997
.\" Portions Copyright (c) 2004 Sun Microsystems, Inc. All Rights Reserved.
.TH xntpd 1M "26 Jul 2004" "SunOS 5.11" "System Administration Commands"
.SH NAME
xntpd \- Network Time Protocol daemon
.SH SYNOPSIS
.LP
.nf
\fB/usr/lib/inet/xntpd\fR [\fB-aAbdm\fR] [\fB-c\fR \fIconffile\fR] [\fB-e\fR \fIauthdelay\fR] 
    [\fB-f\fR \fIdriftfile\fR] [\fB-k\fR \fIkeyfile\fR] [\fB-l\fR \fIlogfile\fR] [\fB-p\fR \fIpidfile\fR] 
    [\fB-r\fR \fIbroadcastdelay\fR] [\fB-s\fR \fIstatsdir\fR] [\fB-t\fR \fItrustedkey\fR] 
    [\fB-v\fR \fIvariable\fR] [\fB-V\fR \fIvariable\fR]
.fi

.SH DESCRIPTION
.LP
\fBxntpd\fR is a daemon which sets and maintains a UNIX system time-of-day in agreement with Internet standard time servers. \fBxntpd\fR is a complete implementation of the Network Time Protocol (\fBNTP\fR) version 3 standard, as defined by \fIRFC
1305\fR. It also retains compatibility with version 1 and 2 servers as defined by \fIRFC 1059\fR and \fIRFC 1119\fR, respectively. The computations done in the protocol and clock adjustment code are carried out with high precision and with attention
to the details which might introduce systematic bias into the computations. This is done to try to maintain an accuracy suitable for synchronizing with even the most precise external time source.
.LP
Ordinarily, \fBxntpd\fR reads its configuration from a configuration file at startup time. The default configuration file name is \fB/etc/inet/ntp.conf\fR, although this may be overridden from the command line. It is also possible to specify a working, although
limited, \fBxntpd\fR configuration entirely on the command line, obviating the need for a configuration file. This may be particularly appropriate when \fBxntpd\fR is to be configured as a broadcast or multicast client, with all peers being determined by listening to
broadcasts at run time. Through the use of the \fBntpq\fR(1M) program, various internal \fBxntpd\fR variables can be displayed and configuration options
altered while the daemon is running.
.LP
The daemon can operate in any of several modes, including symmetric active/passive, client/server and broadcast/multicast. A broadcast/multicast client can automatically discover remote servers, compute one-way delay correction factors and configure itself automatically. This makes it possible
to deploy a fleet of workstations without specifying a configuration file or configuration details specific to its environment.
.SH OPTIONS
.LP
The following command line arguments are understood by \fBxntpd\fR. See \fBConfiguration Commands\fR for a more complete functional description:
.sp
.ne 2
.mk
.na
\fB\fB-a\fR\fR
.ad
.RS 17n
.rt  
Run in authentication mode.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-A\fR\fR
.ad
.RS 17n
.rt  
Disable authentication mode.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-b\fR\fR
.ad
.RS 17n
.rt  
Listen for broadcast \fBNTP\fR and sync to this if available.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-c\fR \fIconffile\fR\fR
.ad
.RS 17n
.rt  
Specify an alternate configuration file.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-d\fR\fR
.ad
.RS 17n
.rt  
Specify debugging mode. This flag may occur multiple times, with each occurrence indicating greater detail of display.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-e\fR \fIauthdelay\fR\fR
.ad
.RS 17n
.rt  
Specify the time (in seconds) it takes to compute the \fBNTP\fR encryption field on this computer.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-f\fR \fIdriftfile\fR\fR
.ad
.RS 17n
.rt  
Specify the location of the drift file.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-k\fR \fIkeyfile\fR\fR
.ad
.RS 17n
.rt  
Specify the location of the file which contains the \fBNTP\fR authentication keys.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-l\fR \fIlogfile\fR\fR
.ad
.RS 17n
.rt  
Specify a log file instead of logging to syslog.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-m\fR\fR
.ad
.RS 17n
.rt  
Listen for multicast messages and synchronize to them if available (requires multicast kernel).
.RE

.sp
.ne 2
.mk
.na
\fB\fB-p\fR \fIpidfile\fR\fR
.ad
.RS 17n
.rt  
Specify the name of the file to record the daemon's process id.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-r\fR \fIbroadcast\fR\fR
.ad
.RS 17n
.rt  
Ordinarily, the daemon automatically compensates for the network delay between the broadcast/multicast server and the client; if the calibration procedure fails, use the specified default delay (in seconds).
.RE

.sp
.ne 2
.mk
.na
\fB\fB-s\fR \fIstatsdir\fR\fR
.ad
.RS 17n
.rt  
Specify the directory to be used for creating statistics files.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-t\fR \fItrustedkey\fR\fR
.ad
.RS 17n
.rt  
Add a key number to the trusted key list.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-v\fR \fIvariable\fR\fR
.ad
.RS 17n
.rt  
Add a system variable.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-V\fR \fIvariable\fR\fR
.ad
.RS 17n
.rt  
Add a system variable listed by default.
.RE

.SH USAGE
.LP
\fBxntpd\fR's configuration file format is similar to other Unix configuration files. Comments begin with a `#' character and extend to the end of the line. Blank lines are ignored. Configuration commands consist of an initial keyword followed by a list of arguments, separated
by whitespace. Some arguments may be optional. These commands may not be continued over multiple lines. Arguments may be host names, host addresses written in dotted\(midecimal, integers, floating point numbers (when specifying times in seconds) and text strings.
.SS "Configuration Commands"
.LP
In the following descriptions, optional arguments are delimited by `[\|]', while alternatives are separated by `|'. The first three commands specify various time servers to be used and time services to be provided.
.sp
.ne 2
.mk
.na
\fB\fBpeer\fR \fIhost_address\fR [ \fBkey\fR \fI#\fR ] [ \fBversion\fR \fI#\fR ][ \fBprefer\fR ]\fR
.ad
.sp .6
.RS 4n
Specifies that the local server is to operate in "symmetric active" mode with the remote server \fIhost_address\fR named in the command. In this mode, the local server can be synchronized to the remote server. In addition, the remote server can
be synchronized by the local server. This is useful in a network of servers where, depending on various failure scenarios, either the local or remote server host may be the better source of time. The \fBpeer\fR command, and the \fBserver\fR and \fBbroadcast\fR commands
that follow, can take the following arguments:
.sp
.ne 2
.mk
.na
\fB\fBkey\fR\fR
.ad
.RS 11n
.rt  
Indicates that all packets sent to the address are to include authentication fields, encrypted using the specified key number. The range of this number is that of an unsigned 32 bit integer. By default, an encryption field is not included.
.RE

.sp
.ne 2
.mk
.na
\fB\fBversion\fR\fR
.ad
.RS 11n
.rt  
Specifies the version number to be used for outgoing \fBNTP\fR packets. Versions 1, 2, and 3 are the choices; version 3 is the default.
.RE

.sp
.ne 2
.mk
.na
\fB\fBprefer\fR\fR
.ad
.RS 11n
.rt  
Marks the host as a preferred host. This host will be preferred for synchronization over other comparable hosts.
.RE

.RE

.sp
.ne 2
.mk
.na
\fBserver \fIhost_address\fR [ key \fI#\fR ] [ version f1\fI#\fR ]\fR
.ad
.br
.na
\fB[ prefer ] [ mode f1 \fI#\fR ] server\fR
.ad
.sp .6
.RS 4n
Specifies that the local server is to operate in "client" mode with the remote server named in the command. In this mode the local server can be synchronized to the remote server, but the remote server can never be synchronized to the local server.
.RE

.sp
.ne 2
.mk
.na
\fBbroadcast \fIhost_address\fR [ key \fI#\fR ] [ version \fI#\fR ] [ ttl \fI#\fR ]\fR
.ad
.sp .6
.RS 4n
Specifies that the local server is to operate in "broadcast" mode where the local server sends periodic broadcast messages to a client population at the broadcast/multicast address named in the command. Ordinarily, this specification applies only to the local server
operating as a transmitter. For operation as a broadcast client, see \fBbroadcastclient\fR or \fBmulticastclient\fR commands elsewhere in this document. In broadcast mode the \fIhost_address\fR is usually the broadcast address on a local network or
a multicast address assigned to \fBNTP\fR. The \fBIANA\fR has assigned the network, 224.0.1.1 to \fBNTP\fR. This is presently the only network that should be used. The following option is used only with the broadcast mode:
.sp
.ne 2
.mk
.na
\fB\fBttl\fR\fR
.ad
.RS 7n
.rt  
Specifies the time-to-live (\fBTTL\fR) to use on multicast packets. Selection of the proper value, which defaults to 127, is something of a black art and must be coordinated with the network administrator(s).
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBbroadcastclient\fR\fR
.ad
.sp .6
.RS 4n
Directs the local server to listen for broadcast messages on the local network, in order to discover other servers on the same subnet. Upon hearing a broadcast message for the first time, the local server measures the nominal network delay using a brief client/server exchange with
the remote server. Then the server enters the "broadcastclient" mode, in which it listens for and synchronizes to succeeding broadcast messages. In order to avoid accidental or malicious disruption in this mode, both the local and remote servers must operate using authentication, with
the same trusted key and key identifier.
.RE

.sp
.ne 2
.mk
.na
\fB\fBmulticastclient\fR\fR
.ad
.sp .6
.RS 4n
[ \fIIP address .\|.\|.\fR ] Used in the same way as the \fBbroadcastclient\fR command, but operates using \fBIP\fR multicasting. Support for this command requires the use of authentication. If one or more \fBIP\fR addresses
are given, the server joins the respective multicast group(s). If none are given, the \fBIP\fR address assigned to \fBNTP\fR (224.0.1.1) is assumed.
.RE

.sp
.ne 2
.mk
.na
\fB\fBdriftfile\fR \fIfilename\fR\fR
.ad
.sp .6
.RS 4n
Specifies the name of the file used to record the frequency offset of the local clock oscillator. If the file exists, it is read at startup in order to set the initial frequency offset. Then the file is updated once per hour with the current offset computed by the daemon. If the
file does not exist or this command is not given, the initial frequency offset is assumed to be zero. In this case, it may take some hours for the frequency to stabilize and the residual timing errors to subside. The file contains a single floating point value equal to the offset in parts-per-million
(ppm). The file is updated by first writing the current drift value into a temporary file and then using \fBrename\fR(2) to replace the old version. This implies that \fBxntpd\fR must have write permission for the directory the drift file is located in, and that file system links, symbolic or otherwise, should probably be avoided.
.RE

.sp
.ne 2
.mk
.na
\fB\fBenable auth\||\|bclient\||\|pll\||\|monitor\||\|stats\fR [ .\|.\|. ]\fR
.ad
.br
.na
\fB\fBdisable auth\||\|bclient\||\|pll\||\|monitor\||\|stats\fR\fR
.ad
.br
.na
\fB[ .\|.\|. ]\fR
.ad
.sp .6
.RS 4n
Provides a way to enable or disable various server options. To do so, execute a two word command, where the first word is \fBenable\fR or \fBdisable\fR and the second is the flag. Flags not mentioned are unaffected. Flags that can be changed are described
below, along with their default values.
.sp

.sp
.TS
tab();
cw(1.01i) cw(1.17i) cw(3.32i) 
lw(1.01i) lw(1.17i) lw(3.32i) 
.
FlagDefaultDescription
authdisableT{
Causes the server to synchronize with unconfigured peers only if the peer has been correctly authenticated using a trusted key and key identifier.
T}
bclientdisableT{
Causes the server to listen for a message from a broadcast or multicast server. After this occurs, an association is automatically instantiated for that server. default for this flag is disable (off).
T}
pllenableT{
Enables the server to adjust its local clock. If not set, the local clock free-runs at its intrinsic time and frequency offset. This flag is useful in case the local clock is controlled by some other device or protocol and \fBNTP\fR is used only to provide synchronization to
other clients.
T}
monitordisableT{
Enables the monitoring facility (see elsewhere).
T}
statsenableT{
Enables statistics facility filegen (see \fBMonitoring Commands\fR below).
T}
.TE

.RE

.sp
.ne 2
.mk
.na
\fB\fBslewalways\fR [ \fByes\fR|\fBno\fR ]\fR
.ad
.sp .6
.RS 4n
Force \fBxntpd\fR to always slew the time.
.RE

.SS "Authentication Commands"
.sp
.ne 2
.mk
.na
\fB\fBkeys\fR \fIfilename\fR\fR
.ad
.RS 17n
.rt  
Specifies the name of a file which contains the encryption keys and key identifiers used by \fBxntpd\fR when operating in authenticated mode. The format of this file is described later in this document.
.RE

.sp
.ne 2
.mk
.na
\fB\fBtrustedkey\fR\fR
.ad
.RS 17n
.rt  
\fI#\fR [ \fI#\fR \fI\&.\|.\|.\fR ] Specifies the encryption key identifiers which are trusted for the purposes of authenticating peers suitable for synchronization. The authentication procedures require that
both the local and remote servers share the same key and key identifier, defined to be used for this purpose. However, different keys can be used with different servers. The arguments are 32 bit unsigned integers. Note, however, that key \fB0\fR is fixed and globally known. If meaningful
authentication is to be performed, the \fB0\fR key should not be trusted.
.RE

.sp
.ne 2
.mk
.na
\fB\fBcontrolkey\fR \fI#\fR\fR
.ad
.RS 17n
.rt  
Specifies the key identifier to use with the \fBntpq\fR(1M) program, which is useful to diagnose and repair problems that affect \fBxntpd\fR operation.
The operation of the \fBntpq\fR program and \fBxntpd\fR conform to those specified in \fIRFC 1305\fR. Requests from a remote \fBntpq\fR program which affect the state of the local server must be authenticated. This requires that both
the remote program and local server share a common key and key identifier. The argument to this command is a 32 bit unsigned integer. If no \fBcontrolkey\fR command is included in the configuration file, or if the keys don't match. These requests are ignored.
.RE

.SS "Access Control Commands"
.sp
.ne 2
.mk
.na
\fB\fBrestrict\fR \fIaddress\fR [ \fBmask\fR \fInumeric_mask\fR ] [ \fIflag\fR ] [ \fI\&.\|.\|.\fR ]\fR
.ad
.sp .6
.RS 4n
\fBxntpd\fR implements a general purpose address\(miand\(mimask based restriction list. The list is sorted by \fBIP\fR address and mask, and the list is searched in this order for matches, with the last match found defining the restriction flags
associated with the incoming packets. The source address of incoming packets is used for the match, with the 32 bit address being logically and'ed with the mask associated with the restriction entry and then compared with the entry's address (which has also been and'ed with the mask) to look for
a match. The "mask" argument defaults to 255.255.255.255, meaning that the "address" is treated as the address of an individual host. A default entry (address 0.0.0.0, mask 0.0.0.0) is always included and, given the sort algorithm, is always the first entry in the list.
Note that, while "address" is normally given in dotted\(miquad format, the text string "default", with no mask option, may be used to indicate the default entry.
.sp
In the current implementation, flags always restrict access, i.e., an entry with no flags indicates that free access to the server is to be given. The flags are not orthogonal, in that more restrictive flags often make less restrictive ones redundant. The flags can generally be classed into
two categories, those which restrict time service and those which restrict informational queries and attempts to do run time reconfiguration of the server.
.sp
One or more of the following flags may be specified:
.sp
.ne 2
.mk
.na
\fB\fBignore\fR\fR
.ad
.RS 23n
.rt  
Ignore all packets from hosts which match this entry. If this flag is specified neither queries nor time server polls will be responded to.
.RE

.sp
.ne 2
.mk
.na
\fB\fBnoquery\fR\fR
.ad
.RS 23n
.rt  
Ignore all \fBNTP\fR mode 7 packets (i.e., information queries and configuration requests) from the source. Time service is not affected.
.RE

.sp
.ne 2
.mk
.na
\fB\fBnomodify\fR\fR
.ad
.RS 23n
.rt  
Ignore all \fBNTP\fR mode 7 packets which attempt to modify the state of the server (i.e., run time reconfiguration). Queries which return information are permitted.
.RE

.sp
.ne 2
.mk
.na
\fB\fBnotrap\fR\fR
.ad
.RS 23n
.rt  
Decline to provide mode 6 control message trap service to matching hosts. The trap service is a subsystem of the mode 6 control message protocol which is intended for use by remote event logging programs.
.RE

.sp
.ne 2
.mk
.na
\fB\fBlowpriotrap\fR\fR
.ad
.RS 23n
.rt  
Declare traps set by matching hosts to be low priority. The number of traps a server can maintain is limited. The current limit is 3. Traps are usually assigned on a first come, first served basis, with later trap requestors being denied service. This flag modifies the assignment
algorithm by allowing low priority traps to be overridden by later requests for normal priority traps.
.RE

.sp
.ne 2
.mk
.na
\fB\fBnoserve\fR\fR
.ad
.RS 23n
.rt  
Ignore \fBNTP\fR packets whose mode is other than 7. In effect, time service is denied, though queries may still be permitted.
.RE

.sp
.ne 2
.mk
.na
\fB\fBnopeer\fR\fR
.ad
.RS 23n
.rt  
Provide stateless time service to polling hosts, but do not allocate peer memory resources to these hosts even if they otherwise might be considered useful as future synchronization partners.
.RE

.sp
.ne 2
.mk
.na
\fB\fBnotrust\fR\fR
.ad
.RS 23n
.rt  
Treat these hosts normally in other respects, but never use them as synchronization sources.
.RE

.sp
.ne 2
.mk
.na
\fB\fBlimited\fR\fR
.ad
.RS 23n
.rt  
These hosts are subject to a limitation on number of clients from the same net that will be accepted. Net in this context refers to the IP notion of net (class A, class B, class C, etc.). Only the first \fIclient_limit\fR hosts that have shown up at the server
and that have been active during the last \fIclient_limit_period\fR seconds are accepted. Requests from other clients from the same net are rejected. Only time request packets are taken into account. "Private", "control", and "broadcast"
packets are not subject to client limitation and therefore do not contribute to client count. A history of clients is kept using the monitoring capability of \fBxntpd\fR. Thus, monitoring is active as long as there is a restriction entry with the \fBlimited\fR flag. The
default value for \fIclient_limit\fR is 3. The default value for \fIclient_limit_period\fR is 3600 seconds. Currently both variables are not runtime configurable.
.RE

.sp
.ne 2
.mk
.na
\fB\fBntpport\fR\fR
.ad
.RS 23n
.rt  
This is actually a match algorithm modifier, rather than a restriction flag. Its presence causes the restriction entry to be matched only if the source port in the packet is the standard \fBNTP UDP\fR port (123). Both \fBntpport\fR and \fBnon\(mintpport\fR may be specified. The \fBntpport\fR is considered more specific and is sorted later in the list.
.sp
Default restriction list entries, with the flags, \fBignore\fR, \fBntpport\fR, for each of the local host's interface addresses are inserted into the table at startup to prevent the server from attempting to synchronize to its own time. A default entry is also always
present, though if it is otherwise unconfigured no flags are associated with the default entry (i.e., everything besides your own \fBNTP\fR server is unrestricted).
.sp
The restriction facility was added to allow the current access policies of the time servers running on the NSF net backbone to be implemented with \fBxntpd\fR as well. This facility may be useful for keeping unwanted or broken remote time servers from affecting your own. However,
it should not be considered an alternative to the standard \fBNTP\fR authentication facility.
.RE

.sp
.ne 2
.mk
.na
\fB\fBclientlimit\fR \fBlimit\fR\fR
.ad
.RS 23n
.rt  
Sets \fIclient_limit\fR to \fBlimit\fR; allows configuration of client limitation policy. This variable defines the number of clients from the same network that are allowed to use the server.
.RE

.sp
.ne 2
.mk
.na
\fB\fBclientperiod period\fR\fR
.ad
.RS 23n
.rt  
Sets \fIclient_limit_period\fR; allows configuration of client limitation policy. This variable specifies the number of seconds after which a client is considered inactive and thus no longer is counted for client limit restriction.
.RE

.RE

.SS "Monitoring Commands"
.sp
.ne 2
.mk
.na
\fB\fBstatsdir\fR \fI/directory path/\fR\fR
.ad
.sp .6
.RS 4n
Indicates the full path of a directory where statistics files should be created (see below). This keyword allows the (otherwise constant) filegen filename prefix to be modified for file generation sets used for handling statistics logs (see \fBfilegen\fR statement
below).
.RE

.sp
.ne 2
.mk
.na
\fB\fBstatistics\fR \fIname .\|.\|.\fR\fR
.ad
.sp .6
.RS 4n
Enables writing of statistics records. Currently, three kinds of statistics are supported. Each type is described below by giving its \fIname\fR, a sample line of data, and an explanation of each field: 
.sp
.ne 2
.mk
.na
\fB\fBloopstats\fR\fR
.ad
.RS 13n
.rt  
enables recording of loop filter statistics information. Each update of the local clock outputs a line of the following form to the file generation set named "loopstats":
.sp
.in +2
.nf
48773  10847.650  0.0001307  17.3478  2
.fi
.in -2
.sp

.RE

.sp
.ne 2
.mk
.na
\fB\fBField No.\fR\fR
.ad
.RS 13n
.rt  
\fBDescription\fR
.RE

.sp
.ne 2
.mk
.na
\fB1\fR
.ad
.RS 13n
.rt  
The date (Modified Julian day)
.RE

.sp
.ne 2
.mk
.na
\fB2\fR
.ad
.RS 13n
.rt  
The time (seconds and fraction past \fBUTC\fR midnight)
.RE

.sp
.ne 2
.mk
.na
\fB3\fR
.ad
.RS 13n
.rt  
Time offset in seconds
.RE

.sp
.ne 2
.mk
.na
\fB4\fR
.ad
.RS 13n
.rt  
Frequency offset in parts-per-million
.RE

.sp
.ne 2
.mk
.na
\fB5\fR
.ad
.RS 13n
.rt  
Time constant of the clock-discipline algorithm at each update of the clock
.RE

.sp
.ne 2
.mk
.na
\fB\fBpeerstats\fR\fR
.ad
.RS 13n
.rt  
enables recording of peer statistics information. This includes statistics records of all peers of a \fBNTP\fR server and of the 1-pps signal, where present and configured. Each valid update appends a line similar to the one below, to the current element of a file
generation set named "peerstats":
.sp
.in +2
.nf
48773  10847.650  127.127.4.1  9714  -0.001605  \e
    0.00000  0.00142
.fi
.in -2
.sp

.RE

.sp
.ne 2
.mk
.na
\fB\fBField No.\fR\fR
.ad
.RS 13n
.rt  
\fBDescription\fR
.RE

.sp
.ne 2
.mk
.na
\fB1\fR
.ad
.RS 13n
.rt  
The date (Modified Julian Day)
.RE

.sp
.ne 2
.mk
.na
\fB2\fR
.ad
.RS 13n
.rt  
The time (seconds and fraction past \fBUTC\fR midnight)
.RE

.sp
.ne 2
.mk
.na
\fB3\fR
.ad
.RS 13n
.rt  
The peer address in dotted-quad notation
.RE

.sp
.ne 2
.mk
.na
\fB4\fR
.ad
.RS 13n
.rt  
peer status. The status field is encoded in hex in the format described in Appendix B.2.2 of the \fBNTP\fR specification, \fIRFC 1305\fR.
.RE

.sp
.ne 2
.mk
.na
\fB5\fR
.ad
.RS 13n
.rt  
Offset in seconds
.RE

.sp
.ne 2
.mk
.na
\fB6\fR
.ad
.RS 13n
.rt  
Delay in seconds
.RE

.sp
.ne 2
.mk
.na
\fB7\fR
.ad
.RS 13n
.rt  
Dispersion in seconds
.RE

.sp
.ne 2
.mk
.na
\fB\fBclockstats\fR\fR
.ad
.RS 14n
.rt  
enables recording of clock driver statistics information. Each update received from a clock driver outputs a line of the following form to the file generation set named "clockstats": 
.sp
.in +2
.nf
49213  525.624  127.127.4.1  93  226  \e
  00:08:29.606  D
.fi
.in -2
.sp

.RE

.sp
.ne 2
.mk
.na
\fB\fBField No.\fR\fR
.ad
.RS 14n
.rt  
\fBDescription\fR
.RE

.sp
.ne 2
.mk
.na
\fB1\fR
.ad
.RS 14n
.rt  
The date (Modified Julian Day)
.RE

.sp
.ne 2
.mk
.na
\fB2\fR
.ad
.RS 14n
.rt  
The time (seconds and fraction past \fBUTC\fR midnight)
.RE

.sp
.ne 2
.mk
.na
\fB3\fR
.ad
.RS 14n
.rt  
The clock address in dotted-quad notation
.RE

.sp
.ne 2
.mk
.na
\fB4\fR
.ad
.RS 14n
.rt  
The last timecode received from the clock in decoded \fBASCII\fR format, where meaningful
.sp
In some clock drivers a good deal of additional information can be gathered and displayed as well.
.sp
Statistic files are managed using file generation sets (see \fBfilegen\fR below). The information obtained by enabling statistics recording allows analysis of temporal properties of a \fBxntpd\fR server. It is usually only useful to primary servers or maybe main
campus servers.
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBfilegen\fR \fIname\fR [ \fBfile\fR \fIfilename\fR ] [ \fBtype\fR \fItypename\fR ][ \fBflag\fR \fIflagval\fR ]\fR
.ad
.br
.na
\fB[  \fBlink\fR\||\|\fBnolink\fR ] \fB[\fR enable\fB\||\|\fRdisable ]\fR
.ad
.sp .6
.RS 4n
Configures setting of generation file set \fIname\fR. Generation file sets provide a means for handling files that are continuously growing during the lifetime of a server. Server statistics are a typical example for such files. Generation file sets provide
access to a set of files used to store the actual data. At any time at most one element of the set is being written to. The \fBtype\fR given specifies when and how data will be directed to a new element of the set. This way, information stored in elements of a file set that are currently
unused are available for administrational operations without the risk of disturbing the operation of \fBxntpd\fR. (Most important: they can be removed to free space for new data produced.)
.sp
Filenames of set members are built from three elements: 
.sp
.ne 2
.mk
.na
\fB\fIprefix\fR\fR
.ad
.RS 12n
.rt  
This is a constant filename path. It is not subject to modifications via the \fBfilegen\fR statement. It is defined by the server, usually specified as a compile time constant. It may, however, be configurable for individual file generation sets via other commands.
For example, the prefix used with "loopstats" and "peerstats" filegens can be configured using the \fBstatsdir\fR statement explained above.
.RE

.sp
.ne 2
.mk
.na
\fB\fIfilename\fR\fR
.ad
.RS 12n
.rt  
This string is directly concatenated to the \fIprefix\fR mentioned above (no intervening `/' (slash)). This can be modified using the \fBfile\fR argument to the \fBfilegen\fR statement. No `.\|.' elements are allowed in this
component to prevent filenames referring to parts outside the filesystem hierarchy denoted by \fIprefix\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fIsuffix\fR\fR
.ad
.RS 12n
.rt  
This part is reflects individual elements of a file set. It is generated according to the \fBtype\fR of a file set as explained below.
.RE

A file generation set is characterized by its type. The following types are supported:
.sp
.ne 2
.mk
.na
\fB\fBnone\fR\fR
.ad
.RS 9n
.rt  
The file set is actually a single plain file.
.RE

.sp
.ne 2
.mk
.na
\fB\fBpid\fR\fR
.ad
.RS 9n
.rt  
One element of file set is used per incarnation of a \fBxntpd\fR server. This type does not perform any changes to file set members during runtime. However it provides an easy way of separating files belonging to different \fBxntpd\fR server incarnations.
The set member filename is built by appending a `.' (dot) to concatenated \fIprefix\fR and \fIfilename\fR strings, and appending the decimal representation of the process id of the \fBxntpd\fR server process.
.RE

.sp
.ne 2
.mk
.na
\fB\fBday\fR\fR
.ad
.RS 9n
.rt  
One file generation set element is created per day. The term \fIday\fR is based on \fBUTC\fR . A day is defined as the period between 00:00 and 24:00 \fBUTC\fR . The file set member suffix consists of a `.' (dot) and a day specification
in the form, \fIYYYYMMDD\fR. \fIYYYY\fR is a 4 digit year number (e.g., 1992). \fIMM\fR is a two digit month number. \fIDD\fR is a two digit day number. Thus, all information written at December 10th, 1992 would
end up in a file named, \fIPrefixFilename\fR.19921210.
.RE

.sp
.ne 2
.mk
.na
\fB\fBweek\fR\fR
.ad
.RS 9n
.rt  
Any file set member contains data related to a certain week of a year. The term \fIweek\fR is defined by computing "day of year" modulo 7. Elements of such a file generation set are distinguished by appending the following suffix to the file set
filename base: a dot, a four digit year number, the letter `W', and a two digit week number. For example, information from January, 5th 1992 would end up in a file with suffix ".1992W1".
.RE

.sp
.ne 2
.mk
.na
\fB\fBmonth\fR\fR
.ad
.RS 9n
.rt  
One generation file set element is generated per month. The file name suffix consists of a dot, a four digit year number, and a two digit month.
.RE

.sp
.ne 2
.mk
.na
\fB\fByear\fR\fR
.ad
.RS 9n
.rt  
One generation file elment is generated per year. The filename suffix consists of a dot and a 4 digit year number.
.RE

.sp
.ne 2
.mk
.na
\fB\fBage\fR\fR
.ad
.RS 9n
.rt  
This type of file generation sets changes to a new element of the file set every 24 hours of server operation. The filename suffix consists of a dot, the letter `a', and an eight digit number. This number is taken to be the number of seconds the server is running at the start of
the corresponding 24 hour period.
.RE

Information is only written to a file generation set when this set is \fBenabled\fR. Output is prevented by specifying, \fBdisabled\fR.
.sp
It is convenient to be able to access the current element of a file generation set by a fixed name. This feature is enabled by specifying \fBlink\fR and disabled using \fBnolink\fR. If \fBlink\fR is specified, a hard link from the current file set element
to a file without suffix is created. When there is already a file with this name and the number of links of this file is one, it is renamed appending a dot, the letter, `C', and the pid of the \fBxntpd\fR server process. When the number of links is greater than one, the file is unlinked.
This allows the current file to be accessed by a constant name.
.RE

.SS "Miscellaneous Commands"
.sp
.ne 2
.mk
.na
\fB\fBbroadcastdelay\fR \fIseconds\fR\fR
.ad
.sp .6
.RS 4n
The broadcast and multicast modes require a special calibration to determine the network delay between the local and remote servers. Ordinarily, this is done automatically by the initial protocol exchanges between the local and remote servers. In some cases, the calibration procedure
may fail due to, for example, network or server access controls. This command specifies the default delay to be used under these circumstances. Typically (for Ethernet), a number between 0.003 and 0.007 is appropriate for \fIseconds\fR. When this command is not used, the default
is 0.004 seconds.
.RE

.sp
.ne 2
.mk
.na
\fB\fBtrap\fR \fIhost_address\fR [ \fBport\fR \fIport_number\fR ]\fR
.ad
.br
.na
\fB[ \fBinterface\fR \fIinterface_address\fR ]\fR
.ad
.sp .6
.RS 4n
Configures a trap receiver at the given \fIhost_address\fR and \fIport_number\fR for sending messages with the specified local \fIinterface_address.\fR If the port number is unspecified, a value of 18447 is used. If
the interface address is not specified, the message is sent with the source address of the local interface the message is sent through. On a multi-homed host, the interface used may change with routing changes.
.sp
C information from the server in a log file. While such monitor programs may also request their own trap dynamically, configuring a trap receiver ensures that no messages are lost when the server is started.
.RE

.sp
.ne 2
.mk
.na
\fB\fBsetvar\fR \fIvariable\fR [ \fIdefault\fR ]\fR
.ad
.sp .6
.RS 4n
This command adds an additional system variable. Variables like this can be used to distribute additional information such as the access policy. If the variable of the form, \fIvariable_name=value\fR is followed by the \fIdefault\fR keyword,
the variable will be listed as one of the default system variables (see the \fBntpq\fR(1M) command). Additional variables serve informational purposes only. They can
be listed; but they are not related to the protocol. The known protocol variables always override any variables defined via the \fBsetvar\fR mechanism.
.sp
Three special variables contain the names of all variable of the same group. \fIsys_var_list\fR holds the names of all system variables. \fIpeer_var_list\fR holds the names of all peer variables. And \fIclock_var_list\fR hold
the names of the reference clock variables.
.RE

.sp
.ne 2
.mk
.na
\fB\fBmonitor\fR [ \fByes\||\|no\fR ]\fR
.ad
.br
.na
\fB\fBauthenticate\fR [ \fByes\||\|no\fR ]\fR
.ad
.sp .6
.RS 4n
These commands have been superseded by the \fBenable\fR and \fBdisable\fR commands. They are listed here for historical purposes.
.RE

.sp
.ne 2
.mk
.na
\fB\fBlogconfig\fR \fIconfigkeyword\fR\fR
.ad
.sp .6
.RS 4n
Controls the amount of output written to syslog or the logfile. By default all output is turned on. \fIconfigkeyword\fR is formed by concatenating the message class with the event class. It is permissible to use the prefix, \fBall\fR, instead of
a message class. A message class may also be followed by the keyword, \fBall\fR, meaning to enable/disable all of the respective message class. All \fIconfigkeywords\fR can be prefixed with the symbols, `=', `+' and `\(mi' . Here, `=' sets the syslogmask, `+'
adds messages, and `\(mi' removes messages. Syslog messages can be controlled in four classes: \fIsys\fR, \fIpeer\fR, \fIclock\fR, \fBsync\fR. Within these classes four types of messages can be controlled. Each is described
below, along with its \fBconfigkeyword\fR: 
.sp
.ne 2
.mk
.na
\fB\fBConfigkeyword\fR\fR
.ad
.RS 17n
.rt  
\fBMessage\fR \fBtype\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBinfo\fR\fR
.ad
.RS 17n
.rt  
Informational messages control configuration information.
.RE

.sp
.ne 2
.mk
.na
\fB\fBevents\fR\fR
.ad
.RS 17n
.rt  
Event messages control logging of events (reachability, synchronization, alarm conditions).
.RE

.sp
.ne 2
.mk
.na
\fB\fBstatistics\fR\fR
.ad
.RS 17n
.rt  
Statistical messages control statistical output.
.RE

.sp
.ne 2
.mk
.na
\fB\fBstatus\fR\fR
.ad
.RS 17n
.rt  
Status messages describe mainly the synchronization status.
.RE

A minimal log configuration might look like this:
.sp
.in +2
.nf
logconfig =syncstatus +sysevents
.fi
.in -2
.sp

A configuration like this lists, just the synchronization state of \fBxntp\fR and the major system events. For a simple reference server, the following minimum message configuration could be useful: 
.sp
.in +2
.nf
logconfig =syncall +clockall
.fi
.in -2
.sp

This configuration lists all clock information and synchronization information. All other events and messages about peers, system events and so on, is suppressed.
.RE

.SS "Authentication Key File Format"
.LP
The \fBNTP\fR standard specifies an extension to allow verification of the authenticity of received \fBNTP\fR packets, and to provide an indication of authenticity in outgoing packets. This is implemented in \fBxntpd\fR using the \fBDES\fR or \fBMD5\fR algorithms to compute a digital signature, or message-digest. The specification allows any one of possibly 4 billion keys, numbered with 32 bit key identifiers, to be used to authenticate an association. The servers involved in an association must agree on the key and key identifier
used to authenticate their data. However they must each learn the key and key identifier independently. In the case of \fB DES\fR, the keys are 56 bits long with, depending on type, a parity check on each byte. In the case of \fBMD5\fR, the keys are 64 bits (8 bytes). \fBxntpd\fR reads its keys from a file specified using the \fB-k\fR command line option or the \fBkeys\fR statement in the configuration file. While key number 0 is fixed by the \fBNTP\fR standard (as 56 zero bits) and may not be changed, one or more of
the keys numbered 1 through 15 may be arbitrarily set in the keys file.
.LP
The key file uses the same comment conventions as the configuration file. Key entries use a fixed format of the form, \fIkeyno type key\fR. Here, \fIkeyno\fR is a positive integer, \fBtype\fR is a single character which defines the format
the key is given in, and \fIkey\fR is the key itself.
.LP
The \fIkey\fR may be given in one of several different formats, controlled by the \fBtype\fR character. The different key types, and corresponding formats, are described below:
.sp
.ne 2
.mk
.na
\fB\fBKey:\fR\fR
.ad
.RS 11n
.rt  
S
.RE

.sp
.ne 2
.mk
.na
\fB\fBFormat:\fR\fR
.ad
.RS 11n
.rt  
A 64 bit hexadecimal number in \fBDES\fR format
.sp
In this format, the high order 7 bits of each octet are used to form the 56 bit key while the low order bit of each octet is given a value such that odd parity is maintained for the octet. Leading zeroes must be specified (i.e., the key must be exactly 16 hex digits long) and odd parity
must be maintained. Hence a zero key, in standard format, would be given as: 0101010101010101.
.RE

.sp
.ne 2
.mk
.na
\fB\fBKey:\fR\fR
.ad
.RS 11n
.rt  
N
.RE

.sp
.ne 2
.mk
.na
\fB\fBFormat:\fR\fR
.ad
.RS 11n
.rt  
A 64 bit hexadecimal number in \fBNTP\fR format
.sp
This format is the same as the \fBDES\fR format except the bits in each octet have been rotated one bit right so that the parity bit is now the high order bit of the octet. Leading zeroes must be specified and odd parity must be maintained. A zero key in \fBNTP\fR format
would be specified as: \fB8080808080808080\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBKey:\fR\fR
.ad
.RS 11n
.rt  
A
.RE

.sp
.ne 2
.mk
.na
\fB\fBFormat:\fR\fR
.ad
.RS 11n
.rt  
A 1\(mito\(mi8 character \fBASCII\fR string
.sp
A key is formed from this by using the lower order 7 bits of the \fBASCII\fR representation of each character in the string. Zeroes are added on the right when necessary to form a full width 56 bit key.
.RE

.sp
.ne 2
.mk
.na
\fB\fBKey:\fR\fR
.ad
.RS 11n
.rt  
M
.RE

.sp
.ne 2
.mk
.na
\fB\fBFormat:\fR\fR
.ad
.RS 11n
.rt  
A 1\(mito\(mi8 character \fBASCII\fR string, using the MD5 authentication scheme.
.sp
Note that both the keys and the authentication schemes (\fBDES\fR or \fBMD5\fR) must be identical between a set of peers sharing the same key number.
.RE

.SS "Primary Clock Support"
.LP
\fBxntpd\fR has been built to be compatible with all supported types of reference clocks. A reference clock is generally (though not always) a radio timecode receiver which is synchronized to a source of standard time such as the services offered by the \fBNRC\fR in
Canada and \fBNIST\fR in the U.S. The interface between the computer and the timecode receiver is device dependent and will vary, but it is often a serial port.
.LP
For the purposes of configuration, \fBxntpd\fR treats reference clocks in a manner analogous to normal \fBNTP\fR peers as much as possible. Reference clocks are referred to by address, much as a normal peer is. However, an invalid \fBIP\fR address is
used to distinguish them from normal peers. Reference clock addresses are of the form \fI127.127.t.u\fR where \fIt\fR is an integer denoting the clock type and \fIu\fR indicates the type\(mispecific unit number. Reference clocks
are configured using a \fBserver\fR statement in the configuration file where the \fIhost_address\fR is the clock address. The \fBkey\fR, \fBversion\fR and \fBttl\fR options are not used for reference clock support. Some
reference clocks require a \fBmode\fR option to further specify their operation. The \fBprefer\fR option can be useful to persuade the server to cherish a reference clock with somewhat more enthusiasm than other reference clocks or peers. Clock addresses may generally
be used anywhere in the configuration file that a normal \fBIP\fR address can be used. For example, they can be used in \fBrestrict\fR statements, although such use would normally be considered strange.
.LP
Reference clock support provides the \fBfudge\fR command, which can be used to configure reference clocks in special ways. The generic format that applies to this command is, 
.sp
.in +2
.nf
fudge \fI127.127.t.u\fR [  \fBtime1\fR \fIsecs\fR ] [  time2 \fIsecs\fR ]\e
    [  stratum \fIint\fR ] [  refid \fIint\fR ] \e
    [  flag1 \fI0\||\|1\fR ] [  flag2 \fI0\||\|1\fR ] [  flag3 \fI0\||\|1\fR ] [  flag4 \fI0\||\|1 \fR]
.fi
.in -2
.sp

.LP
with options described as follows: 
.sp
.ne 2
.mk
.na
\fB\fItime1\fR\fR
.ad
.br
.na
\fB\fItime2\fR\fR
.ad
.RS 11n
.rt  
Are specified in fixed point seconds and used in some clock drivers as calibration constants. By convention, and unless indicated otherwise, \fBtime1\fR is used as a calibration constant to adjust the nominal time offset of a particular clock to agree with an external
standard, such as a precision PPS signal. The specified offset is in addition to the propagation delay provided by other means, such as internal DIP switches.
.RE

.sp
.ne 2
.mk
.na
\fB\fIstratum\fR\fR
.ad
.RS 11n
.rt  
Is a number in the range zero to 15 and is used to assign a nonstandard operating stratum to the clock.
.RE

.sp
.ne 2
.mk
.na
\fB\fIrefid\fR\fR
.ad
.RS 11n
.rt  
Is an ASCII string in the range one to four characters and is used to assign a nonstandard reference identifier to the clock.
.RE

.sp
.ne 2
.mk
.na
\fB\fIflag1\fR\fR
.ad
.br
.na
\fB\fIflag2\fR\fR
.ad
.br
.na
\fB\fIflag3\fR\fR
.ad
.br
.na
\fB\fIflag4\fR\fR
.ad
.RS 11n
.rt  
Are binary flags used for customizing the clock driver. The interpretation of these values, and whether they are used at all, is a function of the needs of the particular clock driver. However, by convention, and unless indicated otherwise, \fIflag3\fR invokes
the TIOCSPPS ioctl, while \fIflag4\fR is used to enable recording verbose monitoring data to the clockstats file configured with the \fBfilegen\fR command.
.RE

.LP
Ordinarily, the stratum of a reference clock is zero, by default. Since the \fBxntpd\fR daemon adds one to the stratum of each peer, a primary server ordinarily displays stratum one. In order to provide engineered backups, it is often useful to specify the reference clock stratum
as greater than zero. The \fBstratum\fR option is used for this purpose. Also, in cases involving both a reference clock and a 1-pps discipline signal, it is useful to specify the reference clock identifier as other than the default, depending on the driver. The \fIrefid\fR option
is used for this purpose. Except where noted, these options apply to all clock drivers.
.LP
\fBxntpd\fR on Unix machines currently supports several different types of clock hardware. It also supports a special pseudo\(miclock used for backup or when no other clock source is available. In the case of most of the clock drivers, support for a 1-pps precision timing
signal is available as described in the \fBREADME\fR file in the \fB\&./doc directory of the xntp3\fR program distribution. The clock drivers, and the addresses used to configure them, are described in the file, \fBREADME.refclocks\fR, in the doc directory
of the current program distribution.
.SS "Variables"
.LP
Most variables used by the \fBNTP\fR protocol can be examined with \fBntpq\fR (mode 6 messages). Currently very few variables can be modified via mode 6 messages. These variables are either created with the \fBsetvar\fR directive or the leap warning
variables. The leap warning bits that can be set in the \fIleapwarning\fR variable (up to one month ahead). Both, the \fIleapwarning\fR and in the \fIleapindication\fR variable, have a slightly different encoding than the usual \fBleap\fR bits interpretation:
.sp
.ne 2
.mk
.na
\fB\fB00\fR\fR
.ad
.RS 9n
.rt  
The daemon passes the leap bits of its synchronization source (usual mode of operation).
.RE

.sp
.ne 2
.mk
.na
\fB\fB01/10\fR\fR
.ad
.RS 9n
.rt  
A leap second is added/deleted (operator forced leap second).
.RE

.sp
.ne 2
.mk
.na
\fB\fB11\fR\fR
.ad
.RS 9n
.rt  
Leap information from the synchronization source is ignored (thus \fBLEAP_NOWARNING\fR is passed on).
.RE

.SH FILES
.sp
.ne 2
.mk
.na
\fB\fB/etc/inet/ntp.conf\fR\fR
.ad
.RS 24n
.rt  
Default name of the configuration file
.RE

.sp
.ne 2
.mk
.na
\fB\fB/etc/ntp/ntp.drift\fR\fR
.ad
.RS 24n
.rt  
Conventional name of the drift file
.RE

.sp
.ne 2
.mk
.na
\fB\fB/etc/inet/ntp.keys\fR\fR
.ad
.RS 24n
.rt  
Conventional name of the key file
.RE

.sp
.ne 2
.mk
.na
\fB\fB/etc/inet/ntp.server\fR\fR
.ad
.RS 24n
.rt  
Sample server configuration file
.RE

.SH ATTRIBUTES
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWntpu
.TE

.SH SEE ALSO
.LP
\fBsvcs\fR(1), \fBntpdate\fR(1M), \fBntpq\fR(1M), \fBntptrace\fR(1M), \fBsvcadm\fR(1M), \fBxntpdc\fR(1M), \fBrename\fR(2), \fBattributes\fR(5), \fBsmf\fR(5)
.SH NOTES
.LP
The \fBxntpd\fR service is managed by the service management facility, \fBsmf\fR(5), under the service identifier:
.sp
.in +2
.nf
svc:/network/ntp:default
.fi
.in -2
.sp

.LP
Administrative actions on this service, such as enabling, disabling, or requesting restart, can be performed using \fBsvcadm\fR(1M). The service's status can
be queried using the \fBsvcs\fR(1) command.
