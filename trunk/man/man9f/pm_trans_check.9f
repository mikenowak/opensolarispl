'\" te
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").  
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"  Copyright (c) 1999, Sun Microsystems, Inc.
.\"  All Rights Reserved
.TH pm_trans_check 9F "16 Oct 1999" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
pm_trans_check \-  Device power cycle
advisory check
.SH SYNOPSIS
.LP
.nf
#include <sys/sunddi.h>

\fBint\fR \fBpm_trans_check\fR(\fBstruct pm_trans_data *\fR\fIdatap,\fR time_t *\fIintervalp\fR);
.fi

.SH INTERFACE LEVEL
.LP
Solaris DDI specific (Solaris DDI)
.SH PARAMETERS
.sp
.ne 2
.mk
.na
\fB\fIdatap \fR \fR
.ad
.RS 11n
.rt  
Pointer to a \fBpm_trans_data\fR structure  
.RE

.sp
.ne 2
.mk
.na
\fB\fIintervalp\fR \fR
.ad
.RS 14n
.rt  
Pointer to time difference
when next power cycle will be advised  
.RE

.SH DESCRIPTION
.LP
The \fBpm_trans_check\fR(9F) function checks if a power-cycle is currently
advised based on data in the \fBpm_trans_data\fR  structure.
This function is provided to prevent damage to devices from excess power
cycles; drivers for devices that are sensitive to the number of power cycles
should call \fBpm_trans_check\fR(9F) from their \fBpower\fR(9E) function before powering-off
a device. If \fBpm_trans_check\fR(9F)
indicates that the device should not be power cycled, the driver should
not attempt to power cycle the device and should fail the call to \fBpower\fR(9E) entry
point. 
.LP
If \fBpm_trans_check\fR(9F) returns that it is not advised to power cycle
the device, it attempts to calculate when the  next power cycle is advised,
based on the supplied parameters. In such case, \fIintervalp  \fRreturns
the time difference (in seconds) from the current time to when the next
power cycle is advised. If the time for the next power cycle cannot be determined,\fI intervalp  \fRindicates \fB0\fR.  
.LP
To avoid excessive calls to the \fBpower\fR(9E)
entry point during a period when power cycling is not advised, the driver
should mark the corresponding device component busy for the  \fIintervalp  \fR time period (if interval is not 0). Conveniently,
the driver can utilize the fact that calls to \fBpm_busy_component\fR(9F) are stacked. If power cycling is not advised, the
driver can call \fBpm_busy_component\fR(9F)
and issue a \fBtimeout\fR(9F) for the \fIintervalp  \fR time. The \fBtimeout()\fR handler can
issue the corresponding \fBpm_idle_component\fR(9F) call. 
.LP
When the format field of  \fBpm_trans_data\fR is set
to \fBDC_SCSI_FORMAT\fR, the caller must  provide valid data
in \fBsvc_date[]\fR, \fBlifemax\fR,
and \fBncycles\fR. Currently, flag must be set to \fI0\fR. 
.sp
.in +2
.nf
struct pm_scsi_cycles {
         int lifemax;                       /* lifetime max power cycles */
         int ncycles;                       /* number of cycles so far */
         char svc_date[DC_SCSI_MFR_LEN];    /* service date YYYYWW */
         int flag;                          /* reserved for future */
    };

    struct pm_trans_data {
         int format;                        /* data format */
         union {
              struct pm_scsi_cycles scsi_cycles;
         } un;
    };
.fi
.in -2

.SH RETURN VALUES
.sp
.ne 2
.mk
.na
\fB\fB1\fR\fR
.ad
.RS 6n
.rt  
 Power cycle
is advised
.RE

.sp
.ne 2
.mk
.na
\fB\fB0\fR\fR
.ad
.RS 6n
.rt  
 Power cycle is not advised
.RE

.sp
.ne 2
.mk
.na
\fB\fB-1\fR\fR
.ad
.RS 6n
.rt  
 Error due to invalid argument.
.RE

.SH ATTRIBUTES
.LP
See \fBattributes\fR(5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityEvolving 
.TE

.SH SEE ALSO
.LP
 \fB power.conf\fR(4), \fB attributes\fR(5), \fB power\fR(9E)
.LP
\fIWriting Device Drivers\fR  
.LP
\fIUsing Power Management\fR  
