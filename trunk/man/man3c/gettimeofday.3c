'\" te
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").  
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\" Copyright 1989 AT&T.  Copyright (c) 1980 Regents of the University of California.  All rights reserved.  The Berkeley software License Agreement  specifies the terms and conditions for redistribution.  Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved.
.TH gettimeofday 3C "1 Aug 2003" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
gettimeofday, settimeofday \- get or set the date and time
.SH SYNOPSIS
.LP
.nf
#include <sys/time.h>

\fBint\fR \fBgettimeofday\fR(\fBstruct timeval *\fR\fItp\fR, \fBvoid *\fR\fItzp\fR);
.fi

.LP
.nf
\fBint\fR \fBsettimeofday\fR(\fBstruct timeval *\fR\fItp\fR, \fBvoid *\fR\fItzp\fR);
.fi

.SH DESCRIPTION
.LP
The \fBgettimeofday()\fR function gets and the \fBsettimeofday()\fR
function sets the system's notion of the current time. The current time is expressed in elapsed seconds and microseconds since 00:00 Universal Coordinated Time, January 1, 1970. The resolution of the system clock is hardware dependent; the time may be updated continuously or in clock ticks.
.LP
The \fItp\fR argument points to a \fBtimeval\fR structure, which includes the following members:
.sp
.in +2
.nf
long    tv_sec;    /* seconds since Jan. 1, 1970 */
long    tv_usec;   /* and microseconds */
.fi
.in -2

.LP
If \fItp\fR is a null pointer, the current time information is not returned or set.
.LP
The TZ environment variable holds time zone information. See \fBTIMEZONE\fR(4).
.LP
The \fItzp\fR argument to \fBgettimeofday()\fR and \fBsettimeofday()\fR is ignored.
.LP
Only privileged processes can set the time of day.
.SH RETURN VALUES
.LP
Upon successful completion, \fB0\fR is returned.  Otherwise, \fB\(mi1\fR is returned and \fBerrno\fR is set to indicate the error.
.SH ERRORS
.LP
The \fBsettimeofday()\fR function will fail if:
.sp
.ne 2
.mk
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 10n
.rt  
The structure pointed to by \fItp\fR specifies an invalid time.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEPERM\fR\fR
.ad
.RS 10n
.rt  
The {\fBPRIV_SYS_TIME\fR} privilege was not asserted in the effective set of the calling process.
.RE

.LP
The \fBgettimeofday()\fR function will fail for 32-bit interfaces if:
.sp
.ne 2
.mk
.na
\fB\fBEOVERFLOW\fR\fR
.ad
.RS 13n
.rt  
The system time has progressed beyond 2038, thus the size of the \fBtv_sec\fR member of the \fBtimeval\fR structure pointed to by \fItp\fR is insufficient to hold the current
time in seconds.
.RE

.SH USAGE
.LP
If the \fBtv_usec\fR member of \fItp\fR is > 500000, \fBsettimeofday()\fR rounds the seconds upward. If the time needs to be set with better than one second accuracy, call \fBsettimeofday()\fR for the seconds and then \fBadjtime\fR(2) for finer accuracy.
.SH ATTRIBUTES
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface Stability\fBgettimeofday()\fR is Standard.
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.LP
\fBadjtime\fR(2), \fBctime\fR(3C), \fBgethrtime\fR(3C), \fBTIMEZONE\fR(4), \fBattributes\fR(5), \fBprivileges\fR(5), \fBstandards\fR(5)
