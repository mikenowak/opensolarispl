'\" te
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").  
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"  Copyright (c) 1992, X/Open Company Limited  All Rights Reserved  Portions Copyright (c) 2001, Sun Microsystems, Inc.  All Rights Reserved
.TH patch 1 "28 Sep 2001" "SunOS 5.11" "User Commands"
.SH NAME
patch \- apply changes to files
.SH SYNOPSIS
.LP
.nf
\fBpatch\fR [\fB-blNR\fR] [\fB-c\fR | \fB-e\fR | \fB-n\fR | \fB-u\fR] [\fB-d\fR \fIdir\fR] [\fB-D\fR \fIdefine\fR] 
    [\fB-i\fR \fIpatchfile\fR] [\fB-o\fR \fIoutfile\fR] [\fB-p\fR \fInum\fR] [\fB-r\fR \fIrejectfile\fR] 
    [\fIfile\fR]
.fi

.SH DESCRIPTION
.LP
The \fBpatch\fR command reads a source (patch) file containing any of the three forms of difference (diff) listings produced by the \fBdiff\fR(1) command (normal, context or in the style of \fBed\fR(1)) and apply those differences to a file.  By default, \fBpatch\fR reads from the standard input.
.LP
\fBpatch\fR attempts to determine the type of the \fBdiff\fR listing, unless overruled by a \fB-c\fR, \fB-e\fR, or \fB-n\fR option.
.LP
If the patch file contains more than one patch, \fBpatch\fR will attempt to apply each of them as if they came from separate patch files. (In this case the name of the patch file must be determinable for each \fBdiff\fR listing.)
.SH OPTIONS
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
\fB\fB-b\fR\fR
.ad
.RS 13n
.rt  
Saves a copy of the original contents of each modified file, before the differences are applied, in a file of the same name with the suffix \fB\&.orig\fR appended to it. If the file already exists, it will be overwritten. If multiple patches are applied to the same file, the \fB\&.orig\fR file will be written only for the first patch. When the \fB-o\fR \fIoutfile\fR option is
also specified, \fIfile\fR\fB\&.orig\fR will not be created but, if \fIoutfile\fR already exists, \fIoutfile\fR\fB\&.orig\fR will be created.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-c\fR\fR
.ad
.RS 13n
.rt  
Interprets the patch file as a context difference (the output of the command \fBdiff\fR when the \fB-c\fR or \fB-C\fR options are specified).
.RE

.sp
.ne 2
.mk
.na
\fB\fB-d\fR \fIdir\fR\fR
.ad
.RS 13n
.rt  
Changes the current directory to \fIdir\fR before processing as described in \fBEXTENDED DESCRIPTION\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-D\fR \fIdefine\fR\fR
.ad
.RS 13n
.rt  
Marks changes with the C preprocessor construct:
.sp
.in +2
.nf
\fB#ifdef \fR\fIdefine\fR
\&.\|.\|.
#endif
.fi
.in -2
.sp

.RE

.LP
The option-argument \fIdefine\fR will be used as the differentiating symbol.
.sp
.ne 2
.mk
.na
\fB\fB-e\fR\fR
.ad
.RS 17n
.rt  
Interprets the patch file as an \fBed\fR script, rather than a \fBdiff\fR script.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-i\fR \fIpatchfile\fR\fR
.ad
.RS 17n
.rt  
Reads the patch information from the file named by the path name \fIpatchfile\fR, rather than the standard input.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-l\fR\fR
.ad
.RS 17n
.rt  
(The letter ell.) Causes any sequence of blank characters in the difference script to match any sequence of blank characters in the input file. Other characters will be matched exactly.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-n\fR\fR
.ad
.RS 17n
.rt  
Interprets the script as a normal difference.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-N\fR\fR
.ad
.RS 17n
.rt  
Ignores patches where the differences have already been applied to the file; by default, already-applied patches are rejected.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-o\fR \fIoutfile\fR\fR
.ad
.RS 17n
.rt  
Instead of modifying the files (specified by the \fIfile\fR operand or the difference listings) directly, writes a copy of the file referenced by each patch, with the appropriate differences applied, to \fIoutfile\fR. Multiple patches for a single file will be applied to the intermediate versions of the file created by any previous patches, and will result in multiple,
concatenated versions of the file being written to \fIoutfile\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-p\fR \fInum\fR\fR
.ad
.RS 17n
.rt  
For all path names in the patch file that indicate the names of files to be patched, deletes \fInum\fR path name components from the beginning of each path name. If the path name in the patch file is absolute, any leading slashes are considered the first component (that is, \fB-p\fR \fB1\fR removes the leading slashes). Specifying \fB-p\fR \fB0\fR
causes the full path name to be used. If \fB-p\fR is not specified, only the basename (the final path name component) is used.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-R\fR\fR
.ad
.RS 17n
.rt  
Reverses the sense of the patch script. That is, assumes that the difference script was created from the new version to the old version. The \fB-R\fR option cannot be used with \fBed\fR scripts. \fBpatch\fR attempts to reverse each portion of the script before applying it. Rejected differences will be saved in swapped format. If this option is not specified, and until a portion of the patch file is successfully
applied, \fBpatch\fR attempts to apply each portion in its reversed sense as well as in its normal sense. If the attempt is successful, the user will be prompted to determine if the \fB-R\fR option should be set.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-r\fR \fIrejectfile\fR\fR
.ad
.RS 17n
.rt  
Overrides the default reject file name. In the default case, the reject file will have the same name as the output file, with the suffix \fB\&.rej\fR appended to it. See \fBPatch Application\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-u\fR\fR
.ad
.RS 17n
.rt  
Interprets the patch file as a unified context difference, that is, the output of the command \fBdiff\fR when the \fB-u\fR or \fB-U\fR options are specified.
.RE

.SH OPERANDS
.LP
The following operand is supported:
.sp
.ne 2
.mk
.na
\fB\fIfile\fR\fR
.ad
.RS 8n
.rt  
A path name of a file to patch.
.RE

.SH USAGE
.LP
The \fB-R\fR option will not work with \fBed\fR scripts because there is too little information to reconstruct the reverse operation.
.LP
The \fB-p\fR option makes it possible to customize a patch file to local user directory structures without manually editing the patch file. For example, if the file name in the patch file was \fB/curds/whey/src/blurfl/blurfl.c\fR:
.RS +4
.TP
.ie t \(bu
.el o
Setting \fB-p\fR \fB0\fR gives the entire path name unmodified.
.RE
.RS +4
.TP
.ie t \(bu
.el o
Setting \fB-p\fR \fB1\fR gives:
.sp
.in +2
.nf
curds/whey/src/blurfl/blurfl.c
.fi
.in -2
.sp

.RE
.RS +4
.TP
.ie t \(bu
.el o
Without the leading slash, \fB-p\fR \fB4\fR gives:
.sp
.in +2
.nf
blurfl/blurfl.c
.fi
.in -2
.sp

.RE
.RS +4
.TP
.ie t \(bu
.el o
Not specifying \fB-p\fR at all gives:
.sp
.in +2
.nf
blurfl.c
.fi
.in -2
.sp

.RE
.LP
When using \fB-b\fR in some file system implementations, the saving of a \fB\&.orig\fR file may produce unwanted results. In the case of 12-, 13-, or 14-character file names, on file systems supporting 14-character maximum file names, the \fB\&.orig\fR file will overwrite the new file.
.SH ENVIRONMENT VARIABLES
.LP
See \fBenviron\fR(5) for descriptions of the following environment variables that affect the execution of \fBpatch\fR: LANG, LC_ALL, LC_CTYPE, LC_MESSAGES, LC_TIME, and NLSPATH.
.SH OUTPUT FILES
.LP
The output of \fBpatch\fR the save files (\fB\&.orig\fR suffixes) and the reject files (\fB\&.rej\fR suffixes) will be text files.
.SH EXTENDED DESCRIPTION
.LP
A patch file may contain patching instructions for more than one file. File names are determined as specified in \fBPatch Determination\fR. When the \fB-b\fR option is specified, for each patched file, the original will be saved in a file of the same name with the suffix \fB\&.orig\fR appended to it.
.LP
For each patched file, a reject file may also be created as noted in \fBPatch Application\fR. In the absence of an \fB-r\fR option, the name of this file will be formed by appending the suffix \fB\&.rej\fR to the original file name.
.SS "Patch File Format"
.LP
The patch file must contain zero or more lines of header information followed by one or more patches. Each patch must contain zero or more lines of file name identification in the format produced by \fBdiff\fR \fB-c\fR, and one or more sets of \fBdiff\fR output, which are customarily
called hunks.
.LP
\fBpatch\fR recognizes the following expression in the header information:
.sp
.ne 2
.mk
.na
\fB\fBIndex:\fR\fIpathname\fR\fR
.ad
.RS 18n
.rt  
The file to be patched is named \fIpathname\fR.
.RE

.LP
If all lines (including headers) within a patch begin with the same leading sequence of blank characters, \fBpatch\fR will remove this sequence before proceeding. Within each patch, if the type of difference is context, \fBpatch\fR recognizes the following expressions:
.sp
.ne 2
.mk
.na
\fB\fB*\|*\|*\|\fR\fI filename timestamp\fR\fR
.ad
.sp .6
.RS 4n
The patches arose from \fIfilename\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fB\(mi\|\(mi\|\(mi\fR\fI filename timestamp\fR\fR
.ad
.sp .6
.RS 4n
The patches should be applied to \fIfilename\fR.
.RE

.LP
Each hunk within a patch must be the \fBdiff\fR output to change a line range within the original file. The line numbers for successive hunks within a patch must occur in ascending order.
.SS "File Name Determination"
.LP
If no \fIfile\fR operand is specified, \fBpatch\fR performs the following steps to obtain a path name:
.RS +4
.TP
1.
If the patch contains the strings \fB***\fR and \fB\(mi\|\(mi\|\(mi\fR\fI,\fR \fBpatch\fR strips components from the beginning of each path name (depending on the presence or value of the \fB-p\fR option), then tests for the existence of both files in the current directory (or directory specified with the \fB-d\fR option).
.RE
.RS +4
.TP
2.
If both files exist, \fBpatch\fR assumes that no path name can be obtained from this step. If the header information contains a line with the string \fBIndex:\fR, \fBpatch\fR strips components from the beginning of the path name (depending on \fB-p\fR), then tests for the existence of this file in the current directory (or directory specified with the \fB-d\fR option).
.RE
.RS +4
.TP
3.
If an \fBSCCS\fR directory exists in the current directory, \fBpatch\fR will attempt to perform a \fBget\fR \fB-e\fR \fBSCCS/s.\fR\fIfilename\fR command to retrieve an editable version of the file.
.RE
.RS +4
.TP
4.
If no path name can be obtained by applying the previous steps, or if the path names obtained do not exist, \fBpatch\fR will write a prompt to standard output and request a file name interactively from standard input.
.RE
.SS "Patch Application"
.LP
If the \fB-c\fR, \fB-e\fR, \fB-n\fR, or \fB-u\fR option is present, \fBpatch\fR will interpret information within each hunk as a context difference, an \fBed\fR difference, a normal difference, or a unified context difference, respectively. In the absence
of any of these options, \fBpatch\fR determines the type of difference based on the format of information within the hunk.
.LP
For each hunk, \fBpatch\fR begins to search for the place to apply the patch at the line number at the beginning of the hunk, plus or minus any offset used in applying the previous hunk. If lines matching the hunk context are not found, \fBpatch\fR scans both forwards and backwards at least 1000 bytes for a set of lines that match the hunk context.
.LP
If no such place is found and it is a context difference, then another scan will take place, ignoring the first and last line of context. If that fails, the first two and last two lines of context will be ignored and another scan will be made. Implementations may search more extensively for installation locations.
.LP
If no location can be found, \fBpatch\fR will append the hunk to the reject file. The rejected hunk will be written in context-difference format regardless of the format of the patch file. If the input was a normal or \fBed\fR \fB-style\fR difference, the reject file may contain differences with zero lines of context. The line numbers on the hunks in the reject file may be different from the line numbers in the patch file since they will reflect the approximate
locations for the failed hunks in the new file rather than the old one.
.LP
If the type of patch is an \fBed\fR diff, the implementation may accomplish the patching by invoking the \fBed\fR command.
.SH EXIT STATUS
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
\fB\fB0\fR\fR
.ad
.RS 6n
.rt  
Successful completion.
.RE

.sp
.ne 2
.mk
.na
\fB\fB1\fR\fR
.ad
.RS 6n
.rt  
One or more lines were written to a reject file.
.RE

.sp
.ne 2
.mk
.na
\fB\fB>1\fR\fR
.ad
.RS 6n
.rt  
An error occurred.
.RE

.SH ATTRIBUTES
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
Interface StabilityStandard
.TE

.SH SEE ALSO
.LP
\fBed\fR(1), \fBdiff\fR(1), \fBattributes\fR(5), \fBenviron\fR(5), \fBstandards\fR(5)
