#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright 2005 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#ident	"@(#)priv_defs	1.12	05/06/08 SMI"
#
# Privilege name explanation file
# The format of entries is a privilege name starting at the
# beginning of a line directly folowed by a new line followed
# by several lines of texts starting with white space terminated
# by a line with a single newline or not starting with white space
#

contract_event
	Ermöglicht einem Prozess die uneingeschränkte Anforderung 
	kritischer Ereignisse.
	Ermöglicht einem Prozess die Anforderung einer zuverlässigen
	Bereitstellung aller Ereignisse in einer beliebigen 
	Ereigniswarteschlange.

contract_observer
	Ermöglicht einem Prozess die Beobachtung von Vertragsereignissen,
	die von Verträgen generiert wurden, die ihrerseits von nicht mit
	der effektiven Benutzer-ID des Prozesses übereinstimmenden 
	Benutzern erstellt wurden und deren Eigentum sind.
	Ermöglicht es einem Prozess, Vertragsereignis-Endpunkte zu öffnen,
	die zu Verträgen gehören, die von nicht mit der effektiven 
	Benutzer-ID des Prozesses übereinstimmenden Benutzern erstellt 
	wurden und deren Eigentum sind.

cpc_cpu
	Ermöglicht den Zugriff auf Hardware-Leistungszähler auf 
	CPU-Basis durch den Prozess.

dtrace_kernel
	Ermöglicht das DTrace-Tracing auf Kernelebene.

dtrace_proc
	Ermöglicht das DTrace-Tracing auf Prozessebene.Ermöglicht es, 
	Tracing-Proben auf Prozessebene in Prozesse zu übertragen, 
	fürdie der Benutzer zugriffsberechtigt ist, und sie dort zu 
	aktivieren.

dtrace_user
	Ermöglicht das DTrace-Tracing auf Benutzerebene.Ermöglicht den 
	Einsatz der Systemaufruf- und Profil-Provider für DTrace. 
	Dadurchkönnen Prozesse untersucht werden, für die der Benutzer 
	zugriffsberechtigt ist.

file_chown
	Ermöglicht die Änderung der Eigentümer-Benutzer-ID einer Datei 
	durch einen Prozess.Ermöglicht es einem Prozess, die Gruppen-ID 
	einer Datei in eine andere als dieeffektive Gruppen ID oder eine 
	der zusätzlichen Gruppen-IDs des Prozessesabzuändern.

file_chown_self
	Ermöglicht es einem Prozess, seine Dateien abzugeben. Ein 
	Prozess mit dieserBerechtigung wird ausgeführt, als wäre 
	{_POSIX_CHOWN_RESTRICTED} nichtwirksam.

file_dac_execute
	Ermöglicht es einem Prozess, eine ausführbare Datei auszuführen, 
	derenBerechtigungsbits oder ACL eine Ausführung durch den 
	Prozess nicht zulassen.

file_dac_read
	Ermöglicht es einem Prozess, Dateien oder Verzeichnisse zu 
	lesen, derenBerechtigungsbits oder ACL den Lesezugriff durch den 
	Prozess nicht zulassen.

file_dac_search
	Ermöglicht einem Prozess die Suche in einem Verzeichnis, dessen 
	Berechtigungsbitsoder ACL die Suche durch den Prozess nicht 
	zulassen.

file_dac_write
	Ermöglicht es einem Prozess, in Dateien oder Verzeichnisse zu 
	schreiben, derenBerechtigungsbits oder ACL den Schreibzugriff 
	durch den Prozess nicht zulassen.Zum Schreiben in Dateien des 
	Eigentümers UID 0 sind, sofern nicht die effektiveUID 0 gegeben 
	ist, alle Berechtigungen erforderlich.

file_link_any
	Ermöglicht es einem Prozess, Hardlinks auf Dateien zu erzeugen, 
	derenEigentümer-UID sich von der effektiven UID des Prozesses 
	unterscheidet.

file_owner
	Ermöglicht einem Prozess, der nicht der Eigentümer einer Datei 
	oder einesVerzeichnisses ist, die folgenden Vorgänge, die 
	normalerweise nur demDateieigentümer genehmigt sind: Ändern der 
	Zugriffs- und Änderungszeitdieser Datei; Entfernen oder 
	Umbenennen von Dateien oder Verzeichnissen,für deren 
	übergeordnetes Verzeichnis das (Sticky-)Bit save text imageafter 
	execution'' gesetzt ist; Einhängen eines namefs'' in eine 
	Datei;Ändern der Berechtigungsbits oder ACL mit Ausnahme der 
	Bits set-uid undset-gid.

file_setid
	Ermöglicht es einem Prozess, den Eigentümer einer Datei zu 
	ändern oder in eineDatei zu schreiben, ohne dass die Bits 
	set-user-ID und set-group-ID gelöschtwerden.Ermöglicht es einem 
	Prozess, das Bit set-group-ID für Dateien oderVerzeichnisse zu 
	setzen, deren Gruppe von der effektiven Gruppe oder einerder 
	zusätzlichen Gruppen des Prozesses abweicht.Ermöglicht es einem 
	Prozess, das Bit set-user-ID für eine Datei eines 
	anderenEigentümers zu setzen, wenn PRIV_FILE_OWNER gegeben 
	ist.Weitere Einschränkungen gelten für das Erzeugen oder 
	Änderneiner Datei mit set-uid 0.

ipc_dac_read
	Ermöglicht es einem Prozess, System V 
	IPC-Meldungswarteschlangen,Semaphore-Sets oder gemeinsam 
	genutzte Speichersegmente zu lesen,deren Berechtigungsbits einen 
	Lesezugriff durch den Prozess nichtzulassen. Ermöglicht es einem 
	Prozess, entfernte gemeinsame Speicherzu lesen, deren 
	Berechtigungsbits einen Lesezugriff durch den Prozessnicht 
	zulassen.

ipc_dac_write
	Ermöglicht es einem Prozess, in System V 
	IPC-Meldungswarteschlangen,Semaphore-Sets oder gemeinsam 
	genutzte Speichersegmente zu schreiben,deren Berechtigungsbits 
	einen Schreibzugriff durch den Prozess nichtzulassen. Ermöglicht 
	es einem Prozess, in entfernte gemeinsame Speicherzu schreiben, 
	deren Berechtigungsbits einen Lesezugriff durch den Prozessnicht 
	zulassen. Es gelten weitere Einschränkungen, wenn der Eigentümer 
	desObjekts UID 0 aufweist und die effektive UID des aktuellen 
	Prozessesnicht 0 ist.

ipc_owner
	Ermöglicht es einem Prozess, der nicht der Eigentümer einer 
	SystemV IPC-Meldungswarteschlange, eines Semaphore-Sets oder 
	eines gemeinsamenSpeichersegments ist, diese System V 
	IPC-Meldungswarteschlange, dasSemaphore-Set oder das gemeinsame 
	Speichersegment zu entfernen oder derenEigentümer oder 
	Berechtigungsbits zu ändern. Es gelten weitere 
	Einschränkungen,wenn der Eigentümer des Objekts UID 0 aufweist 
	und die effektive UID desaktuellen Prozesses nicht 0 ist.

net_icmpaccess
	Ermöglicht es einem Prozess, ICMP-Pakete zu senden und zu 
	empfangen.

net_privaddr
	Ermöglicht einem Prozess die Bindung an eine reservierte 
	Port-Nummer.Dabei handelt es sich um die Port-Nummern 1-1023 
	(die traditionellin UNIX reservierten Ports) sowie die mit 
	"udp/tcp_extra_priv_ports"gekennzeichneten Ports mit Ausnahme 
	der für die Verwendung durchNFS reservierten Ports.

net_rawaccess
	Ermöglicht einem Prozess den direkten Zugriff auf die 
	Netzwerkebene.

proc_audit
	Ermöglicht einem Prozess die Generierung von 
	Prüfdatensätzen.Ermöglicht es einem Prozess, seine eigenen 
	Audit-Vorauswahlinformationenabzurufen.

proc_chroot
	Ermöglicht es einem Prozess, sein Wurzelverzeichnis zu ändern.

proc_clock_highres
	Ermöglicht einem Prozess den Einsatz von Timern mit hoher 
	Auflösung.

proc_exec
	Ermöglicht es einem Prozess, execve() aufzurufen.

proc_fork
	Ermöglicht es einem Prozess, fork1()/forkall()/vfork() 
	aufzurufen.

proc_info
	Ermöglicht es einem Prozess, den Status von Prozessen zu 
	untersuchen,an die er keine Signale senden kann. Prozesse, die 
	nicht untersucht werdenkönnen, werden in /proc nicht aufgeführt 
	und sind scheinbar nicht existent.

proc_lock_memory
	Ermöglicht es einem Prozess, Pages im physischen Speicher zu 
	sperren.

proc_owner
	Ermöglicht es einem Prozess, Signale an andere Prozesse zu 
	senden und unabhängigvom Eigentümer den Status anderer Prozesse 
	zu untersuchen und zu ändern.Für das Ändern eines anderen 
	Prozesses gelten zusätzliche Einschränkungen:Der effektive 
	Berechtigungssatz des agierenden Prozesses muss ein 
	demeffektiven, genehmigten und vererbbaren Sätzen des 
	Zielprozesses übergeordneterSatz sein; der Begrenzungssatz muss 
	ein dem Begrenzungssatz des Zielsübergeordneter Satz sein; wenn 
	eine UID des Zielprozesses auf 0 gesetzt ist,müssen alle 
	Berechtigungen gegeben sein, es sei denn, die effektive UID ist 
	0.Ermöglicht es einem Prozess, beliebige Prozesse an CPUs zu 
	binden.

proc_priocntl
	Ermöglicht es einem Prozess, seine Priorität über die aktuelle 
	Stufe zu erhöhen.Ermöglicht es einem Prozess, seine 
	Scheduling-Klasse auf eine beliebigeScheduling-Klasse, 
	einschließlich der RT-Klasse, abzuändern.

proc_session
	Ermöglicht einem Prozess das Senden von Signalen an oder Tracen 
	von Prozessenaußerhalb seiner Sitzung.

proc_setid
	Ermöglicht es einem Prozess, seine UIDs beliebig zu setzen.Für 
	UID 0 müssen alle Berechtigungen gegeben sein.

proc_taskid
	Ermöglicht es einem Prozess, dem aufrufenden Prozess eine neue 
	Task-ID zuzuweisen.

proc_zone
	Ermöglicht einem Prozess das Senden von Signalen an oder Tracen 
	von Prozessenin anderen Zonen.

sys_acct
	Ermöglicht es einem Prozess die Abrechnung mit acct(2), 
	getacct(2),putacct(2) und wracct(2) zu aktivieren, deaktivieren 
	und zu verwalten.

sys_admin
	Ermöglicht einem Prozess die Durchführung von 
	Systemverwaltungsvorgängenwie das Setzen von Knoten und 
	Domainnamen und das Festlegen der nscd- und 
	coreadm-Einstellungen.

sys_audit
	Ermöglicht es einem Prozess, den (Kernel-) Audit-Dämon zu 
	starten.Ermöglicht einem Prozess das Einsehen und Festlegen des 
	Audit-Status (Audit-Benutzer-ID, -Terminal-ID, -Sitzungs-ID, 
	-Vorauswahlmaske).Ermöglicht es einem Prozess, das Auditing ein- 
	und auszuschalten.Ermöglicht es einem Prozess, die 
	Audit-Parameter zu konfigurieren (Cache-und Warteschlangengröße, 
	Ereignis für Klassenzuweisungen, Richtlinienoptionen).

sys_config
	Ermöglicht einem Prozess die Durchführung verschiedener 
	Systemkonfigurationsvorgänge.Ermöglicht es einem Prozess, 
	Swap-Geräte hinzuzufügen und zu entfernen; beimHinzufügen eines 
	Swap-Geräts muss der Prozess auch über ausreichende 
	Berechtigungenfür den Lese- und Schreibzugriff auf das 
	Swap-Gerät verfügen.

sys_devices
	Ermöglicht es einem Prozess, ein Kernel-Modul erfolgreich 
	aufzurufen, daszum Prüfen nach dem erlaubtem Zugriff die 
	Kernelfunktion drv_priv(9F)aufruft.Ermöglicht es einem Prozess, 
	das tatsächliche Konsolengerät direkt zu öffnen.Ermöglicht es 
	einem Prozess, Geräte zu öffnen, die exklusiv geöffnet wurden.

sys_ipc_config
	Ermöglicht es einem Prozess, die Größe eines Puffers für die 
	System V IPC-Meldungswarteschlange zu vergrößern.

sys_linkdir
	Ermöglicht es einem Prozess, Verzeichnisse zu verknüpfen und die 
	Verknüpfung aufzuheben.

sys_mount
	Ermöglicht dateisystemspezifische Administrationsvorgänge, wie 
	beispielsweiseDateisystemkonfiguration-Ioctls, quota-Aufrufe und 
	das Erstellen bzw. Löschenvon Momentaufnahmen.Ermöglicht es 
	einem Prozess, Dateisysteme ein- und auszuhängen, deren 
	Zugriffanderenfalls beschränkt wäre (d. h. die meisten 
	Dateisysteme außernamefs).Ein Prozess, der einen Einhängevorgang 
	durchführt, muss über die entsprechendeZugriffsberechtigung für 
	das einzuhängende Gerät verfügen (Lese-/Schreibzugrifffür 
	"rw"-Mounts, Lesezugriff für "ro"-Mounts).Ein Prozess, der einen 
	der o. g. Dateisystemvorgänge durchführt,muss über 
	Lese-/Schreib-/Eigentümer-Zugriff für denEinhängepunkt 
	verfügen.Prozesse, die nicht über alle Zonenbrechtigungen 
	verfügen, könnennur normale Dateien und Verzeichnisse als 
	Einhängepunkte verwenden.Sofern ein Prozess nicht über alle 
	Zonenberechtigungen verfügt, erzwingtder Systemaufruf mount(2) 
	die Optionen "nosuid" und "restrict";letztere nur für 
	autofs-Einhängepunkte.Unabhängig von den Berechtigungen kann ein 
	in einer nicht-globalen Zoneausgeführter Prozess nur Mounts 
	steuern, die von dieser Zone aus durchgeführtwerden. Außerhalb 
	der globalen Zone wird die Option "nodevices" immer erzwungen.

sys_net_config
	Ermöglicht es einem Prozess, die Schnittstellen und Routes eines 
	Systems zu konfigurieren.Ermöglicht es einem Prozess, mit ndd 
	Netzwerkparameter zu konfigurieren.Ermöglicht einem Prozess den 
	Zugriff mit ndd auf Daten, deren Zugriff ansonsten eingeschränkt 
	ist.Ermöglicht einem Prozess einen push-Vorgang mit dem rpcmod 
	STREAMs-Modul.Ermöglicht einem Prozess einen pop-Vorgang mit 
	verankerten STREAMs-Modulen.Ermöglicht es einem Prozess, 
	STREAMs-Module an andere Stellen als die oberstePosition im 
	Modulstack einzufügen bzw. von dort zu löschen.Ermöglicht es 
	einem Prozess, IPsec zu konfigurieren.

sys_nfs
	Ermöglicht es einem Prozess, private NFS-spezifische 
	Systemaufrufe von Sun durchzuführen.Ermöglicht einem Prozess das 
	Binden an Ports, die für NFS reserviert sind: Port 2049 (nfs) 
	und Port 4045 (lockd).

sys_res_config
	Ermöglicht es einem Prozess, Prozessorsätze zu erzeugen und zu 
	löschen, ihnenCPUs zuzuweisen und die Eigenschaft PSET_NOESCAPE 
	außer Kraft zu setzen.Ermöglicht es einem Prozess, mit 
	p_online(2) den Betriebsstatus von CPUsim System zu 
	ändern.Ermöglicht es einem Prozess, Ressourcen-Pools zu 
	konfigurieren und Prozessean Pools zu binden

sys_resource
	Ermöglicht es einem Prozess, die mit setrlimit(2) und setrctl(2) 
	angegebenenRessourcenbegrenzungen ohne Einschränkung zu 
	ändern.Ermöglicht es einem Prozess, die pro Benutzer maximal 
	zulässige Prozessanzahlzu überschreiten.Ermöglicht es einem 
	Prozess, Dateien auf einem Dateisystem zu erweitern oder 
	zuerzeugen, dem weniger als der mit minfree angegebene 
	Reserveplatz zur Verfügung steht.

sys_suser_compat
	Ermöglicht es einem Prozess, ein ladbares Modul eines 
	Fremdherstellers erfolgreichaufzurufen, das zum Prüfen nach 
	erlaubtem Zugriff die Kernelfunktion suser() aufruft.Diese 
	Berechtigung ist nur für die Kompatibilität mit ladbaren Modulen 
	vonFremdherstellern gegeben und wird von Solaris nicht 
	ordnungsgemäß verwendet.

sys_time
	Ermöglicht einem Prozess die Manipulation der Systemzeit 
	mithilfe eines derfolgenden Systemaufrufe: stime, adjtime, 
	ntp_adjtime sowieder IA-spezifischen RTC-Aufrufe.

